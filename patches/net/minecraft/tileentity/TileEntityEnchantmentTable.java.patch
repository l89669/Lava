--- ../src-base/minecraft/net/minecraft/tileentity/TileEntityEnchantmentTable.java
+++ ../src-work/minecraft/net/minecraft/tileentity/TileEntityEnchantmentTable.java
@@ -1,6 +1,5 @@
 package net.minecraft.tileentity;
 
-import java.util.Random;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.InventoryPlayer;
 import net.minecraft.inventory.Container;
@@ -13,8 +12,9 @@
 import net.minecraft.util.text.TextComponentTranslation;
 import net.minecraft.world.IInteractionObject;
 
-public class TileEntityEnchantmentTable extends TileEntity implements ITickable, IInteractionObject
-{
+import java.util.Random;
+
+public class TileEntityEnchantmentTable extends TileEntity implements ITickable, IInteractionObject {
     public int tickCount;
     public float pageFlip;
     public float pageFlipPrev;
@@ -28,92 +28,75 @@
     private static final Random rand = new Random();
     private String customName;
 
-    public NBTTagCompound writeToNBT(NBTTagCompound compound)
-    {
+    public NBTTagCompound writeToNBT(NBTTagCompound compound) {
         super.writeToNBT(compound);
 
-        if (this.hasCustomName())
-        {
+        if (this.hasCustomName()) {
             compound.setString("CustomName", this.customName);
         }
 
         return compound;
     }
 
-    public void readFromNBT(NBTTagCompound compound)
-    {
+    public void readFromNBT(NBTTagCompound compound) {
         super.readFromNBT(compound);
 
-        if (compound.hasKey("CustomName", 8))
-        {
+        if (compound.hasKey("CustomName", 8)) {
             this.customName = compound.getString("CustomName");
         }
     }
 
-    public void update()
-    {
+    public void update() {
         this.bookSpreadPrev = this.bookSpread;
         this.bookRotationPrev = this.bookRotation;
-        EntityPlayer entityplayer = this.world.getClosestPlayer((double)((float)this.pos.getX() + 0.5F), (double)((float)this.pos.getY() + 0.5F), (double)((float)this.pos.getZ() + 0.5F), 3.0D, false);
+        EntityPlayer entityplayer = this.world.getClosestPlayer((double) ((float) this.pos.getX() + 0.5F), (double) ((float) this.pos.getY() + 0.5F), (double) ((float) this.pos.getZ() + 0.5F), 3.0D, false);
 
-        if (entityplayer != null)
-        {
-            double d0 = entityplayer.posX - (double)((float)this.pos.getX() + 0.5F);
-            double d1 = entityplayer.posZ - (double)((float)this.pos.getZ() + 0.5F);
-            this.tRot = (float)MathHelper.atan2(d1, d0);
+        if (entityplayer != null) {
+            double d0 = entityplayer.posX - (double) ((float) this.pos.getX() + 0.5F);
+            double d1 = entityplayer.posZ - (double) ((float) this.pos.getZ() + 0.5F);
+            this.tRot = (float) MathHelper.atan2(d1, d0);
             this.bookSpread += 0.1F;
 
-            if (this.bookSpread < 0.5F || rand.nextInt(40) == 0)
-            {
+            if (this.bookSpread < 0.5F || rand.nextInt(40) == 0) {
                 float f1 = this.flipT;
 
-                while (true)
-                {
-                    this.flipT += (float)(rand.nextInt(4) - rand.nextInt(4));
+                while (true) {
+                    this.flipT += (float) (rand.nextInt(4) - rand.nextInt(4));
 
-                    if (f1 != this.flipT)
-                    {
+                    if (f1 != this.flipT) {
                         break;
                     }
                 }
             }
-        }
-        else
-        {
+        } else {
             this.tRot += 0.02F;
             this.bookSpread -= 0.1F;
         }
 
-        while (this.bookRotation >= (float)Math.PI)
-        {
-            this.bookRotation -= ((float)Math.PI * 2F);
+        while (this.bookRotation >= (float) Math.PI) {
+            this.bookRotation -= ((float) Math.PI * 2F);
         }
 
-        while (this.bookRotation < -(float)Math.PI)
-        {
-            this.bookRotation += ((float)Math.PI * 2F);
+        while (this.bookRotation < -(float) Math.PI) {
+            this.bookRotation += ((float) Math.PI * 2F);
         }
 
-        while (this.tRot >= (float)Math.PI)
-        {
-            this.tRot -= ((float)Math.PI * 2F);
+        while (this.tRot >= (float) Math.PI) {
+            this.tRot -= ((float) Math.PI * 2F);
         }
 
-        while (this.tRot < -(float)Math.PI)
-        {
-            this.tRot += ((float)Math.PI * 2F);
+        while (this.tRot < -(float) Math.PI) {
+            this.tRot += ((float) Math.PI * 2F);
         }
 
         float f2;
 
-        for (f2 = this.tRot - this.bookRotation; f2 >= (float)Math.PI; f2 -= ((float)Math.PI * 2F))
-        {
+        for (f2 = this.tRot - this.bookRotation; f2 >= (float) Math.PI; f2 -= ((float) Math.PI * 2F)) {
             ;
         }
 
-        while (f2 < -(float)Math.PI)
-        {
-            f2 += ((float)Math.PI * 2F);
+        while (f2 < -(float) Math.PI) {
+            f2 += ((float) Math.PI * 2F);
         }
 
         this.bookRotation += f2 * 0.4F;
@@ -127,33 +110,27 @@
         this.pageFlip += this.flipA;
     }
 
-    public String getName()
-    {
+    public String getName() {
         return this.hasCustomName() ? this.customName : "container.enchant";
     }
 
-    public boolean hasCustomName()
-    {
+    public boolean hasCustomName() {
         return this.customName != null && !this.customName.isEmpty();
     }
 
-    public void setCustomName(String customNameIn)
-    {
+    public void setCustomName(String customNameIn) {
         this.customName = customNameIn;
     }
 
-    public ITextComponent getDisplayName()
-    {
-        return (ITextComponent)(this.hasCustomName() ? new TextComponentString(this.getName()) : new TextComponentTranslation(this.getName(), new Object[0]));
+    public ITextComponent getDisplayName() {
+        return (ITextComponent) (this.hasCustomName() ? new TextComponentString(this.getName()) : new TextComponentTranslation(this.getName(), new Object[0]));
     }
 
-    public Container createContainer(InventoryPlayer playerInventory, EntityPlayer playerIn)
-    {
+    public Container createContainer(InventoryPlayer playerInventory, EntityPlayer playerIn) {
         return new ContainerEnchantment(playerInventory, this.world, this.pos);
     }
 
-    public String getGuiID()
-    {
+    public String getGuiID() {
         return "minecraft:enchanting_table";
     }
 }
