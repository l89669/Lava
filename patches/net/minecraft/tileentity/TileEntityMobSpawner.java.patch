--- ../src-base/minecraft/net/minecraft/tileentity/TileEntityMobSpawner.java
+++ ../src-work/minecraft/net/minecraft/tileentity/TileEntityMobSpawner.java
@@ -1,6 +1,5 @@
 package net.minecraft.tileentity;
 
-import javax.annotation.Nullable;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.init.Blocks;
 import net.minecraft.nbt.NBTTagCompound;
@@ -16,48 +15,40 @@
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.world.World;
 
-public class TileEntityMobSpawner extends TileEntity implements ITickable
-{
-    private final MobSpawnerBaseLogic spawnerLogic = new MobSpawnerBaseLogic()
-    {
-        public void broadcastEvent(int id)
-        {
+import javax.annotation.Nullable;
+
+public class TileEntityMobSpawner extends TileEntity implements ITickable {
+    private final MobSpawnerBaseLogic spawnerLogic = new MobSpawnerBaseLogic() {
+        public void broadcastEvent(int id) {
             TileEntityMobSpawner.this.world.addBlockEvent(TileEntityMobSpawner.this.pos, Blocks.MOB_SPAWNER, id, 0);
         }
-        public World getSpawnerWorld()
-        {
+
+        public World getSpawnerWorld() {
             return TileEntityMobSpawner.this.world;
         }
-        public BlockPos getSpawnerPosition()
-        {
+
+        public BlockPos getSpawnerPosition() {
             return TileEntityMobSpawner.this.pos;
         }
-        public void setNextSpawnData(WeightedSpawnerEntity p_184993_1_)
-        {
+
+        public void setNextSpawnData(WeightedSpawnerEntity p_184993_1_) {
             super.setNextSpawnData(p_184993_1_);
 
-            if (this.getSpawnerWorld() != null)
-            {
+            if (this.getSpawnerWorld() != null) {
                 IBlockState iblockstate = this.getSpawnerWorld().getBlockState(this.getSpawnerPosition());
                 this.getSpawnerWorld().notifyBlockUpdate(TileEntityMobSpawner.this.pos, iblockstate, iblockstate, 4);
             }
         }
     };
 
-    public static void registerFixesMobSpawner(DataFixer fixer)
-    {
-        fixer.registerWalker(FixTypes.BLOCK_ENTITY, new IDataWalker()
-        {
-            public NBTTagCompound process(IDataFixer fixer, NBTTagCompound compound, int versionIn)
-            {
-                if (TileEntity.getKey(TileEntityMobSpawner.class).equals(new ResourceLocation(compound.getString("id"))))
-                {
-                    if (compound.hasKey("SpawnPotentials", 9))
-                    {
+    public static void registerFixesMobSpawner(DataFixer fixer) {
+        fixer.registerWalker(FixTypes.BLOCK_ENTITY, new IDataWalker() {
+            public NBTTagCompound process(IDataFixer fixer, NBTTagCompound compound, int versionIn) {
+                if (TileEntity.getKey(TileEntityMobSpawner.class).equals(new ResourceLocation(compound.getString("id")))) {
+                    if (compound.hasKey("SpawnPotentials", 9)) {
                         NBTTagList nbttaglist = compound.getTagList("SpawnPotentials", 10);
 
-                        for (int i = 0; i < nbttaglist.tagCount(); ++i)
-                        {
+                        for (int i = 0; i < nbttaglist.tagCount(); ++i) {
                             NBTTagCompound nbttagcompound = nbttaglist.getCompoundTagAt(i);
                             nbttagcompound.setTag("Entity", fixer.process(FixTypes.ENTITY, nbttagcompound.getCompoundTag("Entity"), versionIn));
                         }
@@ -71,49 +62,41 @@
         });
     }
 
-    public void readFromNBT(NBTTagCompound compound)
-    {
+    public void readFromNBT(NBTTagCompound compound) {
         super.readFromNBT(compound);
         this.spawnerLogic.readFromNBT(compound);
     }
 
-    public NBTTagCompound writeToNBT(NBTTagCompound compound)
-    {
+    public NBTTagCompound writeToNBT(NBTTagCompound compound) {
         super.writeToNBT(compound);
         this.spawnerLogic.writeToNBT(compound);
         return compound;
     }
 
-    public void update()
-    {
+    public void update() {
         this.spawnerLogic.updateSpawner();
     }
 
     @Nullable
-    public SPacketUpdateTileEntity getUpdatePacket()
-    {
+    public SPacketUpdateTileEntity getUpdatePacket() {
         return new SPacketUpdateTileEntity(this.pos, 1, this.getUpdateTag());
     }
 
-    public NBTTagCompound getUpdateTag()
-    {
+    public NBTTagCompound getUpdateTag() {
         NBTTagCompound nbttagcompound = this.writeToNBT(new NBTTagCompound());
         nbttagcompound.removeTag("SpawnPotentials");
         return nbttagcompound;
     }
 
-    public boolean receiveClientEvent(int id, int type)
-    {
+    public boolean receiveClientEvent(int id, int type) {
         return this.spawnerLogic.setDelayToMin(id) ? true : super.receiveClientEvent(id, type);
     }
 
-    public boolean onlyOpsCanSetNbt()
-    {
+    public boolean onlyOpsCanSetNbt() {
         return true;
     }
 
-    public MobSpawnerBaseLogic getSpawnerBaseLogic()
-    {
+    public MobSpawnerBaseLogic getSpawnerBaseLogic() {
         return this.spawnerLogic;
     }
 }
