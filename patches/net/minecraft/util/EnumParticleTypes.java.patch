--- ../src-base/minecraft/net/minecraft/util/EnumParticleTypes.java
+++ ../src-work/minecraft/net/minecraft/util/EnumParticleTypes.java
@@ -1,12 +1,12 @@
 package net.minecraft.util;
 
 import com.google.common.collect.Maps;
+
+import javax.annotation.Nullable;
 import java.util.Map;
 import java.util.Set;
-import javax.annotation.Nullable;
 
-public enum EnumParticleTypes
-{
+public enum EnumParticleTypes {
     EXPLOSION_NORMAL("explode", 0, true),
     EXPLOSION_LARGE("largeexplode", 1, true),
     EXPLOSION_HUGE("hugeexplosion", 2, true),
@@ -64,60 +64,49 @@
     private static final Map<Integer, EnumParticleTypes> PARTICLES = Maps.<Integer, EnumParticleTypes>newHashMap();
     private static final Map<String, EnumParticleTypes> BY_NAME = Maps.<String, EnumParticleTypes>newHashMap();
 
-    private EnumParticleTypes(String particleNameIn, int particleIDIn, boolean shouldIgnoreRangeIn, int argumentCountIn)
-    {
+    private EnumParticleTypes(String particleNameIn, int particleIDIn, boolean shouldIgnoreRangeIn, int argumentCountIn) {
         this.particleName = particleNameIn;
         this.particleID = particleIDIn;
         this.shouldIgnoreRange = shouldIgnoreRangeIn;
         this.argumentCount = argumentCountIn;
     }
 
-    private EnumParticleTypes(String particleNameIn, int particleIDIn, boolean shouldIgnoreRangeIn)
-    {
+    private EnumParticleTypes(String particleNameIn, int particleIDIn, boolean shouldIgnoreRangeIn) {
         this(particleNameIn, particleIDIn, shouldIgnoreRangeIn, 0);
     }
 
-    public static Set<String> getParticleNames()
-    {
+    public static Set<String> getParticleNames() {
         return BY_NAME.keySet();
     }
 
-    public String getParticleName()
-    {
+    public String getParticleName() {
         return this.particleName;
     }
 
-    public int getParticleID()
-    {
+    public int getParticleID() {
         return this.particleID;
     }
 
-    public int getArgumentCount()
-    {
+    public int getArgumentCount() {
         return this.argumentCount;
     }
 
-    public boolean getShouldIgnoreRange()
-    {
+    public boolean getShouldIgnoreRange() {
         return this.shouldIgnoreRange;
     }
 
     @Nullable
-    public static EnumParticleTypes getParticleFromId(int particleId)
-    {
+    public static EnumParticleTypes getParticleFromId(int particleId) {
         return PARTICLES.get(Integer.valueOf(particleId));
     }
 
     @Nullable
-    public static EnumParticleTypes getByName(String nameIn)
-    {
+    public static EnumParticleTypes getByName(String nameIn) {
         return BY_NAME.get(nameIn);
     }
 
-    static
-    {
-        for (EnumParticleTypes enumparticletypes : values())
-        {
+    static {
+        for (EnumParticleTypes enumparticletypes : values()) {
             PARTICLES.put(Integer.valueOf(enumparticletypes.getParticleID()), enumparticletypes);
             BY_NAME.put(enumparticletypes.getParticleName(), enumparticletypes);
         }
