--- ../src-base/minecraft/net/minecraft/util/EnumTypeAdapterFactory.java
+++ ../src-work/minecraft/net/minecraft/util/EnumTypeAdapterFactory.java
@@ -8,54 +8,41 @@
 import com.google.gson.stream.JsonReader;
 import com.google.gson.stream.JsonToken;
 import com.google.gson.stream.JsonWriter;
+
+import javax.annotation.Nullable;
 import java.io.IOException;
 import java.util.Locale;
 import java.util.Map;
-import javax.annotation.Nullable;
 
-public class EnumTypeAdapterFactory implements TypeAdapterFactory
-{
+public class EnumTypeAdapterFactory implements TypeAdapterFactory {
     @Nullable
-    public <T> TypeAdapter<T> create(Gson p_create_1_, TypeToken<T> p_create_2_)
-    {
-        Class<T> oclass = (Class<T>)p_create_2_.getRawType();
+    public <T> TypeAdapter<T> create(Gson p_create_1_, TypeToken<T> p_create_2_) {
+        Class<T> oclass = (Class<T>) p_create_2_.getRawType();
 
-        if (!oclass.isEnum())
-        {
+        if (!oclass.isEnum()) {
             return null;
-        }
-        else
-        {
+        } else {
             final Map<String, T> map = Maps.<String, T>newHashMap();
 
-            for (T t : oclass.getEnumConstants())
-            {
+            for (T t : oclass.getEnumConstants()) {
                 map.put(this.getName(t), t);
             }
 
-            return new TypeAdapter<T>()
-            {
-                public void write(JsonWriter p_write_1_, T p_write_2_) throws IOException
-                {
-                    if (p_write_2_ == null)
-                    {
+            return new TypeAdapter<T>() {
+                public void write(JsonWriter p_write_1_, T p_write_2_) throws IOException {
+                    if (p_write_2_ == null) {
                         p_write_1_.nullValue();
-                    }
-                    else
-                    {
+                    } else {
                         p_write_1_.value(EnumTypeAdapterFactory.this.getName(p_write_2_));
                     }
                 }
+
                 @Nullable
-                public T read(JsonReader p_read_1_) throws IOException
-                {
-                    if (p_read_1_.peek() == JsonToken.NULL)
-                    {
+                public T read(JsonReader p_read_1_) throws IOException {
+                    if (p_read_1_.peek() == JsonToken.NULL) {
                         p_read_1_.nextNull();
-                        return (T)null;
-                    }
-                    else
-                    {
+                        return (T) null;
+                    } else {
                         return map.get(p_read_1_.nextString());
                     }
                 }
@@ -63,8 +50,7 @@
         }
     }
 
-    private String getName(Object objectIn)
-    {
-        return objectIn instanceof Enum ? ((Enum)objectIn).name().toLowerCase(Locale.ROOT) : objectIn.toString().toLowerCase(Locale.ROOT);
+    private String getName(Object objectIn) {
+        return objectIn instanceof Enum ? ((Enum) objectIn).name().toLowerCase(Locale.ROOT) : objectIn.toString().toLowerCase(Locale.ROOT);
     }
 }
