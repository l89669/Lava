--- ../src-base/minecraft/net/minecraft/util/math/RayTraceResult.java
+++ ../src-work/minecraft/net/minecraft/util/math/RayTraceResult.java
@@ -3,12 +3,15 @@
 import net.minecraft.entity.Entity;
 import net.minecraft.util.EnumFacing;
 
-public class RayTraceResult
-{
-    /** Used to determine what sub-segment is hit */
+public class RayTraceResult {
+    /**
+     * Used to determine what sub-segment is hit
+     */
     public int subHit = -1;
 
-    /** Used to add extra hit info */
+    /**
+     * Used to add extra hit info
+     */
     public Object hitInfo = null;
 
     private BlockPos blockPos;
@@ -17,48 +20,40 @@
     public Vec3d hitVec;
     public Entity entityHit;
 
-    public RayTraceResult(Vec3d hitVecIn, EnumFacing sideHitIn, BlockPos blockPosIn)
-    {
+    public RayTraceResult(Vec3d hitVecIn, EnumFacing sideHitIn, BlockPos blockPosIn) {
         this(RayTraceResult.Type.BLOCK, hitVecIn, sideHitIn, blockPosIn);
     }
 
-    public RayTraceResult(Vec3d hitVecIn, EnumFacing sideHitIn)
-    {
+    public RayTraceResult(Vec3d hitVecIn, EnumFacing sideHitIn) {
         this(RayTraceResult.Type.BLOCK, hitVecIn, sideHitIn, BlockPos.ORIGIN);
     }
 
-    public RayTraceResult(Entity entityIn)
-    {
+    public RayTraceResult(Entity entityIn) {
         this(entityIn, new Vec3d(entityIn.posX, entityIn.posY, entityIn.posZ));
     }
 
-    public RayTraceResult(RayTraceResult.Type typeIn, Vec3d hitVecIn, EnumFacing sideHitIn, BlockPos blockPosIn)
-    {
+    public RayTraceResult(RayTraceResult.Type typeIn, Vec3d hitVecIn, EnumFacing sideHitIn, BlockPos blockPosIn) {
         this.typeOfHit = typeIn;
         this.blockPos = blockPosIn;
         this.sideHit = sideHitIn;
         this.hitVec = new Vec3d(hitVecIn.x, hitVecIn.y, hitVecIn.z);
     }
 
-    public RayTraceResult(Entity entityHitIn, Vec3d hitVecIn)
-    {
+    public RayTraceResult(Entity entityHitIn, Vec3d hitVecIn) {
         this.typeOfHit = RayTraceResult.Type.ENTITY;
         this.entityHit = entityHitIn;
         this.hitVec = hitVecIn;
     }
 
-    public BlockPos getBlockPos()
-    {
+    public BlockPos getBlockPos() {
         return this.blockPos;
     }
 
-    public String toString()
-    {
+    public String toString() {
         return "HitResult{type=" + this.typeOfHit + ", blockpos=" + this.blockPos + ", f=" + this.sideHit + ", pos=" + this.hitVec + ", entity=" + this.entityHit + '}';
     }
 
-    public static enum Type
-    {
+    public static enum Type {
         MISS,
         BLOCK,
         ENTITY;
