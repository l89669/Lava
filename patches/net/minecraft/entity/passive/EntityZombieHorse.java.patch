--- ../src-base/minecraft/net/minecraft/entity/passive/EntityZombieHorse.java
+++ ../src-work/minecraft/net/minecraft/entity/passive/EntityZombieHorse.java
@@ -1,6 +1,5 @@
 package net.minecraft.entity.passive;
 
-import javax.annotation.Nullable;
 import net.minecraft.entity.EnumCreatureAttribute;
 import net.minecraft.entity.SharedMonsterAttributes;
 import net.minecraft.entity.player.EntityPlayer;
@@ -15,93 +14,71 @@
 import net.minecraft.world.World;
 import net.minecraft.world.storage.loot.LootTableList;
 
-public class EntityZombieHorse extends AbstractHorse
-{
-    public EntityZombieHorse(World worldIn)
-    {
+import javax.annotation.Nullable;
+
+public class EntityZombieHorse extends AbstractHorse {
+    public EntityZombieHorse(World worldIn) {
         super(worldIn);
     }
 
-    public static void registerFixesZombieHorse(DataFixer fixer)
-    {
+    public static void registerFixesZombieHorse(DataFixer fixer) {
         AbstractHorse.registerFixesAbstractHorse(fixer, EntityZombieHorse.class);
     }
 
-    protected void applyEntityAttributes()
-    {
+    protected void applyEntityAttributes() {
         super.applyEntityAttributes();
         this.getEntityAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(15.0D);
         this.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.20000000298023224D);
         this.getEntityAttribute(JUMP_STRENGTH).setBaseValue(this.getModifiedJumpStrength());
     }
 
-    public EnumCreatureAttribute getCreatureAttribute()
-    {
+    public EnumCreatureAttribute getCreatureAttribute() {
         return EnumCreatureAttribute.UNDEAD;
     }
 
-    protected SoundEvent getAmbientSound()
-    {
+    protected SoundEvent getAmbientSound() {
         super.getAmbientSound();
         return SoundEvents.ENTITY_ZOMBIE_HORSE_AMBIENT;
     }
 
-    protected SoundEvent getDeathSound()
-    {
+    protected SoundEvent getDeathSound() {
         super.getDeathSound();
         return SoundEvents.ENTITY_ZOMBIE_HORSE_DEATH;
     }
 
-    protected SoundEvent getHurtSound(DamageSource damageSourceIn)
-    {
+    protected SoundEvent getHurtSound(DamageSource damageSourceIn) {
         super.getHurtSound(damageSourceIn);
         return SoundEvents.ENTITY_ZOMBIE_HORSE_HURT;
     }
 
     @Nullable
-    protected ResourceLocation getLootTable()
-    {
+    protected ResourceLocation getLootTable() {
         return LootTableList.ENTITIES_ZOMBIE_HORSE;
     }
 
-    public boolean processInteract(EntityPlayer player, EnumHand hand)
-    {
+    public boolean processInteract(EntityPlayer player, EnumHand hand) {
         ItemStack itemstack = player.getHeldItem(hand);
         boolean flag = !itemstack.isEmpty();
 
-        if (flag && itemstack.getItem() == Items.SPAWN_EGG)
-        {
+        if (flag && itemstack.getItem() == Items.SPAWN_EGG) {
             return super.processInteract(player, hand);
-        }
-        else if (!this.isTame())
-        {
+        } else if (!this.isTame()) {
             return false;
-        }
-        else if (this.isChild())
-        {
+        } else if (this.isChild()) {
             return super.processInteract(player, hand);
-        }
-        else if (player.isSneaking())
-        {
+        } else if (player.isSneaking()) {
             this.openGUI(player);
             return true;
-        }
-        else if (this.isBeingRidden())
-        {
+        } else if (this.isBeingRidden()) {
             return super.processInteract(player, hand);
-        }
-        else
-        {
-            if (flag)
-            {
-                if (!this.isHorseSaddled() && itemstack.getItem() == Items.SADDLE)
-                {
+        } else {
+            if (flag) {
+                if (!this.isHorseSaddled() && itemstack.getItem() == Items.SADDLE) {
                     this.openGUI(player);
                     return true;
                 }
 
-                if (itemstack.interactWithEntity(player, this, hand))
-                {
+                if (itemstack.interactWithEntity(player, this, hand)) {
                     return true;
                 }
             }
