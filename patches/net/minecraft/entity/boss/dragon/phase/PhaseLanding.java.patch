--- ../src-base/minecraft/net/minecraft/entity/boss/dragon/phase/PhaseLanding.java
+++ ../src-work/minecraft/net/minecraft/entity/boss/dragon/phase/PhaseLanding.java
@@ -1,31 +1,28 @@
 package net.minecraft.entity.boss.dragon.phase;
 
-import javax.annotation.Nullable;
 import net.minecraft.entity.boss.EntityDragon;
 import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.util.math.Vec3d;
 import net.minecraft.world.gen.feature.WorldGenEndPodium;
 
-public class PhaseLanding extends PhaseBase
-{
+import javax.annotation.Nullable;
+
+public class PhaseLanding extends PhaseBase {
     private Vec3d targetLocation;
 
-    public PhaseLanding(EntityDragon dragonIn)
-    {
+    public PhaseLanding(EntityDragon dragonIn) {
         super(dragonIn);
     }
 
-    public void doClientRenderEffects()
-    {
+    public void doClientRenderEffects() {
         Vec3d vec3d = this.dragon.getHeadLookVec(1.0F).normalize();
-        vec3d.rotateYaw(-((float)Math.PI / 4F));
+        vec3d.rotateYaw(-((float) Math.PI / 4F));
         double d0 = this.dragon.dragonPartHead.posX;
-        double d1 = this.dragon.dragonPartHead.posY + (double)(this.dragon.dragonPartHead.height / 2.0F);
+        double d1 = this.dragon.dragonPartHead.posY + (double) (this.dragon.dragonPartHead.height / 2.0F);
         double d2 = this.dragon.dragonPartHead.posZ;
 
-        for (int i = 0; i < 8; ++i)
-        {
+        for (int i = 0; i < 8; ++i) {
             double d3 = d0 + this.dragon.getRNG().nextGaussian() / 2.0D;
             double d4 = d1 + this.dragon.getRNG().nextGaussian() / 2.0D;
             double d5 = d2 + this.dragon.getRNG().nextGaussian() / 2.0D;
@@ -34,45 +31,37 @@
         }
     }
 
-    public void doLocalUpdate()
-    {
-        if (this.targetLocation == null)
-        {
+    public void doLocalUpdate() {
+        if (this.targetLocation == null) {
             this.targetLocation = new Vec3d(this.dragon.world.getTopSolidOrLiquidBlock(WorldGenEndPodium.END_PODIUM_LOCATION));
         }
 
-        if (this.targetLocation.squareDistanceTo(this.dragon.posX, this.dragon.posY, this.dragon.posZ) < 1.0D)
-        {
-            ((PhaseSittingFlaming)this.dragon.getPhaseManager().getPhase(PhaseList.SITTING_FLAMING)).resetFlameCount();
+        if (this.targetLocation.squareDistanceTo(this.dragon.posX, this.dragon.posY, this.dragon.posZ) < 1.0D) {
+            ((PhaseSittingFlaming) this.dragon.getPhaseManager().getPhase(PhaseList.SITTING_FLAMING)).resetFlameCount();
             this.dragon.getPhaseManager().setPhase(PhaseList.SITTING_SCANNING);
         }
     }
 
-    public float getMaxRiseOrFall()
-    {
+    public float getMaxRiseOrFall() {
         return 1.5F;
     }
 
-    public float getYawFactor()
-    {
+    public float getYawFactor() {
         float f = MathHelper.sqrt(this.dragon.motionX * this.dragon.motionX + this.dragon.motionZ * this.dragon.motionZ) + 1.0F;
         float f1 = Math.min(f, 40.0F);
         return f1 / f;
     }
 
-    public void initPhase()
-    {
+    public void initPhase() {
         this.targetLocation = null;
     }
 
     @Nullable
-    public Vec3d getTargetLocation()
-    {
+    public Vec3d getTargetLocation() {
         return this.targetLocation;
     }
 
-    public PhaseList<PhaseLanding> getType()
-    {
+    public PhaseList<PhaseLanding> getType() {
         return PhaseList.LANDING;
     }
 }
