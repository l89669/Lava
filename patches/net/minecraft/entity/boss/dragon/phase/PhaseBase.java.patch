--- ../src-base/minecraft/net/minecraft/entity/boss/dragon/phase/PhaseBase.java
+++ ../src-work/minecraft/net/minecraft/entity/boss/dragon/phase/PhaseBase.java
@@ -1,6 +1,5 @@
 package net.minecraft.entity.boss.dragon.phase;
 
-import javax.annotation.Nullable;
 import net.minecraft.entity.MultiPartEntityPart;
 import net.minecraft.entity.boss.EntityDragon;
 import net.minecraft.entity.item.EntityEnderCrystal;
@@ -10,58 +9,48 @@
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.util.math.Vec3d;
 
-public abstract class PhaseBase implements IPhase
-{
+import javax.annotation.Nullable;
+
+public abstract class PhaseBase implements IPhase {
     protected final EntityDragon dragon;
 
-    public PhaseBase(EntityDragon dragonIn)
-    {
+    public PhaseBase(EntityDragon dragonIn) {
         this.dragon = dragonIn;
     }
 
-    public boolean getIsStationary()
-    {
+    public boolean getIsStationary() {
         return false;
     }
 
-    public void doClientRenderEffects()
-    {
+    public void doClientRenderEffects() {
     }
 
-    public void doLocalUpdate()
-    {
+    public void doLocalUpdate() {
     }
 
-    public void onCrystalDestroyed(EntityEnderCrystal crystal, BlockPos pos, DamageSource dmgSrc, @Nullable EntityPlayer plyr)
-    {
+    public void onCrystalDestroyed(EntityEnderCrystal crystal, BlockPos pos, DamageSource dmgSrc, @Nullable EntityPlayer plyr) {
     }
 
-    public void initPhase()
-    {
+    public void initPhase() {
     }
 
-    public void removeAreaEffect()
-    {
+    public void removeAreaEffect() {
     }
 
-    public float getMaxRiseOrFall()
-    {
+    public float getMaxRiseOrFall() {
         return 0.6F;
     }
 
     @Nullable
-    public Vec3d getTargetLocation()
-    {
+    public Vec3d getTargetLocation() {
         return null;
     }
 
-    public float getAdjustedDamage(MultiPartEntityPart pt, DamageSource src, float damage)
-    {
+    public float getAdjustedDamage(MultiPartEntityPart pt, DamageSource src, float damage) {
         return damage;
     }
 
-    public float getYawFactor()
-    {
+    public float getYawFactor() {
         float f = MathHelper.sqrt(this.dragon.motionX * this.dragon.motionX + this.dragon.motionZ * this.dragon.motionZ) + 1.0F;
         float f1 = Math.min(f, 40.0F);
         return 0.7F / f1 / f;
