--- ../src-base/minecraft/net/minecraft/entity/boss/dragon/phase/PhaseTakeoff.java
+++ ../src-work/minecraft/net/minecraft/entity/boss/dragon/phase/PhaseTakeoff.java
@@ -1,6 +1,5 @@
 package net.minecraft.entity.boss.dragon.phase;
 
-import javax.annotation.Nullable;
 import net.minecraft.entity.boss.EntityDragon;
 import net.minecraft.pathfinding.Path;
 import net.minecraft.pathfinding.PathPoint;
@@ -8,86 +7,71 @@
 import net.minecraft.util.math.Vec3d;
 import net.minecraft.world.gen.feature.WorldGenEndPodium;
 
-public class PhaseTakeoff extends PhaseBase
-{
+import javax.annotation.Nullable;
+
+public class PhaseTakeoff extends PhaseBase {
     private boolean firstTick;
     private Path currentPath;
     private Vec3d targetLocation;
 
-    public PhaseTakeoff(EntityDragon dragonIn)
-    {
+    public PhaseTakeoff(EntityDragon dragonIn) {
         super(dragonIn);
     }
 
-    public void doLocalUpdate()
-    {
-        if (!this.firstTick && this.currentPath != null)
-        {
+    public void doLocalUpdate() {
+        if (!this.firstTick && this.currentPath != null) {
             BlockPos blockpos = this.dragon.world.getTopSolidOrLiquidBlock(WorldGenEndPodium.END_PODIUM_LOCATION);
             double d0 = this.dragon.getDistanceSqToCenter(blockpos);
 
-            if (d0 > 100.0D)
-            {
+            if (d0 > 100.0D) {
                 this.dragon.getPhaseManager().setPhase(PhaseList.HOLDING_PATTERN);
             }
-        }
-        else
-        {
+        } else {
             this.firstTick = false;
             this.findNewTarget();
         }
     }
 
-    public void initPhase()
-    {
+    public void initPhase() {
         this.firstTick = true;
         this.currentPath = null;
         this.targetLocation = null;
     }
 
-    private void findNewTarget()
-    {
+    private void findNewTarget() {
         int i = this.dragon.initPathPoints();
         Vec3d vec3d = this.dragon.getHeadLookVec(1.0F);
         int j = this.dragon.getNearestPpIdx(-vec3d.x * 40.0D, 105.0D, -vec3d.z * 40.0D);
 
-        if (this.dragon.getFightManager() != null && this.dragon.getFightManager().getNumAliveCrystals() > 0)
-        {
+        if (this.dragon.getFightManager() != null && this.dragon.getFightManager().getNumAliveCrystals() > 0) {
             j = j % 12;
 
-            if (j < 0)
-            {
+            if (j < 0) {
                 j += 12;
             }
-        }
-        else
-        {
+        } else {
             j = j - 12;
             j = j & 7;
             j = j + 12;
         }
 
-        this.currentPath = this.dragon.findPath(i, j, (PathPoint)null);
+        this.currentPath = this.dragon.findPath(i, j, (PathPoint) null);
 
-        if (this.currentPath != null)
-        {
+        if (this.currentPath != null) {
             this.currentPath.incrementPathIndex();
             this.navigateToNextPathNode();
         }
     }
 
-    private void navigateToNextPathNode()
-    {
+    private void navigateToNextPathNode() {
         Vec3d vec3d = this.currentPath.getCurrentPos();
         this.currentPath.incrementPathIndex();
         double d0;
 
-        while (true)
-        {
-            d0 = vec3d.y + (double)(this.dragon.getRNG().nextFloat() * 20.0F);
+        while (true) {
+            d0 = vec3d.y + (double) (this.dragon.getRNG().nextFloat() * 20.0F);
 
-            if (d0 >= vec3d.y)
-            {
+            if (d0 >= vec3d.y) {
                 break;
             }
         }
@@ -96,13 +80,11 @@
     }
 
     @Nullable
-    public Vec3d getTargetLocation()
-    {
+    public Vec3d getTargetLocation() {
         return this.targetLocation;
     }
 
-    public PhaseList<PhaseTakeoff> getType()
-    {
+    public PhaseList<PhaseTakeoff> getType() {
         return PhaseList.TAKEOFF;
     }
 }
