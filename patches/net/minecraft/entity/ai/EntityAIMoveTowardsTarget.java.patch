--- ../src-base/minecraft/net/minecraft/entity/ai/EntityAIMoveTowardsTarget.java
+++ ../src-work/minecraft/net/minecraft/entity/ai/EntityAIMoveTowardsTarget.java
@@ -4,8 +4,7 @@
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.util.math.Vec3d;
 
-public class EntityAIMoveTowardsTarget extends EntityAIBase
-{
+public class EntityAIMoveTowardsTarget extends EntityAIBase {
     private final EntityCreature creature;
     private EntityLivingBase targetEntity;
     private double movePosX;
@@ -14,36 +13,26 @@
     private final double speed;
     private final float maxTargetDistance;
 
-    public EntityAIMoveTowardsTarget(EntityCreature creature, double speedIn, float targetMaxDistance)
-    {
+    public EntityAIMoveTowardsTarget(EntityCreature creature, double speedIn, float targetMaxDistance) {
         this.creature = creature;
         this.speed = speedIn;
         this.maxTargetDistance = targetMaxDistance;
         this.setMutexBits(1);
     }
 
-    public boolean shouldExecute()
-    {
+    public boolean shouldExecute() {
         this.targetEntity = this.creature.getAttackTarget();
 
-        if (this.targetEntity == null)
-        {
+        if (this.targetEntity == null) {
             return false;
-        }
-        else if (this.targetEntity.getDistanceSq(this.creature) > (double)(this.maxTargetDistance * this.maxTargetDistance))
-        {
+        } else if (this.targetEntity.getDistanceSq(this.creature) > (double) (this.maxTargetDistance * this.maxTargetDistance)) {
             return false;
-        }
-        else
-        {
+        } else {
             Vec3d vec3d = RandomPositionGenerator.findRandomTargetBlockTowards(this.creature, 16, 7, new Vec3d(this.targetEntity.posX, this.targetEntity.posY, this.targetEntity.posZ));
 
-            if (vec3d == null)
-            {
+            if (vec3d == null) {
                 return false;
-            }
-            else
-            {
+            } else {
                 this.movePosX = vec3d.x;
                 this.movePosY = vec3d.y;
                 this.movePosZ = vec3d.z;
@@ -52,18 +41,15 @@
         }
     }
 
-    public boolean shouldContinueExecuting()
-    {
-        return !this.creature.getNavigator().noPath() && this.targetEntity.isEntityAlive() && this.targetEntity.getDistanceSq(this.creature) < (double)(this.maxTargetDistance * this.maxTargetDistance);
+    public boolean shouldContinueExecuting() {
+        return !this.creature.getNavigator().noPath() && this.targetEntity.isEntityAlive() && this.targetEntity.getDistanceSq(this.creature) < (double) (this.maxTargetDistance * this.maxTargetDistance);
     }
 
-    public void resetTask()
-    {
+    public void resetTask() {
         this.targetEntity = null;
     }
 
-    public void startExecuting()
-    {
+    public void startExecuting() {
         this.creature.getNavigator().tryMoveToXYZ(this.movePosX, this.movePosY, this.movePosZ, this.speed);
     }
 }
