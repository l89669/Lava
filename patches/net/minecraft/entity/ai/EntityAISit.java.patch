--- ../src-base/minecraft/net/minecraft/entity/ai/EntityAISit.java
+++ ../src-work/minecraft/net/minecraft/entity/ai/EntityAISit.java
@@ -3,59 +3,44 @@
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.passive.EntityTameable;
 
-public class EntityAISit extends EntityAIBase
-{
+public class EntityAISit extends EntityAIBase {
     private final EntityTameable tameable;
     private boolean isSitting;
 
-    public EntityAISit(EntityTameable entityIn)
-    {
+    public EntityAISit(EntityTameable entityIn) {
         this.tameable = entityIn;
         this.setMutexBits(5);
     }
 
-    public boolean shouldExecute()
-    {
-        if (!this.tameable.isTamed())
-        {
+    public boolean shouldExecute() {
+        if (!this.tameable.isTamed()) {
+            // return false;
+            return this.isSitting && this.tameable.getAttackTarget() == null; // CraftBukkit - Allow sitting for wild animals
+        } else if (this.tameable.isInWater()) {
             return false;
-        }
-        else if (this.tameable.isInWater())
-        {
+        } else if (!this.tameable.onGround) {
             return false;
-        }
-        else if (!this.tameable.onGround)
-        {
-            return false;
-        }
-        else
-        {
+        } else {
             EntityLivingBase entitylivingbase = this.tameable.getOwner();
 
-            if (entitylivingbase == null)
-            {
+            if (entitylivingbase == null) {
                 return true;
-            }
-            else
-            {
+            } else {
                 return this.tameable.getDistanceSq(entitylivingbase) < 144.0D && entitylivingbase.getRevengeTarget() != null ? false : this.isSitting;
             }
         }
     }
 
-    public void startExecuting()
-    {
+    public void startExecuting() {
         this.tameable.getNavigator().clearPath();
         this.tameable.setSitting(true);
     }
 
-    public void resetTask()
-    {
+    public void resetTask() {
         this.tameable.setSitting(false);
     }
 
-    public void setSitting(boolean sitting)
-    {
+    public void setSitting(boolean sitting) {
         this.isSitting = sitting;
     }
 }
