--- ../src-base/minecraft/net/minecraft/entity/ai/EntityAIDoorInteract.java
+++ ../src-work/minecraft/net/minecraft/entity/ai/EntityAIDoorInteract.java
@@ -10,8 +10,7 @@
 import net.minecraft.pathfinding.PathPoint;
 import net.minecraft.util.math.BlockPos;
 
-public abstract class EntityAIDoorInteract extends EntityAIBase
-{
+public abstract class EntityAIDoorInteract extends EntityAIBase {
     protected EntityLiving entity;
     protected BlockPos doorPosition = BlockPos.ORIGIN;
     protected BlockDoor doorBlock;
@@ -19,40 +18,30 @@
     float entityPositionX;
     float entityPositionZ;
 
-    public EntityAIDoorInteract(EntityLiving entityIn)
-    {
+    public EntityAIDoorInteract(EntityLiving entityIn) {
         this.entity = entityIn;
 
-        if (!(entityIn.getNavigator() instanceof PathNavigateGround))
-        {
+        if (!(entityIn.getNavigator() instanceof PathNavigateGround)) {
             throw new IllegalArgumentException("Unsupported mob type for DoorInteractGoal");
         }
     }
 
-    public boolean shouldExecute()
-    {
-        if (!this.entity.collidedHorizontally)
-        {
+    public boolean shouldExecute() {
+        if (!this.entity.collidedHorizontally) {
             return false;
-        }
-        else
-        {
-            PathNavigateGround pathnavigateground = (PathNavigateGround)this.entity.getNavigator();
+        } else {
+            PathNavigateGround pathnavigateground = (PathNavigateGround) this.entity.getNavigator();
             Path path = pathnavigateground.getPath();
 
-            if (path != null && !path.isFinished() && pathnavigateground.getEnterDoors())
-            {
-                for (int i = 0; i < Math.min(path.getCurrentPathIndex() + 2, path.getCurrentPathLength()); ++i)
-                {
+            if (path != null && !path.isFinished() && pathnavigateground.getEnterDoors()) {
+                for (int i = 0; i < Math.min(path.getCurrentPathIndex() + 2, path.getCurrentPathLength()); ++i) {
                     PathPoint pathpoint = path.getPathPointFromIndex(i);
                     this.doorPosition = new BlockPos(pathpoint.x, pathpoint.y + 1, pathpoint.z);
 
-                    if (this.entity.getDistanceSq((double)this.doorPosition.getX(), this.entity.posY, (double)this.doorPosition.getZ()) <= 2.25D)
-                    {
+                    if (this.entity.getDistanceSq((double) this.doorPosition.getX(), this.entity.posY, (double) this.doorPosition.getZ()) <= 2.25D) {
                         this.doorBlock = this.getBlockDoor(this.doorPosition);
 
-                        if (this.doorBlock != null)
-                        {
+                        if (this.doorBlock != null) {
                             return true;
                         }
                     }
@@ -61,42 +50,35 @@
                 this.doorPosition = (new BlockPos(this.entity)).up();
                 this.doorBlock = this.getBlockDoor(this.doorPosition);
                 return this.doorBlock != null;
-            }
-            else
-            {
+            } else {
                 return false;
             }
         }
     }
 
-    public boolean shouldContinueExecuting()
-    {
+    public boolean shouldContinueExecuting() {
         return !this.hasStoppedDoorInteraction;
     }
 
-    public void startExecuting()
-    {
+    public void startExecuting() {
         this.hasStoppedDoorInteraction = false;
-        this.entityPositionX = (float)((double)((float)this.doorPosition.getX() + 0.5F) - this.entity.posX);
-        this.entityPositionZ = (float)((double)((float)this.doorPosition.getZ() + 0.5F) - this.entity.posZ);
+        this.entityPositionX = (float) ((double) ((float) this.doorPosition.getX() + 0.5F) - this.entity.posX);
+        this.entityPositionZ = (float) ((double) ((float) this.doorPosition.getZ() + 0.5F) - this.entity.posZ);
     }
 
-    public void updateTask()
-    {
-        float f = (float)((double)((float)this.doorPosition.getX() + 0.5F) - this.entity.posX);
-        float f1 = (float)((double)((float)this.doorPosition.getZ() + 0.5F) - this.entity.posZ);
+    public void updateTask() {
+        float f = (float) ((double) ((float) this.doorPosition.getX() + 0.5F) - this.entity.posX);
+        float f1 = (float) ((double) ((float) this.doorPosition.getZ() + 0.5F) - this.entity.posZ);
         float f2 = this.entityPositionX * f + this.entityPositionZ * f1;
 
-        if (f2 < 0.0F)
-        {
+        if (f2 < 0.0F) {
             this.hasStoppedDoorInteraction = true;
         }
     }
 
-    private BlockDoor getBlockDoor(BlockPos pos)
-    {
+    private BlockDoor getBlockDoor(BlockPos pos) {
         IBlockState iblockstate = this.entity.world.getBlockState(pos);
         Block block = iblockstate.getBlock();
-        return block instanceof BlockDoor && iblockstate.getMaterial() == Material.WOOD ? (BlockDoor)block : null;
+        return block instanceof BlockDoor && iblockstate.getMaterial() == Material.WOOD ? (BlockDoor) block : null;
     }
 }
