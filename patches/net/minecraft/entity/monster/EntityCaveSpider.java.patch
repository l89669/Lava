--- ../src-base/minecraft/net/minecraft/entity/monster/EntityCaveSpider.java
+++ ../src-work/minecraft/net/minecraft/entity/monster/EntityCaveSpider.java
@@ -1,11 +1,6 @@
 package net.minecraft.entity.monster;
 
-import javax.annotation.Nullable;
-import net.minecraft.entity.Entity;
-import net.minecraft.entity.EntityLiving;
-import net.minecraft.entity.EntityLivingBase;
-import net.minecraft.entity.IEntityLivingData;
-import net.minecraft.entity.SharedMonsterAttributes;
+import net.minecraft.entity.*;
 import net.minecraft.init.MobEffects;
 import net.minecraft.potion.PotionEffect;
 import net.minecraft.util.ResourceLocation;
@@ -15,70 +10,56 @@
 import net.minecraft.world.World;
 import net.minecraft.world.storage.loot.LootTableList;
 
-public class EntityCaveSpider extends EntitySpider
-{
-    public EntityCaveSpider(World worldIn)
-    {
+import javax.annotation.Nullable;
+
+public class EntityCaveSpider extends EntitySpider {
+    public EntityCaveSpider(World worldIn) {
         super(worldIn);
         this.setSize(0.7F, 0.5F);
     }
 
-    public static void registerFixesCaveSpider(DataFixer fixer)
-    {
+    public static void registerFixesCaveSpider(DataFixer fixer) {
         EntityLiving.registerFixesMob(fixer, EntityCaveSpider.class);
     }
 
-    protected void applyEntityAttributes()
-    {
+    protected void applyEntityAttributes() {
         super.applyEntityAttributes();
         this.getEntityAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(12.0D);
     }
 
-    public boolean attackEntityAsMob(Entity entityIn)
-    {
-        if (super.attackEntityAsMob(entityIn))
-        {
-            if (entityIn instanceof EntityLivingBase)
-            {
+    public boolean attackEntityAsMob(Entity entityIn) {
+        if (super.attackEntityAsMob(entityIn)) {
+            if (entityIn instanceof EntityLivingBase) {
                 int i = 0;
 
-                if (this.world.getDifficulty() == EnumDifficulty.NORMAL)
-                {
+                if (this.world.getDifficulty() == EnumDifficulty.NORMAL) {
                     i = 7;
-                }
-                else if (this.world.getDifficulty() == EnumDifficulty.HARD)
-                {
+                } else if (this.world.getDifficulty() == EnumDifficulty.HARD) {
                     i = 15;
                 }
 
-                if (i > 0)
-                {
-                    ((EntityLivingBase)entityIn).addPotionEffect(new PotionEffect(MobEffects.POISON, i * 20, 0));
+                if (i > 0) {
+                    ((EntityLivingBase) entityIn).addPotionEffect(new PotionEffect(MobEffects.POISON, i * 20, 0));
                 }
             }
 
             return true;
-        }
-        else
-        {
+        } else {
             return false;
         }
     }
 
     @Nullable
-    public IEntityLivingData onInitialSpawn(DifficultyInstance difficulty, @Nullable IEntityLivingData livingdata)
-    {
+    public IEntityLivingData onInitialSpawn(DifficultyInstance difficulty, @Nullable IEntityLivingData livingdata) {
         return livingdata;
     }
 
-    public float getEyeHeight()
-    {
+    public float getEyeHeight() {
         return 0.45F;
     }
 
     @Nullable
-    protected ResourceLocation getLootTable()
-    {
+    protected ResourceLocation getLootTable() {
         return LootTableList.ENTITIES_CAVE_SPIDER;
     }
 }
