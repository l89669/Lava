--- ../src-base/minecraft/net/minecraft/entity/monster/EntityElderGuardian.java
+++ ../src-work/minecraft/net/minecraft/entity/monster/EntityElderGuardian.java
@@ -1,8 +1,6 @@
 package net.minecraft.entity.monster;
 
 import com.google.common.base.Predicate;
-import java.util.List;
-import javax.annotation.Nullable;
 import net.minecraft.entity.EntityLiving;
 import net.minecraft.entity.SharedMonsterAttributes;
 import net.minecraft.entity.player.EntityPlayerMP;
@@ -21,83 +19,70 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class EntityElderGuardian extends EntityGuardian
-{
-    public EntityElderGuardian(World worldIn)
-    {
+import javax.annotation.Nullable;
+import java.util.List;
+
+public class EntityElderGuardian extends EntityGuardian {
+    public EntityElderGuardian(World worldIn) {
         super(worldIn);
         this.setSize(this.width * 2.35F, this.height * 2.35F);
         this.enablePersistence();
 
-        if (this.wander != null)
-        {
+        if (this.wander != null) {
             this.wander.setExecutionChance(400);
         }
     }
 
-    protected void applyEntityAttributes()
-    {
+    protected void applyEntityAttributes() {
         super.applyEntityAttributes();
         this.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.30000001192092896D);
         this.getEntityAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).setBaseValue(8.0D);
         this.getEntityAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(80.0D);
     }
 
-    public static void registerFixesElderGuardian(DataFixer fixer)
-    {
+    public static void registerFixesElderGuardian(DataFixer fixer) {
         EntityLiving.registerFixesMob(fixer, EntityElderGuardian.class);
     }
 
     @Nullable
-    protected ResourceLocation getLootTable()
-    {
+    protected ResourceLocation getLootTable() {
         return LootTableList.ENTITIES_ELDER_GUARDIAN;
     }
 
-    public int getAttackDuration()
-    {
+    public int getAttackDuration() {
         return 60;
     }
 
     @SideOnly(Side.CLIENT)
-    public void setGhost()
-    {
+    public void setGhost() {
         this.clientSideSpikesAnimation = 1.0F;
         this.clientSideSpikesAnimationO = this.clientSideSpikesAnimation;
     }
 
-    protected SoundEvent getAmbientSound()
-    {
+    protected SoundEvent getAmbientSound() {
         return this.isInWater() ? SoundEvents.ENTITY_ELDER_GUARDIAN_AMBIENT : SoundEvents.ENTITY_ELDERGUARDIAN_AMBIENTLAND;
     }
 
-    protected SoundEvent getHurtSound(DamageSource damageSourceIn)
-    {
+    protected SoundEvent getHurtSound(DamageSource damageSourceIn) {
         return this.isInWater() ? SoundEvents.ENTITY_ELDER_GUARDIAN_HURT : SoundEvents.ENTITY_ELDER_GUARDIAN_HURT_LAND;
     }
 
-    protected SoundEvent getDeathSound()
-    {
+    protected SoundEvent getDeathSound() {
         return this.isInWater() ? SoundEvents.ENTITY_ELDER_GUARDIAN_DEATH : SoundEvents.ENTITY_ELDER_GUARDIAN_DEATH_LAND;
     }
 
-    protected SoundEvent getFlopSound()
-    {
+    protected SoundEvent getFlopSound() {
         return SoundEvents.ENTITY_ELDER_GUARDIAN_FLOP;
     }
 
-    protected void updateAITasks()
-    {
+    protected void updateAITasks() {
         super.updateAITasks();
         int i = 1200;
 
-        if ((this.ticksExisted + this.getEntityId()) % 1200 == 0)
-        {
+        if ((this.ticksExisted + this.getEntityId()) % 1200 == 0) {
             Potion potion = MobEffects.MINING_FATIGUE;
-            List<EntityPlayerMP> list = this.world.<EntityPlayerMP>getPlayers(EntityPlayerMP.class, new Predicate<EntityPlayerMP>()
-            {
-                public boolean apply(@Nullable EntityPlayerMP p_apply_1_)
-                {
+            List<EntityPlayerMP> list = this.world.<EntityPlayerMP>getPlayers(EntityPlayerMP.class, new Predicate<EntityPlayerMP>() {
+                public boolean apply(@Nullable EntityPlayerMP p_apply_1_) {
                     return EntityElderGuardian.this.getDistanceSq(p_apply_1_) < 2500.0D && p_apply_1_.interactionManager.survivalOrAdventure();
                 }
             });
@@ -105,18 +90,15 @@
             int k = 6000;
             int l = 1200;
 
-            for (EntityPlayerMP entityplayermp : list)
-            {
-                if (!entityplayermp.isPotionActive(potion) || entityplayermp.getActivePotionEffect(potion).getAmplifier() < 2 || entityplayermp.getActivePotionEffect(potion).getDuration() < 1200)
-                {
+            for (EntityPlayerMP entityplayermp : list) {
+                if (!entityplayermp.isPotionActive(potion) || entityplayermp.getActivePotionEffect(potion).getAmplifier() < 2 || entityplayermp.getActivePotionEffect(potion).getDuration() < 1200) {
                     entityplayermp.connection.sendPacket(new SPacketChangeGameState(10, 0.0F));
                     entityplayermp.addPotionEffect(new PotionEffect(potion, 6000, 2));
                 }
             }
         }
 
-        if (!this.hasHome())
-        {
+        if (!this.hasHome()) {
             this.setHomePosAndDistance(new BlockPos(this), 16);
         }
     }
