--- ../src-base/minecraft/net/minecraft/entity/monster/EntityIronGolem.java
+++ ../src-work/minecraft/net/minecraft/entity/monster/EntityIronGolem.java
@@ -1,7 +1,6 @@
 package net.minecraft.entity.monster;
 
 import com.google.common.base.Predicate;
-import javax.annotation.Nullable;
 import net.minecraft.block.Block;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
@@ -9,17 +8,7 @@
 import net.minecraft.entity.EntityLiving;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.SharedMonsterAttributes;
-import net.minecraft.entity.ai.EntityAIAttackMelee;
-import net.minecraft.entity.ai.EntityAIDefendVillage;
-import net.minecraft.entity.ai.EntityAIHurtByTarget;
-import net.minecraft.entity.ai.EntityAILookAtVillager;
-import net.minecraft.entity.ai.EntityAILookIdle;
-import net.minecraft.entity.ai.EntityAIMoveThroughVillage;
-import net.minecraft.entity.ai.EntityAIMoveTowardsRestriction;
-import net.minecraft.entity.ai.EntityAIMoveTowardsTarget;
-import net.minecraft.entity.ai.EntityAINearestAttackableTarget;
-import net.minecraft.entity.ai.EntityAIWanderAvoidWater;
-import net.minecraft.entity.ai.EntityAIWatchClosest;
+import net.minecraft.entity.ai.*;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.init.SoundEvents;
 import net.minecraft.nbt.NBTTagCompound;
@@ -39,8 +28,9 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class EntityIronGolem extends EntityGolem
-{
+import javax.annotation.Nullable;
+
+public class EntityIronGolem extends EntityGolem {
     protected static final DataParameter<Byte> PLAYER_CREATED = EntityDataManager.<Byte>createKey(EntityIronGolem.class, DataSerializers.BYTE);
     private int homeCheckTimer;
     @Nullable
@@ -48,14 +38,12 @@
     private int attackTimer;
     private int holdRoseTick;
 
-    public EntityIronGolem(World worldIn)
-    {
+    public EntityIronGolem(World worldIn) {
         super(worldIn);
         this.setSize(1.4F, 2.7F);
     }
 
-    protected void initEntityAI()
-    {
+    protected void initEntityAI() {
         this.tasks.addTask(1, new EntityAIAttackMelee(this, 1.0D, true));
         this.tasks.addTask(2, new EntityAIMoveTowardsTarget(this, 0.9D, 32.0F));
         this.tasks.addTask(3, new EntityAIMoveThroughVillage(this, 0.6D, true));
@@ -66,130 +54,104 @@
         this.tasks.addTask(8, new EntityAILookIdle(this));
         this.targetTasks.addTask(1, new EntityAIDefendVillage(this));
         this.targetTasks.addTask(2, new EntityAIHurtByTarget(this, false, new Class[0]));
-        this.targetTasks.addTask(3, new EntityAINearestAttackableTarget(this, EntityLiving.class, 10, false, true, new Predicate<EntityLiving>()
-        {
-            public boolean apply(@Nullable EntityLiving p_apply_1_)
-            {
+        this.targetTasks.addTask(3, new EntityAINearestAttackableTarget(this, EntityLiving.class, 10, false, true, new Predicate<EntityLiving>() {
+            public boolean apply(@Nullable EntityLiving p_apply_1_) {
                 return p_apply_1_ != null && IMob.VISIBLE_MOB_SELECTOR.apply(p_apply_1_) && !(p_apply_1_ instanceof EntityCreeper);
             }
         }));
     }
 
-    protected void entityInit()
-    {
+    protected void entityInit() {
         super.entityInit();
-        this.dataManager.register(PLAYER_CREATED, Byte.valueOf((byte)0));
+        this.dataManager.register(PLAYER_CREATED, Byte.valueOf((byte) 0));
     }
 
-    protected void updateAITasks()
-    {
-        if (--this.homeCheckTimer <= 0)
-        {
+    protected void updateAITasks() {
+        if (--this.homeCheckTimer <= 0) {
             this.homeCheckTimer = 70 + this.rand.nextInt(50);
             this.village = this.world.getVillageCollection().getNearestVillage(new BlockPos(this), 32);
 
-            if (this.village == null)
-            {
+            if (this.village == null) {
                 this.detachHome();
-            }
-            else
-            {
+            } else {
                 BlockPos blockpos = this.village.getCenter();
-                this.setHomePosAndDistance(blockpos, (int)((float)this.village.getVillageRadius() * 0.6F));
+                this.setHomePosAndDistance(blockpos, (int) ((float) this.village.getVillageRadius() * 0.6F));
             }
         }
 
         super.updateAITasks();
     }
 
-    protected void applyEntityAttributes()
-    {
+    protected void applyEntityAttributes() {
         super.applyEntityAttributes();
         this.getEntityAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(100.0D);
         this.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.25D);
         this.getEntityAttribute(SharedMonsterAttributes.KNOCKBACK_RESISTANCE).setBaseValue(1.0D);
     }
 
-    protected int decreaseAirSupply(int air)
-    {
+    protected int decreaseAirSupply(int air) {
         return air;
     }
 
-    protected void collideWithEntity(Entity entityIn)
-    {
-        if (entityIn instanceof IMob && !(entityIn instanceof EntityCreeper) && this.getRNG().nextInt(20) == 0)
-        {
-            this.setAttackTarget((EntityLivingBase)entityIn);
+    protected void collideWithEntity(Entity entityIn) {
+        if (entityIn instanceof IMob && !(entityIn instanceof EntityCreeper) && this.getRNG().nextInt(20) == 0) {
+            this.setAttackTarget((EntityLivingBase) entityIn);
         }
 
         super.collideWithEntity(entityIn);
     }
 
-    public void onLivingUpdate()
-    {
+    public void onLivingUpdate() {
         super.onLivingUpdate();
 
-        if (this.attackTimer > 0)
-        {
+        if (this.attackTimer > 0) {
             --this.attackTimer;
         }
 
-        if (this.holdRoseTick > 0)
-        {
+        if (this.holdRoseTick > 0) {
             --this.holdRoseTick;
         }
 
-        if (this.motionX * this.motionX + this.motionZ * this.motionZ > 2.500000277905201E-7D && this.rand.nextInt(5) == 0)
-        {
+        if (this.motionX * this.motionX + this.motionZ * this.motionZ > 2.500000277905201E-7D && this.rand.nextInt(5) == 0) {
             int i = MathHelper.floor(this.posX);
             int j = MathHelper.floor(this.posY - 0.20000000298023224D);
             int k = MathHelper.floor(this.posZ);
             IBlockState iblockstate = this.world.getBlockState(new BlockPos(i, j, k));
 
-            if (iblockstate.getMaterial() != Material.AIR)
-            {
-                this.world.spawnParticle(EnumParticleTypes.BLOCK_CRACK, this.posX + ((double)this.rand.nextFloat() - 0.5D) * (double)this.width, this.getEntityBoundingBox().minY + 0.1D, this.posZ + ((double)this.rand.nextFloat() - 0.5D) * (double)this.width, 4.0D * ((double)this.rand.nextFloat() - 0.5D), 0.5D, ((double)this.rand.nextFloat() - 0.5D) * 4.0D, Block.getStateId(iblockstate));
+            if (iblockstate.getMaterial() != Material.AIR) {
+                this.world.spawnParticle(EnumParticleTypes.BLOCK_CRACK, this.posX + ((double) this.rand.nextFloat() - 0.5D) * (double) this.width, this.getEntityBoundingBox().minY + 0.1D, this.posZ + ((double) this.rand.nextFloat() - 0.5D) * (double) this.width, 4.0D * ((double) this.rand.nextFloat() - 0.5D), 0.5D, ((double) this.rand.nextFloat() - 0.5D) * 4.0D, Block.getStateId(iblockstate));
             }
         }
     }
 
-    public boolean canAttackClass(Class <? extends EntityLivingBase > cls)
-    {
-        if (this.isPlayerCreated() && EntityPlayer.class.isAssignableFrom(cls))
-        {
+    public boolean canAttackClass(Class<? extends EntityLivingBase> cls) {
+        if (this.isPlayerCreated() && EntityPlayer.class.isAssignableFrom(cls)) {
             return false;
-        }
-        else
-        {
+        } else {
             return cls == EntityCreeper.class ? false : super.canAttackClass(cls);
         }
     }
 
-    public static void registerFixesIronGolem(DataFixer fixer)
-    {
+    public static void registerFixesIronGolem(DataFixer fixer) {
         EntityLiving.registerFixesMob(fixer, EntityIronGolem.class);
     }
 
-    public void writeEntityToNBT(NBTTagCompound compound)
-    {
+    public void writeEntityToNBT(NBTTagCompound compound) {
         super.writeEntityToNBT(compound);
         compound.setBoolean("PlayerCreated", this.isPlayerCreated());
     }
 
-    public void readEntityFromNBT(NBTTagCompound compound)
-    {
+    public void readEntityFromNBT(NBTTagCompound compound) {
         super.readEntityFromNBT(compound);
         this.setPlayerCreated(compound.getBoolean("PlayerCreated"));
     }
 
-    public boolean attackEntityAsMob(Entity entityIn)
-    {
+    public boolean attackEntityAsMob(Entity entityIn) {
         this.attackTimer = 10;
-        this.world.setEntityState(this, (byte)4);
-        boolean flag = entityIn.attackEntityFrom(DamageSource.causeMobDamage(this), (float)(7 + this.rand.nextInt(15)));
+        this.world.setEntityState(this, (byte) 4);
+        boolean flag = entityIn.attackEntityFrom(DamageSource.causeMobDamage(this), (float) (7 + this.rand.nextInt(15)));
 
-        if (flag)
-        {
+        if (flag) {
             entityIn.motionY += 0.4000000059604645D;
             this.applyEnchantments(this, entityIn);
         }
@@ -199,101 +161,75 @@
     }
 
     @SideOnly(Side.CLIENT)
-    public void handleStatusUpdate(byte id)
-    {
-        if (id == 4)
-        {
+    public void handleStatusUpdate(byte id) {
+        if (id == 4) {
             this.attackTimer = 10;
             this.playSound(SoundEvents.ENTITY_IRONGOLEM_ATTACK, 1.0F, 1.0F);
-        }
-        else if (id == 11)
-        {
+        } else if (id == 11) {
             this.holdRoseTick = 400;
-        }
-        else if (id == 34)
-        {
+        } else if (id == 34) {
             this.holdRoseTick = 0;
-        }
-        else
-        {
+        } else {
             super.handleStatusUpdate(id);
         }
     }
 
-    public Village getVillage()
-    {
+    public Village getVillage() {
         return this.village;
     }
 
     @SideOnly(Side.CLIENT)
-    public int getAttackTimer()
-    {
+    public int getAttackTimer() {
         return this.attackTimer;
     }
 
-    public void setHoldingRose(boolean p_70851_1_)
-    {
-        if (p_70851_1_)
-        {
+    public void setHoldingRose(boolean p_70851_1_) {
+        if (p_70851_1_) {
             this.holdRoseTick = 400;
-            this.world.setEntityState(this, (byte)11);
-        }
-        else
-        {
+            this.world.setEntityState(this, (byte) 11);
+        } else {
             this.holdRoseTick = 0;
-            this.world.setEntityState(this, (byte)34);
+            this.world.setEntityState(this, (byte) 34);
         }
     }
 
-    protected SoundEvent getHurtSound(DamageSource damageSourceIn)
-    {
+    protected SoundEvent getHurtSound(DamageSource damageSourceIn) {
         return SoundEvents.ENTITY_IRONGOLEM_HURT;
     }
 
-    protected SoundEvent getDeathSound()
-    {
+    protected SoundEvent getDeathSound() {
         return SoundEvents.ENTITY_IRONGOLEM_DEATH;
     }
 
-    protected void playStepSound(BlockPos pos, Block blockIn)
-    {
+    protected void playStepSound(BlockPos pos, Block blockIn) {
         this.playSound(SoundEvents.ENTITY_IRONGOLEM_STEP, 1.0F, 1.0F);
     }
 
     @Nullable
-    protected ResourceLocation getLootTable()
-    {
+    protected ResourceLocation getLootTable() {
         return LootTableList.ENTITIES_IRON_GOLEM;
     }
 
-    public int getHoldRoseTick()
-    {
+    public int getHoldRoseTick() {
         return this.holdRoseTick;
     }
 
-    public boolean isPlayerCreated()
-    {
-        return (((Byte)this.dataManager.get(PLAYER_CREATED)).byteValue() & 1) != 0;
+    public boolean isPlayerCreated() {
+        return (((Byte) this.dataManager.get(PLAYER_CREATED)).byteValue() & 1) != 0;
     }
 
-    public void setPlayerCreated(boolean playerCreated)
-    {
-        byte b0 = ((Byte)this.dataManager.get(PLAYER_CREATED)).byteValue();
+    public void setPlayerCreated(boolean playerCreated) {
+        byte b0 = ((Byte) this.dataManager.get(PLAYER_CREATED)).byteValue();
 
-        if (playerCreated)
-        {
-            this.dataManager.set(PLAYER_CREATED, Byte.valueOf((byte)(b0 | 1)));
+        if (playerCreated) {
+            this.dataManager.set(PLAYER_CREATED, Byte.valueOf((byte) (b0 | 1)));
+        } else {
+            this.dataManager.set(PLAYER_CREATED, Byte.valueOf((byte) (b0 & -2)));
         }
-        else
-        {
-            this.dataManager.set(PLAYER_CREATED, Byte.valueOf((byte)(b0 & -2)));
-        }
     }
 
-    public void onDeath(DamageSource cause)
-    {
-        if (!this.isPlayerCreated() && this.attackingPlayer != null && this.village != null)
-        {
+    public void onDeath(DamageSource cause) {
+        if (!this.isPlayerCreated() && this.attackingPlayer != null && this.village != null) {
             this.village.modifyPlayerReputation(this.attackingPlayer.getUniqueID(), -5);
         }
 
