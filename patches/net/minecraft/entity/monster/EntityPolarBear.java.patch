--- ../src-base/minecraft/net/minecraft/entity/monster/EntityPolarBear.java
+++ ../src-work/minecraft/net/minecraft/entity/monster/EntityPolarBear.java
@@ -1,23 +1,9 @@
 package net.minecraft.entity.monster;
 
 import com.google.common.base.Predicate;
-import javax.annotation.Nullable;
 import net.minecraft.block.Block;
-import net.minecraft.entity.Entity;
-import net.minecraft.entity.EntityAgeable;
-import net.minecraft.entity.EntityCreature;
-import net.minecraft.entity.EntityLivingBase;
-import net.minecraft.entity.IEntityLivingData;
-import net.minecraft.entity.SharedMonsterAttributes;
-import net.minecraft.entity.ai.EntityAIAttackMelee;
-import net.minecraft.entity.ai.EntityAIFollowParent;
-import net.minecraft.entity.ai.EntityAIHurtByTarget;
-import net.minecraft.entity.ai.EntityAILookIdle;
-import net.minecraft.entity.ai.EntityAINearestAttackableTarget;
-import net.minecraft.entity.ai.EntityAIPanic;
-import net.minecraft.entity.ai.EntityAISwimming;
-import net.minecraft.entity.ai.EntityAIWander;
-import net.minecraft.entity.ai.EntityAIWatchClosest;
+import net.minecraft.entity.*;
+import net.minecraft.entity.ai.*;
 import net.minecraft.entity.passive.EntityAnimal;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.init.SoundEvents;
@@ -36,31 +22,28 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class EntityPolarBear extends EntityAnimal
-{
+import javax.annotation.Nullable;
+
+public class EntityPolarBear extends EntityAnimal {
     private static final DataParameter<Boolean> IS_STANDING = EntityDataManager.<Boolean>createKey(EntityPolarBear.class, DataSerializers.BOOLEAN);
     private float clientSideStandAnimation0;
     private float clientSideStandAnimation;
     private int warningSoundTicks;
 
-    public EntityPolarBear(World worldIn)
-    {
+    public EntityPolarBear(World worldIn) {
         super(worldIn);
         this.setSize(1.3F, 1.4F);
     }
 
-    public EntityAgeable createChild(EntityAgeable ageable)
-    {
+    public EntityAgeable createChild(EntityAgeable ageable) {
         return new EntityPolarBear(this.world);
     }
 
-    public boolean isBreedingItem(ItemStack stack)
-    {
+    public boolean isBreedingItem(ItemStack stack) {
         return false;
     }
 
-    protected void initEntityAI()
-    {
+    protected void initEntityAI() {
         super.initEntityAI();
         this.tasks.addTask(0, new EntityAISwimming(this));
         this.tasks.addTask(1, new EntityPolarBear.AIMeleeAttack());
@@ -73,8 +56,7 @@
         this.targetTasks.addTask(2, new EntityPolarBear.AIAttackPlayer());
     }
 
-    protected void applyEntityAttributes()
-    {
+    protected void applyEntityAttributes() {
         super.applyEntityAttributes();
         this.getEntityAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(30.0D);
         this.getEntityAttribute(SharedMonsterAttributes.FOLLOW_RANGE).setBaseValue(20.0D);
@@ -83,115 +65,90 @@
         this.getEntityAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).setBaseValue(6.0D);
     }
 
-    protected SoundEvent getAmbientSound()
-    {
+    protected SoundEvent getAmbientSound() {
         return this.isChild() ? SoundEvents.ENTITY_POLAR_BEAR_BABY_AMBIENT : SoundEvents.ENTITY_POLAR_BEAR_AMBIENT;
     }
 
-    protected SoundEvent getHurtSound(DamageSource damageSourceIn)
-    {
+    protected SoundEvent getHurtSound(DamageSource damageSourceIn) {
         return SoundEvents.ENTITY_POLAR_BEAR_HURT;
     }
 
-    protected SoundEvent getDeathSound()
-    {
+    protected SoundEvent getDeathSound() {
         return SoundEvents.ENTITY_POLAR_BEAR_DEATH;
     }
 
-    protected void playStepSound(BlockPos pos, Block blockIn)
-    {
+    protected void playStepSound(BlockPos pos, Block blockIn) {
         this.playSound(SoundEvents.ENTITY_POLAR_BEAR_STEP, 0.15F, 1.0F);
     }
 
-    protected void playWarningSound()
-    {
-        if (this.warningSoundTicks <= 0)
-        {
+    protected void playWarningSound() {
+        if (this.warningSoundTicks <= 0) {
             this.playSound(SoundEvents.ENTITY_POLAR_BEAR_WARNING, 1.0F, 1.0F);
             this.warningSoundTicks = 40;
         }
     }
 
     @Nullable
-    protected ResourceLocation getLootTable()
-    {
+    protected ResourceLocation getLootTable() {
         return LootTableList.ENTITIES_POLAR_BEAR;
     }
 
-    protected void entityInit()
-    {
+    protected void entityInit() {
         super.entityInit();
         this.dataManager.register(IS_STANDING, Boolean.valueOf(false));
     }
 
-    public void onUpdate()
-    {
+    public void onUpdate() {
         super.onUpdate();
 
-        if (this.world.isRemote)
-        {
+        if (this.world.isRemote) {
             this.clientSideStandAnimation0 = this.clientSideStandAnimation;
 
-            if (this.isStanding())
-            {
+            if (this.isStanding()) {
                 this.clientSideStandAnimation = MathHelper.clamp(this.clientSideStandAnimation + 1.0F, 0.0F, 6.0F);
-            }
-            else
-            {
+            } else {
                 this.clientSideStandAnimation = MathHelper.clamp(this.clientSideStandAnimation - 1.0F, 0.0F, 6.0F);
             }
         }
 
-        if (this.warningSoundTicks > 0)
-        {
+        if (this.warningSoundTicks > 0) {
             --this.warningSoundTicks;
         }
     }
 
-    public boolean attackEntityAsMob(Entity entityIn)
-    {
-        boolean flag = entityIn.attackEntityFrom(DamageSource.causeMobDamage(this), (float)((int)this.getEntityAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).getAttributeValue()));
+    public boolean attackEntityAsMob(Entity entityIn) {
+        boolean flag = entityIn.attackEntityFrom(DamageSource.causeMobDamage(this), (float) ((int) this.getEntityAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).getAttributeValue()));
 
-        if (flag)
-        {
+        if (flag) {
             this.applyEnchantments(this, entityIn);
         }
 
         return flag;
     }
 
-    public boolean isStanding()
-    {
-        return ((Boolean)this.dataManager.get(IS_STANDING)).booleanValue();
+    public boolean isStanding() {
+        return ((Boolean) this.dataManager.get(IS_STANDING)).booleanValue();
     }
 
-    public void setStanding(boolean standing)
-    {
+    public void setStanding(boolean standing) {
         this.dataManager.set(IS_STANDING, Boolean.valueOf(standing));
     }
 
     @SideOnly(Side.CLIENT)
-    public float getStandingAnimationScale(float p_189795_1_)
-    {
+    public float getStandingAnimationScale(float p_189795_1_) {
         return (this.clientSideStandAnimation0 + (this.clientSideStandAnimation - this.clientSideStandAnimation0) * p_189795_1_) / 6.0F;
     }
 
-    protected float getWaterSlowDown()
-    {
+    protected float getWaterSlowDown() {
         return 0.98F;
     }
 
-    public IEntityLivingData onInitialSpawn(DifficultyInstance difficulty, IEntityLivingData livingdata)
-    {
-        if (livingdata instanceof EntityPolarBear.GroupData)
-        {
-            if (((EntityPolarBear.GroupData)livingdata).madeParent)
-            {
+    public IEntityLivingData onInitialSpawn(DifficultyInstance difficulty, IEntityLivingData livingdata) {
+        if (livingdata instanceof EntityPolarBear.GroupData) {
+            if (((EntityPolarBear.GroupData) livingdata).madeParent) {
                 this.setGrowingAge(-24000);
             }
-        }
-        else
-        {
+        } else {
             EntityPolarBear.GroupData entitypolarbear$groupdata = new EntityPolarBear.GroupData();
             entitypolarbear$groupdata.madeParent = true;
             livingdata = entitypolarbear$groupdata;
@@ -200,139 +157,106 @@
         return livingdata;
     }
 
-    class AIAttackPlayer extends EntityAINearestAttackableTarget<EntityPlayer>
-    {
-        public AIAttackPlayer()
-        {
-            super(EntityPolarBear.this, EntityPlayer.class, 20, true, true, (Predicate)null);
+    class AIAttackPlayer extends EntityAINearestAttackableTarget<EntityPlayer> {
+        public AIAttackPlayer() {
+            super(EntityPolarBear.this, EntityPlayer.class, 20, true, true, (Predicate) null);
         }
 
-        public boolean shouldExecute()
-        {
-            if (EntityPolarBear.this.isChild())
-            {
+        public boolean shouldExecute() {
+            if (EntityPolarBear.this.isChild()) {
                 return false;
-            }
-            else
-            {
-                if (super.shouldExecute())
-                {
-                    for (EntityPolarBear entitypolarbear : EntityPolarBear.this.world.getEntitiesWithinAABB(EntityPolarBear.class, EntityPolarBear.this.getEntityBoundingBox().grow(8.0D, 4.0D, 8.0D)))
-                    {
-                        if (entitypolarbear.isChild())
-                        {
+            } else {
+                if (super.shouldExecute()) {
+                    for (EntityPolarBear entitypolarbear : EntityPolarBear.this.world.getEntitiesWithinAABB(EntityPolarBear.class, EntityPolarBear.this.getEntityBoundingBox().grow(8.0D, 4.0D, 8.0D))) {
+                        if (entitypolarbear.isChild()) {
                             return true;
                         }
                     }
                 }
 
-                EntityPolarBear.this.setAttackTarget((EntityLivingBase)null);
+                EntityPolarBear.this.setAttackTarget((EntityLivingBase) null);
                 return false;
             }
         }
 
-        protected double getTargetDistance()
-        {
+        protected double getTargetDistance() {
             return super.getTargetDistance() * 0.5D;
         }
     }
 
-    class AIHurtByTarget extends EntityAIHurtByTarget
-    {
-        public AIHurtByTarget()
-        {
+    class AIHurtByTarget extends EntityAIHurtByTarget {
+        public AIHurtByTarget() {
             super(EntityPolarBear.this, false);
         }
 
-        public void startExecuting()
-        {
+        public void startExecuting() {
             super.startExecuting();
 
-            if (EntityPolarBear.this.isChild())
-            {
+            if (EntityPolarBear.this.isChild()) {
                 this.alertOthers();
                 this.resetTask();
             }
         }
 
-        protected void setEntityAttackTarget(EntityCreature creatureIn, EntityLivingBase entityLivingBaseIn)
-        {
-            if (creatureIn instanceof EntityPolarBear && !creatureIn.isChild())
-            {
+        protected void setEntityAttackTarget(EntityCreature creatureIn, EntityLivingBase entityLivingBaseIn) {
+            if (creatureIn instanceof EntityPolarBear && !creatureIn.isChild()) {
                 super.setEntityAttackTarget(creatureIn, entityLivingBaseIn);
             }
         }
     }
 
-    class AIMeleeAttack extends EntityAIAttackMelee
-    {
-        public AIMeleeAttack()
-        {
+    class AIMeleeAttack extends EntityAIAttackMelee {
+        public AIMeleeAttack() {
             super(EntityPolarBear.this, 1.25D, true);
         }
 
-        protected void checkAndPerformAttack(EntityLivingBase p_190102_1_, double p_190102_2_)
-        {
+        protected void checkAndPerformAttack(EntityLivingBase p_190102_1_, double p_190102_2_) {
             double d0 = this.getAttackReachSqr(p_190102_1_);
 
-            if (p_190102_2_ <= d0 && this.attackTick <= 0)
-            {
+            if (p_190102_2_ <= d0 && this.attackTick <= 0) {
                 this.attackTick = 20;
                 this.attacker.attackEntityAsMob(p_190102_1_);
                 EntityPolarBear.this.setStanding(false);
-            }
-            else if (p_190102_2_ <= d0 * 2.0D)
-            {
-                if (this.attackTick <= 0)
-                {
+            } else if (p_190102_2_ <= d0 * 2.0D) {
+                if (this.attackTick <= 0) {
                     EntityPolarBear.this.setStanding(false);
                     this.attackTick = 20;
                 }
 
-                if (this.attackTick <= 10)
-                {
+                if (this.attackTick <= 10) {
                     EntityPolarBear.this.setStanding(true);
                     EntityPolarBear.this.playWarningSound();
                 }
-            }
-            else
-            {
+            } else {
                 this.attackTick = 20;
                 EntityPolarBear.this.setStanding(false);
             }
         }
 
-        public void resetTask()
-        {
+        public void resetTask() {
             EntityPolarBear.this.setStanding(false);
             super.resetTask();
         }
 
-        protected double getAttackReachSqr(EntityLivingBase attackTarget)
-        {
-            return (double)(4.0F + attackTarget.width);
+        protected double getAttackReachSqr(EntityLivingBase attackTarget) {
+            return (double) (4.0F + attackTarget.width);
         }
     }
 
-    class AIPanic extends EntityAIPanic
-    {
-        public AIPanic()
-        {
+    class AIPanic extends EntityAIPanic {
+        public AIPanic() {
             super(EntityPolarBear.this, 2.0D);
         }
 
-        public boolean shouldExecute()
-        {
+        public boolean shouldExecute() {
             return !EntityPolarBear.this.isChild() && !EntityPolarBear.this.isBurning() ? false : super.shouldExecute();
         }
     }
 
-    static class GroupData implements IEntityLivingData
-        {
-            public boolean madeParent;
+    static class GroupData implements IEntityLivingData {
+        public boolean madeParent;
 
-            private GroupData()
-            {
-            }
+        private GroupData() {
         }
+    }
 }
