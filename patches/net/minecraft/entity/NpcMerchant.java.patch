--- ../src-base/minecraft/net/minecraft/entity/NpcMerchant.java
+++ ../src-work/minecraft/net/minecraft/entity/NpcMerchant.java
@@ -1,6 +1,5 @@
 package net.minecraft.entity;
 
-import javax.annotation.Nullable;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.inventory.InventoryMerchant;
 import net.minecraft.item.ItemStack;
@@ -13,63 +12,54 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import javax.annotation.Nullable;
+
 @SideOnly(Side.CLIENT)
-public class NpcMerchant implements IMerchant
-{
+public class NpcMerchant implements IMerchant {
     private final InventoryMerchant merchantInventory;
     private final EntityPlayer customer;
     private MerchantRecipeList recipeList;
     private final ITextComponent name;
 
-    public NpcMerchant(EntityPlayer customerIn, ITextComponent nameIn)
-    {
+    public NpcMerchant(EntityPlayer customerIn, ITextComponent nameIn) {
         this.customer = customerIn;
         this.name = nameIn;
         this.merchantInventory = new InventoryMerchant(customerIn, this);
     }
 
     @Nullable
-    public EntityPlayer getCustomer()
-    {
+    public EntityPlayer getCustomer() {
         return this.customer;
     }
 
-    public void setCustomer(@Nullable EntityPlayer player)
-    {
+    public void setCustomer(@Nullable EntityPlayer player) {
     }
 
     @Nullable
-    public MerchantRecipeList getRecipes(EntityPlayer player)
-    {
+    public MerchantRecipeList getRecipes(EntityPlayer player) {
         return net.minecraftforge.event.ForgeEventFactory.listTradeOffers(this, player, this.recipeList);
     }
 
-    public void setRecipes(@Nullable MerchantRecipeList recipeList)
-    {
+    public void setRecipes(@Nullable MerchantRecipeList recipeList) {
         this.recipeList = recipeList;
     }
 
-    public void useRecipe(MerchantRecipe recipe)
-    {
+    public void useRecipe(MerchantRecipe recipe) {
         recipe.incrementToolUses();
     }
 
-    public void verifySellingItem(ItemStack stack)
-    {
+    public void verifySellingItem(ItemStack stack) {
     }
 
-    public ITextComponent getDisplayName()
-    {
-        return (ITextComponent)(this.name != null ? this.name : new TextComponentTranslation("entity.Villager.name", new Object[0]));
+    public ITextComponent getDisplayName() {
+        return (ITextComponent) (this.name != null ? this.name : new TextComponentTranslation("entity.Villager.name", new Object[0]));
     }
 
-    public World getWorld()
-    {
+    public World getWorld() {
         return this.customer.world;
     }
 
-    public BlockPos getPos()
-    {
+    public BlockPos getPos() {
         return new BlockPos(this.customer);
     }
 }
