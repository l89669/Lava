--- ../src-base/minecraft/net/minecraft/entity/projectile/EntitySnowball.java
+++ ../src-work/minecraft/net/minecraft/entity/projectile/EntitySnowball.java
@@ -10,57 +10,45 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class EntitySnowball extends EntityThrowable
-{
-    public EntitySnowball(World worldIn)
-    {
+public class EntitySnowball extends EntityThrowable {
+    public EntitySnowball(World worldIn) {
         super(worldIn);
     }
 
-    public EntitySnowball(World worldIn, EntityLivingBase throwerIn)
-    {
+    public EntitySnowball(World worldIn, EntityLivingBase throwerIn) {
         super(worldIn, throwerIn);
     }
 
-    public EntitySnowball(World worldIn, double x, double y, double z)
-    {
+    public EntitySnowball(World worldIn, double x, double y, double z) {
         super(worldIn, x, y, z);
     }
 
-    public static void registerFixesSnowball(DataFixer fixer)
-    {
+    public static void registerFixesSnowball(DataFixer fixer) {
         EntityThrowable.registerFixesThrowable(fixer, "Snowball");
     }
 
     @SideOnly(Side.CLIENT)
-    public void handleStatusUpdate(byte id)
-    {
-        if (id == 3)
-        {
-            for (int i = 0; i < 8; ++i)
-            {
+    public void handleStatusUpdate(byte id) {
+        if (id == 3) {
+            for (int i = 0; i < 8; ++i) {
                 this.world.spawnParticle(EnumParticleTypes.SNOWBALL, this.posX, this.posY, this.posZ, 0.0D, 0.0D, 0.0D);
             }
         }
     }
 
-    protected void onImpact(RayTraceResult result)
-    {
-        if (result.entityHit != null)
-        {
+    protected void onImpact(RayTraceResult result) {
+        if (result.entityHit != null) {
             int i = 0;
 
-            if (result.entityHit instanceof EntityBlaze)
-            {
+            if (result.entityHit instanceof EntityBlaze) {
                 i = 3;
             }
 
-            result.entityHit.attackEntityFrom(DamageSource.causeThrownDamage(this, this.getThrower()), (float)i);
+            result.entityHit.attackEntityFrom(DamageSource.causeThrownDamage(this, this.getThrower()), (float) i);
         }
 
-        if (!this.world.isRemote)
-        {
-            this.world.setEntityState(this, (byte)3);
+        if (!this.world.isRemote) {
+            this.world.setEntityState(this, (byte) 3);
             this.setDead();
         }
     }
