--- ../src-base/minecraft/net/minecraft/network/play/client/CPacketClientSettings.java
+++ ../src-work/minecraft/net/minecraft/network/play/client/CPacketClientSettings.java
@@ -1,6 +1,5 @@
 package net.minecraft.network.play.client;
 
-import java.io.IOException;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
@@ -9,8 +8,9 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class CPacketClientSettings implements Packet<INetHandlerPlayServer>
-{
+import java.io.IOException;
+
+public class CPacketClientSettings implements Packet<INetHandlerPlayServer> {
     private String lang;
     private int view;
     private EntityPlayer.EnumChatVisibility chatVisibility;
@@ -18,13 +18,11 @@
     private int modelPartFlags;
     private EnumHandSide mainHand;
 
-    public CPacketClientSettings()
-    {
+    public CPacketClientSettings() {
     }
 
     @SideOnly(Side.CLIENT)
-    public CPacketClientSettings(String langIn, int renderDistanceIn, EntityPlayer.EnumChatVisibility chatVisibilityIn, boolean chatColorsIn, int modelPartsIn, EnumHandSide mainHandIn)
-    {
+    public CPacketClientSettings(String langIn, int renderDistanceIn, EntityPlayer.EnumChatVisibility chatVisibilityIn, boolean chatColorsIn, int modelPartsIn, EnumHandSide mainHandIn) {
         this.lang = langIn;
         this.view = renderDistanceIn;
         this.chatVisibility = chatVisibilityIn;
@@ -33,18 +31,16 @@
         this.mainHand = mainHandIn;
     }
 
-    public void readPacketData(PacketBuffer buf) throws IOException
-    {
+    public void readPacketData(PacketBuffer buf) throws IOException {
         this.lang = buf.readString(16);
         this.view = buf.readByte();
-        this.chatVisibility = (EntityPlayer.EnumChatVisibility)buf.readEnumValue(EntityPlayer.EnumChatVisibility.class);
+        this.chatVisibility = (EntityPlayer.EnumChatVisibility) buf.readEnumValue(EntityPlayer.EnumChatVisibility.class);
         this.enableColors = buf.readBoolean();
         this.modelPartFlags = buf.readUnsignedByte();
-        this.mainHand = (EnumHandSide)buf.readEnumValue(EnumHandSide.class);
+        this.mainHand = (EnumHandSide) buf.readEnumValue(EnumHandSide.class);
     }
 
-    public void writePacketData(PacketBuffer buf) throws IOException
-    {
+    public void writePacketData(PacketBuffer buf) throws IOException {
         buf.writeString(this.lang);
         buf.writeByte(this.view);
         buf.writeEnumValue(this.chatVisibility);
@@ -53,33 +49,27 @@
         buf.writeEnumValue(this.mainHand);
     }
 
-    public void processPacket(INetHandlerPlayServer handler)
-    {
+    public void processPacket(INetHandlerPlayServer handler) {
         handler.processClientSettings(this);
     }
 
-    public String getLang()
-    {
+    public String getLang() {
         return this.lang;
     }
 
-    public EntityPlayer.EnumChatVisibility getChatVisibility()
-    {
+    public EntityPlayer.EnumChatVisibility getChatVisibility() {
         return this.chatVisibility;
     }
 
-    public boolean isColorsEnabled()
-    {
+    public boolean isColorsEnabled() {
         return this.enableColors;
     }
 
-    public int getModelPartFlags()
-    {
+    public int getModelPartFlags() {
         return this.modelPartFlags;
     }
 
-    public EnumHandSide getMainHand()
-    {
+    public EnumHandSide getMainHand() {
         return this.mainHand;
     }
 }
