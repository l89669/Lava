--- ../src-base/minecraft/net/minecraft/network/play/server/SPacketServerDifficulty.java
+++ ../src-work/minecraft/net/minecraft/network/play/server/SPacketServerDifficulty.java
@@ -1,6 +1,5 @@
 package net.minecraft.network.play.server;
 
-import java.io.IOException;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
 import net.minecraft.network.play.INetHandlerPlayClient;
@@ -8,45 +7,39 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class SPacketServerDifficulty implements Packet<INetHandlerPlayClient>
-{
+import java.io.IOException;
+
+public class SPacketServerDifficulty implements Packet<INetHandlerPlayClient> {
     private EnumDifficulty difficulty;
     private boolean difficultyLocked;
 
-    public SPacketServerDifficulty()
-    {
+    public SPacketServerDifficulty() {
     }
 
-    public SPacketServerDifficulty(EnumDifficulty difficultyIn, boolean difficultyLockedIn)
-    {
+    public SPacketServerDifficulty(EnumDifficulty difficultyIn, boolean difficultyLockedIn) {
         this.difficulty = difficultyIn;
         this.difficultyLocked = difficultyLockedIn;
     }
 
-    public void processPacket(INetHandlerPlayClient handler)
-    {
+    public void processPacket(INetHandlerPlayClient handler) {
         handler.handleServerDifficulty(this);
     }
 
-    public void readPacketData(PacketBuffer buf) throws IOException
-    {
+    public void readPacketData(PacketBuffer buf) throws IOException {
         this.difficulty = EnumDifficulty.getDifficultyEnum(buf.readUnsignedByte());
     }
 
-    public void writePacketData(PacketBuffer buf) throws IOException
-    {
+    public void writePacketData(PacketBuffer buf) throws IOException {
         buf.writeByte(this.difficulty.getDifficultyId());
     }
 
     @SideOnly(Side.CLIENT)
-    public boolean isDifficultyLocked()
-    {
+    public boolean isDifficultyLocked() {
         return this.difficultyLocked;
     }
 
     @SideOnly(Side.CLIENT)
-    public EnumDifficulty getDifficulty()
-    {
+    public EnumDifficulty getDifficulty() {
         return this.difficulty;
     }
 }
