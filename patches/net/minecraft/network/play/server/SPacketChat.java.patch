--- ../src-base/minecraft/net/minecraft/network/play/server/SPacketChat.java
+++ ../src-work/minecraft/net/minecraft/network/play/server/SPacketChat.java
@@ -1,6 +1,5 @@
 package net.minecraft.network.play.server;
 
-import java.io.IOException;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
 import net.minecraft.network.play.INetHandlerPlayClient;
@@ -9,56 +8,55 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class SPacketChat implements Packet<INetHandlerPlayClient>
-{
+import java.io.IOException;
+
+public class SPacketChat implements Packet<INetHandlerPlayClient> {
     private ITextComponent chatComponent;
+    public net.md_5.bungee.api.chat.BaseComponent[] components; // Spigot
     private ChatType type;
 
-    public SPacketChat()
-    {
+    public SPacketChat() {
     }
 
-    public SPacketChat(ITextComponent componentIn)
-    {
+    public SPacketChat(ITextComponent componentIn) {
         this(componentIn, ChatType.SYSTEM);
     }
 
-    public SPacketChat(ITextComponent message, ChatType type)
-    {
+    public SPacketChat(ITextComponent message, ChatType type) {
         this.chatComponent = message;
         this.type = type;
     }
 
-    public void readPacketData(PacketBuffer buf) throws IOException
-    {
+    public void readPacketData(PacketBuffer buf) throws IOException {
         this.chatComponent = buf.readTextComponent();
         this.type = ChatType.byId(buf.readByte());
     }
 
-    public void writePacketData(PacketBuffer buf) throws IOException
-    {
-        buf.writeTextComponent(this.chatComponent);
+    public void writePacketData(PacketBuffer buf) throws IOException {
+        // Spigot start
+        if (components != null) {
+            buf.writeString(net.md_5.bungee.chat.ComponentSerializer.toString(components));
+        } else {
+            buf.writeTextComponent(this.chatComponent);
+        }
+        // Spigot end
         buf.writeByte(this.type.getId());
     }
 
-    public void processPacket(INetHandlerPlayClient handler)
-    {
+    public void processPacket(INetHandlerPlayClient handler) {
         handler.handleChat(this);
     }
 
     @SideOnly(Side.CLIENT)
-    public ITextComponent getChatComponent()
-    {
+    public ITextComponent getChatComponent() {
         return this.chatComponent;
     }
 
-    public boolean isSystem()
-    {
+    public boolean isSystem() {
         return this.type == ChatType.SYSTEM || this.type == ChatType.GAME_INFO;
     }
 
-    public ChatType getType()
-    {
+    public ChatType getType() {
         return this.type;
     }
 }
