--- ../src-base/minecraft/net/minecraft/network/play/server/SPacketEntity.java
+++ ../src-work/minecraft/net/minecraft/network/play/server/SPacketEntity.java
@@ -1,6 +1,5 @@
 package net.minecraft.network.play.server;
 
-import java.io.IOException;
 import net.minecraft.entity.Entity;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
@@ -9,8 +8,9 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class SPacketEntity implements Packet<INetHandlerPlayClient>
-{
+import java.io.IOException;
+
+public class SPacketEntity implements Packet<INetHandlerPlayClient> {
     protected int entityId;
     protected int posX;
     protected int posY;
@@ -20,189 +20,160 @@
     protected boolean onGround;
     protected boolean rotating;
 
-    public SPacketEntity()
-    {
+    public SPacketEntity() {
     }
 
-    public SPacketEntity(int entityIdIn)
-    {
+    public SPacketEntity(int entityIdIn) {
         this.entityId = entityIdIn;
     }
 
-    public void readPacketData(PacketBuffer buf) throws IOException
-    {
+    public void readPacketData(PacketBuffer buf) throws IOException {
         this.entityId = buf.readVarInt();
     }
 
-    public void writePacketData(PacketBuffer buf) throws IOException
-    {
+    public void writePacketData(PacketBuffer buf) throws IOException {
         buf.writeVarInt(this.entityId);
     }
 
-    public void processPacket(INetHandlerPlayClient handler)
-    {
+    public void processPacket(INetHandlerPlayClient handler) {
         handler.handleEntityMovement(this);
     }
 
-    public String toString()
-    {
+    public String toString() {
         return "Entity_" + super.toString();
     }
 
     @SideOnly(Side.CLIENT)
-    public Entity getEntity(World worldIn)
-    {
+    public Entity getEntity(World worldIn) {
         return worldIn.getEntityByID(this.entityId);
     }
 
     @SideOnly(Side.CLIENT)
-    public int getX()
-    {
+    public int getX() {
         return this.posX;
     }
 
     @SideOnly(Side.CLIENT)
-    public int getY()
-    {
+    public int getY() {
         return this.posY;
     }
 
     @SideOnly(Side.CLIENT)
-    public int getZ()
-    {
+    public int getZ() {
         return this.posZ;
     }
 
     @SideOnly(Side.CLIENT)
-    public byte getYaw()
-    {
+    public byte getYaw() {
         return this.yaw;
     }
 
     @SideOnly(Side.CLIENT)
-    public byte getPitch()
-    {
+    public byte getPitch() {
         return this.pitch;
     }
 
     @SideOnly(Side.CLIENT)
-    public boolean isRotating()
-    {
+    public boolean isRotating() {
         return this.rotating;
     }
 
     @SideOnly(Side.CLIENT)
-    public boolean getOnGround()
-    {
+    public boolean getOnGround() {
         return this.onGround;
     }
 
-    public static class S15PacketEntityRelMove extends SPacketEntity
-        {
-            public S15PacketEntityRelMove()
-            {
-            }
+    public static class S15PacketEntityRelMove extends SPacketEntity {
+        public S15PacketEntityRelMove() {
+        }
 
-            public S15PacketEntityRelMove(int entityIdIn, long xIn, long yIn, long zIn, boolean onGroundIn)
-            {
-                super(entityIdIn);
-                this.posX = (int)xIn;
-                this.posY = (int)yIn;
-                this.posZ = (int)zIn;
-                this.onGround = onGroundIn;
-            }
+        public S15PacketEntityRelMove(int entityIdIn, long xIn, long yIn, long zIn, boolean onGroundIn) {
+            super(entityIdIn);
+            this.posX = (int) xIn;
+            this.posY = (int) yIn;
+            this.posZ = (int) zIn;
+            this.onGround = onGroundIn;
+        }
 
-            public void readPacketData(PacketBuffer buf) throws IOException
-            {
-                super.readPacketData(buf);
-                this.posX = buf.readShort();
-                this.posY = buf.readShort();
-                this.posZ = buf.readShort();
-                this.onGround = buf.readBoolean();
-            }
+        public void readPacketData(PacketBuffer buf) throws IOException {
+            super.readPacketData(buf);
+            this.posX = buf.readShort();
+            this.posY = buf.readShort();
+            this.posZ = buf.readShort();
+            this.onGround = buf.readBoolean();
+        }
 
-            public void writePacketData(PacketBuffer buf) throws IOException
-            {
-                super.writePacketData(buf);
-                buf.writeShort(this.posX);
-                buf.writeShort(this.posY);
-                buf.writeShort(this.posZ);
-                buf.writeBoolean(this.onGround);
-            }
+        public void writePacketData(PacketBuffer buf) throws IOException {
+            super.writePacketData(buf);
+            buf.writeShort(this.posX);
+            buf.writeShort(this.posY);
+            buf.writeShort(this.posZ);
+            buf.writeBoolean(this.onGround);
         }
+    }
 
-    public static class S16PacketEntityLook extends SPacketEntity
-        {
-            public S16PacketEntityLook()
-            {
-                this.rotating = true;
-            }
+    public static class S16PacketEntityLook extends SPacketEntity {
+        public S16PacketEntityLook() {
+            this.rotating = true;
+        }
 
-            public S16PacketEntityLook(int entityIdIn, byte yawIn, byte pitchIn, boolean onGroundIn)
-            {
-                super(entityIdIn);
-                this.yaw = yawIn;
-                this.pitch = pitchIn;
-                this.rotating = true;
-                this.onGround = onGroundIn;
-            }
+        public S16PacketEntityLook(int entityIdIn, byte yawIn, byte pitchIn, boolean onGroundIn) {
+            super(entityIdIn);
+            this.yaw = yawIn;
+            this.pitch = pitchIn;
+            this.rotating = true;
+            this.onGround = onGroundIn;
+        }
 
-            public void readPacketData(PacketBuffer buf) throws IOException
-            {
-                super.readPacketData(buf);
-                this.yaw = buf.readByte();
-                this.pitch = buf.readByte();
-                this.onGround = buf.readBoolean();
-            }
+        public void readPacketData(PacketBuffer buf) throws IOException {
+            super.readPacketData(buf);
+            this.yaw = buf.readByte();
+            this.pitch = buf.readByte();
+            this.onGround = buf.readBoolean();
+        }
 
-            public void writePacketData(PacketBuffer buf) throws IOException
-            {
-                super.writePacketData(buf);
-                buf.writeByte(this.yaw);
-                buf.writeByte(this.pitch);
-                buf.writeBoolean(this.onGround);
-            }
+        public void writePacketData(PacketBuffer buf) throws IOException {
+            super.writePacketData(buf);
+            buf.writeByte(this.yaw);
+            buf.writeByte(this.pitch);
+            buf.writeBoolean(this.onGround);
         }
+    }
 
-    public static class S17PacketEntityLookMove extends SPacketEntity
-        {
-            public S17PacketEntityLookMove()
-            {
-                this.rotating = true;
-            }
+    public static class S17PacketEntityLookMove extends SPacketEntity {
+        public S17PacketEntityLookMove() {
+            this.rotating = true;
+        }
 
-            public S17PacketEntityLookMove(int entityIdIn, long xIn, long yIn, long zIn, byte yawIn, byte pitchIn, boolean onGroundIn)
-            {
-                super(entityIdIn);
-                this.posX = (int)xIn;
-                this.posY = (int)yIn;
-                this.posZ = (int)zIn;
-                this.yaw = yawIn;
-                this.pitch = pitchIn;
-                this.onGround = onGroundIn;
-                this.rotating = true;
-            }
+        public S17PacketEntityLookMove(int entityIdIn, long xIn, long yIn, long zIn, byte yawIn, byte pitchIn, boolean onGroundIn) {
+            super(entityIdIn);
+            this.posX = (int) xIn;
+            this.posY = (int) yIn;
+            this.posZ = (int) zIn;
+            this.yaw = yawIn;
+            this.pitch = pitchIn;
+            this.onGround = onGroundIn;
+            this.rotating = true;
+        }
 
-            public void readPacketData(PacketBuffer buf) throws IOException
-            {
-                super.readPacketData(buf);
-                this.posX = buf.readShort();
-                this.posY = buf.readShort();
-                this.posZ = buf.readShort();
-                this.yaw = buf.readByte();
-                this.pitch = buf.readByte();
-                this.onGround = buf.readBoolean();
-            }
+        public void readPacketData(PacketBuffer buf) throws IOException {
+            super.readPacketData(buf);
+            this.posX = buf.readShort();
+            this.posY = buf.readShort();
+            this.posZ = buf.readShort();
+            this.yaw = buf.readByte();
+            this.pitch = buf.readByte();
+            this.onGround = buf.readBoolean();
+        }
 
-            public void writePacketData(PacketBuffer buf) throws IOException
-            {
-                super.writePacketData(buf);
-                buf.writeShort(this.posX);
-                buf.writeShort(this.posY);
-                buf.writeShort(this.posZ);
-                buf.writeByte(this.yaw);
-                buf.writeByte(this.pitch);
-                buf.writeBoolean(this.onGround);
-            }
+        public void writePacketData(PacketBuffer buf) throws IOException {
+            super.writePacketData(buf);
+            buf.writeShort(this.posX);
+            buf.writeShort(this.posY);
+            buf.writeShort(this.posZ);
+            buf.writeByte(this.yaw);
+            buf.writeByte(this.pitch);
+            buf.writeBoolean(this.onGround);
         }
+    }
 }
