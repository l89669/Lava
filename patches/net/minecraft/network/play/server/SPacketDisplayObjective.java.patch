--- ../src-base/minecraft/net/minecraft/network/play/server/SPacketDisplayObjective.java
+++ ../src-work/minecraft/net/minecraft/network/play/server/SPacketDisplayObjective.java
@@ -1,6 +1,5 @@
 package net.minecraft.network.play.server;
 
-import java.io.IOException;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
 import net.minecraft.network.play.INetHandlerPlayClient;
@@ -8,55 +7,46 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class SPacketDisplayObjective implements Packet<INetHandlerPlayClient>
-{
+import java.io.IOException;
+
+public class SPacketDisplayObjective implements Packet<INetHandlerPlayClient> {
     private int position;
     private String scoreName;
 
-    public SPacketDisplayObjective()
-    {
+    public SPacketDisplayObjective() {
     }
 
-    public SPacketDisplayObjective(int positionIn, ScoreObjective objective)
-    {
+    public SPacketDisplayObjective(int positionIn, ScoreObjective objective) {
         this.position = positionIn;
 
-        if (objective == null)
-        {
+        if (objective == null) {
             this.scoreName = "";
-        }
-        else
-        {
+        } else {
             this.scoreName = objective.getName();
         }
     }
 
-    public void readPacketData(PacketBuffer buf) throws IOException
-    {
+    public void readPacketData(PacketBuffer buf) throws IOException {
         this.position = buf.readByte();
         this.scoreName = buf.readString(16);
     }
 
-    public void writePacketData(PacketBuffer buf) throws IOException
-    {
+    public void writePacketData(PacketBuffer buf) throws IOException {
         buf.writeByte(this.position);
         buf.writeString(this.scoreName);
     }
 
-    public void processPacket(INetHandlerPlayClient handler)
-    {
+    public void processPacket(INetHandlerPlayClient handler) {
         handler.handleDisplayObjective(this);
     }
 
     @SideOnly(Side.CLIENT)
-    public int getPosition()
-    {
+    public int getPosition() {
         return this.position;
     }
 
     @SideOnly(Side.CLIENT)
-    public String getName()
-    {
+    public String getName() {
         return this.scoreName;
     }
 }
