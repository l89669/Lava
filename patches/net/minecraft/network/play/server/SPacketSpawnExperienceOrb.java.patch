--- ../src-base/minecraft/net/minecraft/network/play/server/SPacketSpawnExperienceOrb.java
+++ ../src-work/minecraft/net/minecraft/network/play/server/SPacketSpawnExperienceOrb.java
@@ -1,6 +1,5 @@
 package net.minecraft.network.play.server;
 
-import java.io.IOException;
 import net.minecraft.entity.item.EntityXPOrb;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
@@ -8,20 +7,19 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class SPacketSpawnExperienceOrb implements Packet<INetHandlerPlayClient>
-{
+import java.io.IOException;
+
+public class SPacketSpawnExperienceOrb implements Packet<INetHandlerPlayClient> {
     private int entityID;
     private double posX;
     private double posY;
     private double posZ;
     private int xpValue;
 
-    public SPacketSpawnExperienceOrb()
-    {
+    public SPacketSpawnExperienceOrb() {
     }
 
-    public SPacketSpawnExperienceOrb(EntityXPOrb orb)
-    {
+    public SPacketSpawnExperienceOrb(EntityXPOrb orb) {
         this.entityID = orb.getEntityId();
         this.posX = orb.posX;
         this.posY = orb.posY;
@@ -29,8 +27,7 @@
         this.xpValue = orb.getXpValue();
     }
 
-    public void readPacketData(PacketBuffer buf) throws IOException
-    {
+    public void readPacketData(PacketBuffer buf) throws IOException {
         this.entityID = buf.readVarInt();
         this.posX = buf.readDouble();
         this.posY = buf.readDouble();
@@ -38,8 +35,7 @@
         this.xpValue = buf.readShort();
     }
 
-    public void writePacketData(PacketBuffer buf) throws IOException
-    {
+    public void writePacketData(PacketBuffer buf) throws IOException {
         buf.writeVarInt(this.entityID);
         buf.writeDouble(this.posX);
         buf.writeDouble(this.posY);
@@ -47,38 +43,32 @@
         buf.writeShort(this.xpValue);
     }
 
-    public void processPacket(INetHandlerPlayClient handler)
-    {
+    public void processPacket(INetHandlerPlayClient handler) {
         handler.handleSpawnExperienceOrb(this);
     }
 
     @SideOnly(Side.CLIENT)
-    public int getEntityID()
-    {
+    public int getEntityID() {
         return this.entityID;
     }
 
     @SideOnly(Side.CLIENT)
-    public double getX()
-    {
+    public double getX() {
         return this.posX;
     }
 
     @SideOnly(Side.CLIENT)
-    public double getY()
-    {
+    public double getY() {
         return this.posY;
     }
 
     @SideOnly(Side.CLIENT)
-    public double getZ()
-    {
+    public double getZ() {
         return this.posZ;
     }
 
     @SideOnly(Side.CLIENT)
-    public int getXPValue()
-    {
+    public int getXPValue() {
         return this.xpValue;
     }
 }
