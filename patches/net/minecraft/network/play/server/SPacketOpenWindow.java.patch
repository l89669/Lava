--- ../src-base/minecraft/net/minecraft/network/play/server/SPacketOpenWindow.java
+++ ../src-work/minecraft/net/minecraft/network/play/server/SPacketOpenWindow.java
@@ -1,6 +1,5 @@
 package net.minecraft.network.play.server;
 
-import java.io.IOException;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
 import net.minecraft.network.play.INetHandlerPlayClient;
@@ -8,101 +7,87 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class SPacketOpenWindow implements Packet<INetHandlerPlayClient>
-{
+import java.io.IOException;
+
+public class SPacketOpenWindow implements Packet<INetHandlerPlayClient> {
     private int windowId;
     private String inventoryType;
     private ITextComponent windowTitle;
     private int slotCount;
     private int entityId;
 
-    public SPacketOpenWindow()
-    {
+    public SPacketOpenWindow() {
     }
 
-    public SPacketOpenWindow(int windowIdIn, String inventoryTypeIn, ITextComponent windowTitleIn)
-    {
+    public SPacketOpenWindow(int windowIdIn, String inventoryTypeIn, ITextComponent windowTitleIn) {
         this(windowIdIn, inventoryTypeIn, windowTitleIn, 0);
     }
 
-    public SPacketOpenWindow(int windowIdIn, String inventoryTypeIn, ITextComponent windowTitleIn, int slotCountIn)
-    {
+    public SPacketOpenWindow(int windowIdIn, String inventoryTypeIn, ITextComponent windowTitleIn, int slotCountIn) {
         this.windowId = windowIdIn;
         this.inventoryType = inventoryTypeIn;
         this.windowTitle = windowTitleIn;
         this.slotCount = slotCountIn;
     }
 
-    public SPacketOpenWindow(int windowIdIn, String inventoryTypeIn, ITextComponent windowTitleIn, int slotCountIn, int entityIdIn)
-    {
+    public SPacketOpenWindow(int windowIdIn, String inventoryTypeIn, ITextComponent windowTitleIn, int slotCountIn, int entityIdIn) {
         this(windowIdIn, inventoryTypeIn, windowTitleIn, slotCountIn);
         this.entityId = entityIdIn;
     }
 
-    public void processPacket(INetHandlerPlayClient handler)
-    {
+    public void processPacket(INetHandlerPlayClient handler) {
         handler.handleOpenWindow(this);
     }
 
-    public void readPacketData(PacketBuffer buf) throws IOException
-    {
+    public void readPacketData(PacketBuffer buf) throws IOException {
         this.windowId = buf.readUnsignedByte();
         this.inventoryType = buf.readString(32);
         this.windowTitle = buf.readTextComponent();
         this.slotCount = buf.readUnsignedByte();
 
-        if (this.inventoryType.equals("EntityHorse"))
-        {
+        if (this.inventoryType.equals("EntityHorse")) {
             this.entityId = buf.readInt();
         }
     }
 
-    public void writePacketData(PacketBuffer buf) throws IOException
-    {
+    public void writePacketData(PacketBuffer buf) throws IOException {
         buf.writeByte(this.windowId);
         buf.writeString(this.inventoryType);
         buf.writeTextComponent(this.windowTitle);
         buf.writeByte(this.slotCount);
 
-        if (this.inventoryType.equals("EntityHorse"))
-        {
+        if (this.inventoryType.equals("EntityHorse")) {
             buf.writeInt(this.entityId);
         }
     }
 
     @SideOnly(Side.CLIENT)
-    public int getWindowId()
-    {
+    public int getWindowId() {
         return this.windowId;
     }
 
     @SideOnly(Side.CLIENT)
-    public String getGuiId()
-    {
+    public String getGuiId() {
         return this.inventoryType;
     }
 
     @SideOnly(Side.CLIENT)
-    public ITextComponent getWindowTitle()
-    {
+    public ITextComponent getWindowTitle() {
         return this.windowTitle;
     }
 
     @SideOnly(Side.CLIENT)
-    public int getSlotCount()
-    {
+    public int getSlotCount() {
         return this.slotCount;
     }
 
     @SideOnly(Side.CLIENT)
-    public int getEntityId()
-    {
+    public int getEntityId() {
         return this.entityId;
     }
 
     @SideOnly(Side.CLIENT)
-    public boolean hasSlots()
-    {
+    public boolean hasSlots() {
         return this.slotCount > 0;
     }
 }
