--- ../src-base/minecraft/net/minecraft/network/play/server/SPacketCombatEvent.java
+++ ../src-work/minecraft/net/minecraft/network/play/server/SPacketCombatEvent.java
@@ -1,6 +1,5 @@
 package net.minecraft.network.play.server;
 
-import java.io.IOException;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
@@ -9,31 +8,28 @@
 import net.minecraft.util.text.ITextComponent;
 import net.minecraft.util.text.TextComponentString;
 
-public class SPacketCombatEvent implements Packet<INetHandlerPlayClient>
-{
+import java.io.IOException;
+
+public class SPacketCombatEvent implements Packet<INetHandlerPlayClient> {
     public SPacketCombatEvent.Event eventType;
     public int playerId;
     public int entityId;
     public int duration;
     public ITextComponent deathMessage;
 
-    public SPacketCombatEvent()
-    {
+    public SPacketCombatEvent() {
     }
 
-    public SPacketCombatEvent(CombatTracker tracker, SPacketCombatEvent.Event eventIn)
-    {
+    public SPacketCombatEvent(CombatTracker tracker, SPacketCombatEvent.Event eventIn) {
         this(tracker, eventIn, true);
     }
 
     @SuppressWarnings("incomplete-switch")
-    public SPacketCombatEvent(CombatTracker tracker, SPacketCombatEvent.Event eventIn, boolean showDeathMessage)
-    {
+    public SPacketCombatEvent(CombatTracker tracker, SPacketCombatEvent.Event eventIn, boolean showDeathMessage) {
         this.eventType = eventIn;
         EntityLivingBase entitylivingbase = tracker.getBestAttacker();
 
-        switch (eventIn)
-        {
+        switch (eventIn) {
             case END_COMBAT:
                 this.duration = tracker.getCombatDuration();
                 this.entityId = entitylivingbase == null ? -1 : entitylivingbase.getEntityId();
@@ -42,58 +38,45 @@
                 this.playerId = tracker.getFighter().getEntityId();
                 this.entityId = entitylivingbase == null ? -1 : entitylivingbase.getEntityId();
 
-                if (showDeathMessage)
-                {
+                if (showDeathMessage) {
                     this.deathMessage = tracker.getDeathMessage();
-                }
-                else
-                {
+                } else {
                     this.deathMessage = new TextComponentString("");
                 }
         }
     }
 
-    public void readPacketData(PacketBuffer buf) throws IOException
-    {
-        this.eventType = (SPacketCombatEvent.Event)buf.readEnumValue(SPacketCombatEvent.Event.class);
+    public void readPacketData(PacketBuffer buf) throws IOException {
+        this.eventType = (SPacketCombatEvent.Event) buf.readEnumValue(SPacketCombatEvent.Event.class);
 
-        if (this.eventType == SPacketCombatEvent.Event.END_COMBAT)
-        {
+        if (this.eventType == SPacketCombatEvent.Event.END_COMBAT) {
             this.duration = buf.readVarInt();
             this.entityId = buf.readInt();
-        }
-        else if (this.eventType == SPacketCombatEvent.Event.ENTITY_DIED)
-        {
+        } else if (this.eventType == SPacketCombatEvent.Event.ENTITY_DIED) {
             this.playerId = buf.readVarInt();
             this.entityId = buf.readInt();
             this.deathMessage = buf.readTextComponent();
         }
     }
 
-    public void writePacketData(PacketBuffer buf) throws IOException
-    {
+    public void writePacketData(PacketBuffer buf) throws IOException {
         buf.writeEnumValue(this.eventType);
 
-        if (this.eventType == SPacketCombatEvent.Event.END_COMBAT)
-        {
+        if (this.eventType == SPacketCombatEvent.Event.END_COMBAT) {
             buf.writeVarInt(this.duration);
             buf.writeInt(this.entityId);
-        }
-        else if (this.eventType == SPacketCombatEvent.Event.ENTITY_DIED)
-        {
+        } else if (this.eventType == SPacketCombatEvent.Event.ENTITY_DIED) {
             buf.writeVarInt(this.playerId);
             buf.writeInt(this.entityId);
             buf.writeTextComponent(this.deathMessage);
         }
     }
 
-    public void processPacket(INetHandlerPlayClient handler)
-    {
+    public void processPacket(INetHandlerPlayClient handler) {
         handler.handleCombatEvent(this);
     }
 
-    public static enum Event
-    {
+    public static enum Event {
         ENTER_COMBAT,
         END_COMBAT,
         ENTITY_DIED;
