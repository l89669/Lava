--- ../src-base/minecraft/net/minecraft/network/play/server/SPacketEntityMetadata.java
+++ ../src-work/minecraft/net/minecraft/network/play/server/SPacketEntityMetadata.java
@@ -1,7 +1,5 @@
 package net.minecraft.network.play.server;
 
-import java.io.IOException;
-import java.util.List;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
 import net.minecraft.network.datasync.EntityDataManager;
@@ -9,56 +7,48 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class SPacketEntityMetadata implements Packet<INetHandlerPlayClient>
-{
+import java.io.IOException;
+import java.util.List;
+
+public class SPacketEntityMetadata implements Packet<INetHandlerPlayClient> {
     private int entityId;
-    private List < EntityDataManager.DataEntry<? >> dataManagerEntries;
+    private List<EntityDataManager.DataEntry<?>> dataManagerEntries;
 
-    public SPacketEntityMetadata()
-    {
+    public SPacketEntityMetadata() {
     }
 
-    public SPacketEntityMetadata(int entityIdIn, EntityDataManager dataManagerIn, boolean sendAll)
-    {
+    public SPacketEntityMetadata(int entityIdIn, EntityDataManager dataManagerIn, boolean sendAll) {
         this.entityId = entityIdIn;
 
-        if (sendAll)
-        {
+        if (sendAll) {
             this.dataManagerEntries = dataManagerIn.getAll();
             dataManagerIn.setClean();
-        }
-        else
-        {
+        } else {
             this.dataManagerEntries = dataManagerIn.getDirty();
         }
     }
 
-    public void readPacketData(PacketBuffer buf) throws IOException
-    {
+    public void readPacketData(PacketBuffer buf) throws IOException {
         this.entityId = buf.readVarInt();
         this.dataManagerEntries = EntityDataManager.readEntries(buf);
     }
 
-    public void writePacketData(PacketBuffer buf) throws IOException
-    {
+    public void writePacketData(PacketBuffer buf) throws IOException {
         buf.writeVarInt(this.entityId);
         EntityDataManager.writeEntries(this.dataManagerEntries, buf);
     }
 
-    public void processPacket(INetHandlerPlayClient handler)
-    {
+    public void processPacket(INetHandlerPlayClient handler) {
         handler.handleEntityMetadata(this);
     }
 
     @SideOnly(Side.CLIENT)
-    public List < EntityDataManager.DataEntry<? >> getDataManagerEntries()
-    {
+    public List<EntityDataManager.DataEntry<?>> getDataManagerEntries() {
         return this.dataManagerEntries;
     }
 
     @SideOnly(Side.CLIENT)
-    public int getEntityId()
-    {
+    public int getEntityId() {
         return this.entityId;
     }
 }
