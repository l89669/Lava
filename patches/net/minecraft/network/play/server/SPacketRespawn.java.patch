--- ../src-base/minecraft/net/minecraft/network/play/server/SPacketRespawn.java
+++ ../src-work/minecraft/net/minecraft/network/play/server/SPacketRespawn.java
@@ -1,6 +1,5 @@
 package net.minecraft.network.play.server;
 
-import java.io.IOException;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
 import net.minecraft.network.play.INetHandlerPlayClient;
@@ -10,45 +9,40 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class SPacketRespawn implements Packet<INetHandlerPlayClient>
-{
+import java.io.IOException;
+
+public class SPacketRespawn implements Packet<INetHandlerPlayClient> {
     private int dimensionID;
     private EnumDifficulty difficulty;
     private GameType gameType;
     private WorldType worldType;
 
-    public SPacketRespawn()
-    {
+    public SPacketRespawn() {
     }
 
-    public SPacketRespawn(int dimensionIdIn, EnumDifficulty difficultyIn, WorldType worldTypeIn, GameType gameModeIn)
-    {
+    public SPacketRespawn(int dimensionIdIn, EnumDifficulty difficultyIn, WorldType worldTypeIn, GameType gameModeIn) {
         this.dimensionID = dimensionIdIn;
         this.difficulty = difficultyIn;
         this.gameType = gameModeIn;
         this.worldType = worldTypeIn;
     }
 
-    public void processPacket(INetHandlerPlayClient handler)
-    {
+    public void processPacket(INetHandlerPlayClient handler) {
         handler.handleRespawn(this);
     }
 
-    public void readPacketData(PacketBuffer buf) throws IOException
-    {
+    public void readPacketData(PacketBuffer buf) throws IOException {
         this.dimensionID = buf.readInt();
         this.difficulty = EnumDifficulty.getDifficultyEnum(buf.readUnsignedByte());
         this.gameType = GameType.getByID(buf.readUnsignedByte());
         this.worldType = WorldType.parseWorldType(buf.readString(16));
 
-        if (this.worldType == null)
-        {
+        if (this.worldType == null) {
             this.worldType = WorldType.DEFAULT;
         }
     }
 
-    public void writePacketData(PacketBuffer buf) throws IOException
-    {
+    public void writePacketData(PacketBuffer buf) throws IOException {
         buf.writeInt(this.dimensionID);
         buf.writeByte(this.difficulty.getDifficultyId());
         buf.writeByte(this.gameType.getID());
@@ -56,26 +50,22 @@
     }
 
     @SideOnly(Side.CLIENT)
-    public int getDimensionID()
-    {
+    public int getDimensionID() {
         return this.dimensionID;
     }
 
     @SideOnly(Side.CLIENT)
-    public EnumDifficulty getDifficulty()
-    {
+    public EnumDifficulty getDifficulty() {
         return this.difficulty;
     }
 
     @SideOnly(Side.CLIENT)
-    public GameType getGameType()
-    {
+    public GameType getGameType() {
         return this.gameType;
     }
 
     @SideOnly(Side.CLIENT)
-    public WorldType getWorldType()
-    {
+    public WorldType getWorldType() {
         return this.worldType;
     }
 }
