--- ../src-base/minecraft/net/minecraft/network/rcon/RConConsoleSource.java
+++ ../src-work/minecraft/net/minecraft/network/rcon/RConConsoleSource.java
@@ -7,55 +7,49 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class RConConsoleSource implements ICommandSender
-{
+public class RConConsoleSource implements ICommandSender {
     private final StringBuffer buffer = new StringBuffer();
     private final MinecraftServer server;
 
-    public RConConsoleSource(MinecraftServer serverIn)
-    {
+    public RConConsoleSource(MinecraftServer serverIn) {
         this.server = serverIn;
     }
 
-    public String getName()
-    {
+    public String getName() {
         return "Rcon";
     }
 
-    public void sendMessage(ITextComponent component)
-    {
+    public void sendMessage(String message) {
+        this.buffer.append(message);
+    }
+
+    public void sendMessage(ITextComponent component) {
         this.buffer.append(component.getUnformattedText());
     }
 
-    public boolean canUseCommand(int permLevel, String commandName)
-    {
+    public boolean canUseCommand(int permLevel, String commandName) {
         return true;
     }
 
-    public World getEntityWorld()
-    {
+    public World getEntityWorld() {
         return this.server.getEntityWorld();
     }
 
-    public boolean sendCommandFeedback()
-    {
+    public boolean sendCommandFeedback() {
         return true;
     }
 
-    public MinecraftServer getServer()
-    {
+    public MinecraftServer getServer() {
         return this.server;
     }
 
     @SideOnly(Side.SERVER)
-    public void resetLog()
-    {
+    public void resetLog() {
         this.buffer.setLength(0);
     }
 
     @SideOnly(Side.SERVER)
-    public String getLogContents()
-    {
+    public String getLogContents() {
         return this.buffer.toString();
     }
 }
