--- ../src-base/minecraft/net/minecraft/network/status/server/SPacketServerInfo.java
+++ ../src-work/minecraft/net/minecraft/network/status/server/SPacketServerInfo.java
@@ -2,7 +2,6 @@
 
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
-import java.io.IOException;
 import net.minecraft.network.Packet;
 import net.minecraft.network.PacketBuffer;
 import net.minecraft.network.ServerStatusResponse;
@@ -14,38 +13,33 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class SPacketServerInfo implements Packet<INetHandlerStatusClient>
-{
+import java.io.IOException;
+
+public class SPacketServerInfo implements Packet<INetHandlerStatusClient> {
     public static final Gson GSON = (new GsonBuilder()).registerTypeAdapter(ServerStatusResponse.Version.class, new ServerStatusResponse.Version.Serializer()).registerTypeAdapter(ServerStatusResponse.Players.class, new ServerStatusResponse.Players.Serializer()).registerTypeAdapter(ServerStatusResponse.class, new ServerStatusResponse.Serializer()).registerTypeHierarchyAdapter(ITextComponent.class, new ITextComponent.Serializer()).registerTypeHierarchyAdapter(Style.class, new Style.Serializer()).registerTypeAdapterFactory(new EnumTypeAdapterFactory()).create();
     private ServerStatusResponse response;
 
-    public SPacketServerInfo()
-    {
+    public SPacketServerInfo() {
     }
 
-    public SPacketServerInfo(ServerStatusResponse responseIn)
-    {
+    public SPacketServerInfo(ServerStatusResponse responseIn) {
         this.response = responseIn;
     }
 
-    public void readPacketData(PacketBuffer buf) throws IOException
-    {
-        this.response = (ServerStatusResponse)JsonUtils.gsonDeserialize(GSON, buf.readString(32767), ServerStatusResponse.class);
+    public void readPacketData(PacketBuffer buf) throws IOException {
+        this.response = (ServerStatusResponse) JsonUtils.gsonDeserialize(GSON, buf.readString(32767), ServerStatusResponse.class);
     }
 
-    public void writePacketData(PacketBuffer buf) throws IOException
-    {
+    public void writePacketData(PacketBuffer buf) throws IOException {
         buf.writeString(GSON.toJson(this.response));
     }
 
-    public void processPacket(INetHandlerStatusClient handler)
-    {
+    public void processPacket(INetHandlerStatusClient handler) {
         handler.handleServerInfo(this);
     }
 
     @SideOnly(Side.CLIENT)
-    public ServerStatusResponse getResponse()
-    {
+    public ServerStatusResponse getResponse() {
         return this.response;
     }
 }
