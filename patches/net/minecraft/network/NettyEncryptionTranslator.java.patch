--- ../src-base/minecraft/net/minecraft/network/NettyEncryptionTranslator.java
+++ ../src-work/minecraft/net/minecraft/network/NettyEncryptionTranslator.java
@@ -2,26 +2,23 @@
 
 import io.netty.buffer.ByteBuf;
 import io.netty.channel.ChannelHandlerContext;
+
 import javax.crypto.Cipher;
 import javax.crypto.ShortBufferException;
 
-public class NettyEncryptionTranslator
-{
+public class NettyEncryptionTranslator {
     private final Cipher cipher;
     private byte[] inputBuffer = new byte[0];
     private byte[] outputBuffer = new byte[0];
 
-    protected NettyEncryptionTranslator(Cipher cipherIn)
-    {
+    protected NettyEncryptionTranslator(Cipher cipherIn) {
         this.cipher = cipherIn;
     }
 
-    private byte[] bufToBytes(ByteBuf buf)
-    {
+    private byte[] bufToBytes(ByteBuf buf) {
         int i = buf.readableBytes();
 
-        if (this.inputBuffer.length < i)
-        {
+        if (this.inputBuffer.length < i) {
             this.inputBuffer = new byte[i];
         }
 
@@ -29,8 +26,7 @@
         return this.inputBuffer;
     }
 
-    protected ByteBuf decipher(ChannelHandlerContext ctx, ByteBuf buffer) throws ShortBufferException
-    {
+    protected ByteBuf decipher(ChannelHandlerContext ctx, ByteBuf buffer) throws ShortBufferException {
         int i = buffer.readableBytes();
         byte[] abyte = this.bufToBytes(buffer);
         ByteBuf bytebuf = ctx.alloc().heapBuffer(this.cipher.getOutputSize(i));
@@ -38,14 +34,12 @@
         return bytebuf;
     }
 
-    protected void cipher(ByteBuf in, ByteBuf out) throws ShortBufferException
-    {
+    protected void cipher(ByteBuf in, ByteBuf out) throws ShortBufferException {
         int i = in.readableBytes();
         byte[] abyte = this.bufToBytes(in);
         int j = this.cipher.getOutputSize(i);
 
-        if (this.outputBuffer.length < j)
-        {
+        if (this.outputBuffer.length < j) {
             this.outputBuffer = new byte[j];
         }
 
