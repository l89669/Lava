--- ../src-base/minecraft/net/minecraft/nbt/NBTTagFloat.java
+++ ../src-work/minecraft/net/minecraft/nbt/NBTTagFloat.java
@@ -1,86 +1,71 @@
 package net.minecraft.nbt;
 
+import net.minecraft.util.math.MathHelper;
+
 import java.io.DataInput;
 import java.io.DataOutput;
 import java.io.IOException;
-import net.minecraft.util.math.MathHelper;
 
-public class NBTTagFloat extends NBTPrimitive
-{
+public class NBTTagFloat extends NBTPrimitive {
     private float data;
 
-    NBTTagFloat()
-    {
+    NBTTagFloat() {
     }
 
-    public NBTTagFloat(float data)
-    {
+    public NBTTagFloat(float data) {
         this.data = data;
     }
 
-    void write(DataOutput output) throws IOException
-    {
+    public void write(DataOutput output) throws IOException {
         output.writeFloat(this.data);
     }
 
-    void read(DataInput input, int depth, NBTSizeTracker sizeTracker) throws IOException
-    {
+    void read(DataInput input, int depth, NBTSizeTracker sizeTracker) throws IOException {
         sizeTracker.read(96L);
         this.data = input.readFloat();
     }
 
-    public byte getId()
-    {
+    public byte getId() {
         return 5;
     }
 
-    public String toString()
-    {
+    public String toString() {
         return this.data + "f";
     }
 
-    public NBTTagFloat copy()
-    {
+    public NBTTagFloat copy() {
         return new NBTTagFloat(this.data);
     }
 
-    public boolean equals(Object p_equals_1_)
-    {
-        return super.equals(p_equals_1_) && this.data == ((NBTTagFloat)p_equals_1_).data;
+    public boolean equals(Object p_equals_1_) {
+        return super.equals(p_equals_1_) && this.data == ((NBTTagFloat) p_equals_1_).data;
     }
 
-    public int hashCode()
-    {
+    public int hashCode() {
         return super.hashCode() ^ Float.floatToIntBits(this.data);
     }
 
-    public long getLong()
-    {
-        return (long)this.data;
+    public long getLong() {
+        return (long) this.data;
     }
 
-    public int getInt()
-    {
+    public int getInt() {
         return MathHelper.floor(this.data);
     }
 
-    public short getShort()
-    {
-        return (short)(MathHelper.floor(this.data) & 65535);
+    public short getShort() {
+        return (short) (MathHelper.floor(this.data) & 65535);
     }
 
-    public byte getByte()
-    {
-        return (byte)(MathHelper.floor(this.data) & 255);
+    public byte getByte() {
+        return (byte) (MathHelper.floor(this.data) & 255);
     }
 
-    public double getDouble()
-    {
-        return (double)this.data;
+    public double getDouble() {
+        return (double) this.data;
     }
 
-    public float getFloat()
-    {
+    public float getFloat() {
         return this.data;
     }
 }
