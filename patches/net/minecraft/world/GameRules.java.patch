--- ../src-base/minecraft/net/minecraft/world/GameRules.java
+++ ../src-work/minecraft/net/minecraft/world/GameRules.java
@@ -1,15 +1,14 @@
 package net.minecraft.world;
 
+import net.minecraft.nbt.NBTTagCompound;
+
 import java.util.Set;
 import java.util.TreeMap;
-import net.minecraft.nbt.NBTTagCompound;
 
-public class GameRules
-{
+public class GameRules {
     private final TreeMap<String, GameRules.Value> rules = new TreeMap<String, GameRules.Value>();
 
-    public GameRules()
-    {
+    public GameRules() {
         this.addGameRule("doFireTick", "true", GameRules.ValueType.BOOLEAN_VALUE);
         this.addGameRule("mobGriefing", "true", GameRules.ValueType.BOOLEAN_VALUE);
         this.addGameRule("keepInventory", "false", GameRules.ValueType.BOOLEAN_VALUE);
@@ -36,49 +35,39 @@
         this.addGameRule("gameLoopFunction", "-", GameRules.ValueType.FUNCTION);
     }
 
-    public void addGameRule(String key, String value, GameRules.ValueType type)
-    {
+    public void addGameRule(String key, String value, GameRules.ValueType type) {
         this.rules.put(key, new GameRules.Value(value, type));
     }
 
-    public void setOrCreateGameRule(String key, String ruleValue)
-    {
+    public void setOrCreateGameRule(String key, String ruleValue) {
         GameRules.Value gamerules$value = this.rules.get(key);
 
-        if (gamerules$value != null)
-        {
+        if (gamerules$value != null) {
             gamerules$value.setValue(ruleValue);
-        }
-        else
-        {
+        } else {
             this.addGameRule(key, ruleValue, GameRules.ValueType.ANY_VALUE);
         }
     }
 
-    public String getString(String name)
-    {
+    public String getString(String name) {
         GameRules.Value gamerules$value = this.rules.get(name);
         return gamerules$value != null ? gamerules$value.getString() : "";
     }
 
-    public boolean getBoolean(String name)
-    {
+    public boolean getBoolean(String name) {
         GameRules.Value gamerules$value = this.rules.get(name);
         return gamerules$value != null ? gamerules$value.getBoolean() : false;
     }
 
-    public int getInt(String name)
-    {
+    public int getInt(String name) {
         GameRules.Value gamerules$value = this.rules.get(name);
         return gamerules$value != null ? gamerules$value.getInt() : 0;
     }
 
-    public NBTTagCompound writeToNBT()
-    {
+    public NBTTagCompound writeToNBT() {
         NBTTagCompound nbttagcompound = new NBTTagCompound();
 
-        for (String s : this.rules.keySet())
-        {
+        for (String s : this.rules.keySet()) {
             GameRules.Value gamerules$value = this.rules.get(s);
             nbttagcompound.setString(s, gamerules$value.getString());
         }
@@ -86,93 +75,74 @@
         return nbttagcompound;
     }
 
-    public void readFromNBT(NBTTagCompound nbt)
-    {
-        for (String s : nbt.getKeySet())
-        {
+    public void readFromNBT(NBTTagCompound nbt) {
+        for (String s : nbt.getKeySet()) {
             this.setOrCreateGameRule(s, nbt.getString(s));
         }
     }
 
-    public String[] getRules()
-    {
+    public String[] getRules() {
         Set<String> set = this.rules.keySet();
-        return (String[])set.toArray(new String[set.size()]);
+        return (String[]) set.toArray(new String[set.size()]);
     }
 
-    public boolean hasRule(String name)
-    {
+    public boolean hasRule(String name) {
         return this.rules.containsKey(name);
     }
 
-    public boolean areSameType(String key, GameRules.ValueType otherValue)
-    {
+    public boolean areSameType(String key, GameRules.ValueType otherValue) {
         GameRules.Value gamerules$value = this.rules.get(key);
         return gamerules$value != null && (gamerules$value.getType() == otherValue || otherValue == GameRules.ValueType.ANY_VALUE);
     }
 
-    static class Value
-        {
-            private String valueString;
-            private boolean valueBoolean;
-            private int valueInteger;
-            private double valueDouble;
-            private final GameRules.ValueType type;
+    static class Value {
+        private String valueString;
+        private boolean valueBoolean;
+        private int valueInteger;
+        private double valueDouble;
+        private final GameRules.ValueType type;
 
-            public Value(String value, GameRules.ValueType type)
-            {
-                this.type = type;
-                this.setValue(value);
-            }
+        public Value(String value, GameRules.ValueType type) {
+            this.type = type;
+            this.setValue(value);
+        }
 
-            public void setValue(String value)
-            {
-                this.valueString = value;
-                this.valueBoolean = Boolean.parseBoolean(value);
-                this.valueInteger = this.valueBoolean ? 1 : 0;
+        public void setValue(String value) {
+            this.valueString = value;
+            this.valueBoolean = Boolean.parseBoolean(value);
+            this.valueInteger = this.valueBoolean ? 1 : 0;
 
-                try
-                {
-                    this.valueInteger = Integer.parseInt(value);
-                }
-                catch (NumberFormatException var4)
-                {
-                    ;
-                }
-
-                try
-                {
-                    this.valueDouble = Double.parseDouble(value);
-                }
-                catch (NumberFormatException var3)
-                {
-                    ;
-                }
+            try {
+                this.valueInteger = Integer.parseInt(value);
+            } catch (NumberFormatException var4) {
+                ;
             }
 
-            public String getString()
-            {
-                return this.valueString;
+            try {
+                this.valueDouble = Double.parseDouble(value);
+            } catch (NumberFormatException var3) {
+                ;
             }
+        }
 
-            public boolean getBoolean()
-            {
-                return this.valueBoolean;
-            }
+        public String getString() {
+            return this.valueString;
+        }
 
-            public int getInt()
-            {
-                return this.valueInteger;
-            }
+        public boolean getBoolean() {
+            return this.valueBoolean;
+        }
 
-            public GameRules.ValueType getType()
-            {
-                return this.type;
-            }
+        public int getInt() {
+            return this.valueInteger;
         }
 
-    public static enum ValueType
-    {
+        public GameRules.ValueType getType() {
+            return this.type;
+        }
+    }
+
+    public static enum ValueType {
         ANY_VALUE,
         BOOLEAN_VALUE,
         NUMERICAL_VALUE,
