--- ../src-base/minecraft/net/minecraft/world/gen/layer/GenLayerEdge.java
+++ ../src-work/minecraft/net/minecraft/world/gen/layer/GenLayerEdge.java
@@ -1,20 +1,16 @@
 package net.minecraft.world.gen.layer;
 
-public class GenLayerEdge extends GenLayer
-{
+public class GenLayerEdge extends GenLayer {
     private final GenLayerEdge.Mode mode;
 
-    public GenLayerEdge(long p_i45474_1_, GenLayer p_i45474_3_, GenLayerEdge.Mode p_i45474_4_)
-    {
+    public GenLayerEdge(long p_i45474_1_, GenLayer p_i45474_3_, GenLayerEdge.Mode p_i45474_4_) {
         super(p_i45474_1_);
         this.parent = p_i45474_3_;
         this.mode = p_i45474_4_;
     }
 
-    public int[] getInts(int areaX, int areaY, int areaWidth, int areaHeight)
-    {
-        switch (this.mode)
-        {
+    public int[] getInts(int areaX, int areaY, int areaWidth, int areaHeight) {
+        switch (this.mode) {
             case COOL_WARM:
             default:
                 return this.getIntsCoolWarm(areaX, areaY, areaWidth, areaHeight);
@@ -25,8 +21,7 @@
         }
     }
 
-    private int[] getIntsCoolWarm(int p_151626_1_, int p_151626_2_, int p_151626_3_, int p_151626_4_)
-    {
+    private int[] getIntsCoolWarm(int p_151626_1_, int p_151626_2_, int p_151626_3_, int p_151626_4_) {
         int i = p_151626_1_ - 1;
         int j = p_151626_2_ - 1;
         int k = 1 + p_151626_3_ + 1;
@@ -34,15 +29,12 @@
         int[] aint = this.parent.getInts(i, j, k, l);
         int[] aint1 = IntCache.getIntCache(p_151626_3_ * p_151626_4_);
 
-        for (int i1 = 0; i1 < p_151626_4_; ++i1)
-        {
-            for (int j1 = 0; j1 < p_151626_3_; ++j1)
-            {
-                this.initChunkSeed((long)(j1 + p_151626_1_), (long)(i1 + p_151626_2_));
+        for (int i1 = 0; i1 < p_151626_4_; ++i1) {
+            for (int j1 = 0; j1 < p_151626_3_; ++j1) {
+                this.initChunkSeed((long) (j1 + p_151626_1_), (long) (i1 + p_151626_2_));
                 int k1 = aint[j1 + 1 + (i1 + 1) * k];
 
-                if (k1 == 1)
-                {
+                if (k1 == 1) {
                     int l1 = aint[j1 + 1 + (i1 + 1 - 1) * k];
                     int i2 = aint[j1 + 1 + 1 + (i1 + 1) * k];
                     int j2 = aint[j1 + 1 - 1 + (i1 + 1) * k];
@@ -50,8 +42,7 @@
                     boolean flag = l1 == 3 || i2 == 3 || j2 == 3 || k2 == 3;
                     boolean flag1 = l1 == 4 || i2 == 4 || j2 == 4 || k2 == 4;
 
-                    if (flag || flag1)
-                    {
+                    if (flag || flag1) {
                         k1 = 2;
                     }
                 }
@@ -63,8 +54,7 @@
         return aint1;
     }
 
-    private int[] getIntsHeatIce(int p_151624_1_, int p_151624_2_, int p_151624_3_, int p_151624_4_)
-    {
+    private int[] getIntsHeatIce(int p_151624_1_, int p_151624_2_, int p_151624_3_, int p_151624_4_) {
         int i = p_151624_1_ - 1;
         int j = p_151624_2_ - 1;
         int k = 1 + p_151624_3_ + 1;
@@ -72,14 +62,11 @@
         int[] aint = this.parent.getInts(i, j, k, l);
         int[] aint1 = IntCache.getIntCache(p_151624_3_ * p_151624_4_);
 
-        for (int i1 = 0; i1 < p_151624_4_; ++i1)
-        {
-            for (int j1 = 0; j1 < p_151624_3_; ++j1)
-            {
+        for (int i1 = 0; i1 < p_151624_4_; ++i1) {
+            for (int j1 = 0; j1 < p_151624_3_; ++j1) {
                 int k1 = aint[j1 + 1 + (i1 + 1) * k];
 
-                if (k1 == 4)
-                {
+                if (k1 == 4) {
                     int l1 = aint[j1 + 1 + (i1 + 1 - 1) * k];
                     int i2 = aint[j1 + 1 + 1 + (i1 + 1) * k];
                     int j2 = aint[j1 + 1 - 1 + (i1 + 1) * k];
@@ -87,8 +74,7 @@
                     boolean flag = l1 == 2 || i2 == 2 || j2 == 2 || k2 == 2;
                     boolean flag1 = l1 == 1 || i2 == 1 || j2 == 1 || k2 == 1;
 
-                    if (flag1 || flag)
-                    {
+                    if (flag1 || flag) {
                         k1 = 3;
                     }
                 }
@@ -100,20 +86,16 @@
         return aint1;
     }
 
-    private int[] getIntsSpecial(int p_151625_1_, int p_151625_2_, int p_151625_3_, int p_151625_4_)
-    {
+    private int[] getIntsSpecial(int p_151625_1_, int p_151625_2_, int p_151625_3_, int p_151625_4_) {
         int[] aint = this.parent.getInts(p_151625_1_, p_151625_2_, p_151625_3_, p_151625_4_);
         int[] aint1 = IntCache.getIntCache(p_151625_3_ * p_151625_4_);
 
-        for (int i = 0; i < p_151625_4_; ++i)
-        {
-            for (int j = 0; j < p_151625_3_; ++j)
-            {
-                this.initChunkSeed((long)(j + p_151625_1_), (long)(i + p_151625_2_));
+        for (int i = 0; i < p_151625_4_; ++i) {
+            for (int j = 0; j < p_151625_3_; ++j) {
+                this.initChunkSeed((long) (j + p_151625_1_), (long) (i + p_151625_2_));
                 int k = aint[j + i * p_151625_3_];
 
-                if (k != 0 && this.nextInt(13) == 0)
-                {
+                if (k != 0 && this.nextInt(13) == 0) {
                     k |= 1 + this.nextInt(15) << 8 & 3840;
                 }
 
@@ -124,8 +106,7 @@
         return aint1;
     }
 
-    public static enum Mode
-    {
+    public static enum Mode {
         COOL_WARM,
         HEAT_ICE,
         SPECIAL;
