--- ../src-base/minecraft/net/minecraft/world/gen/layer/GenLayer.java
+++ ../src-work/minecraft/net/minecraft/world/gen/layer/GenLayer.java
@@ -5,15 +5,13 @@
 import net.minecraft.world.biome.Biome;
 import net.minecraft.world.gen.ChunkGeneratorSettings;
 
-public abstract class GenLayer
-{
+public abstract class GenLayer {
     private long worldGenSeed;
     protected GenLayer parent;
     private long chunkSeed;
     protected long baseSeed;
 
-    public static GenLayer[] initializeAllBiomeGenerators(long seed, WorldType p_180781_2_, ChunkGeneratorSettings p_180781_3_)
-    {
+    public static GenLayer[] initializeAllBiomeGenerators(long seed, WorldType p_180781_2_, ChunkGeneratorSettings p_180781_3_) {
         GenLayer genlayer = new GenLayerIsland(1L);
         genlayer = new GenLayerFuzzyZoom(2000L, genlayer);
         GenLayer genlayeraddisland = new GenLayerAddIsland(1L, genlayer);
@@ -36,14 +34,12 @@
         int i = 4;
         int j = i;
 
-        if (p_180781_3_ != null)
-        {
+        if (p_180781_3_ != null) {
             i = p_180781_3_.biomeSize;
             j = p_180781_3_.riverSize;
         }
 
-        if (p_180781_2_ == WorldType.LARGE_BIOMES)
-        {
+        if (p_180781_2_ == WorldType.LARGE_BIOMES) {
             i = 6;
         }
 
@@ -60,17 +56,14 @@
         GenLayer genlayersmooth = new GenLayerSmooth(1000L, genlayerriver);
         genlayerhills = new GenLayerRareBiome(1001L, genlayerhills);
 
-        for (int k = 0; k < i; ++k)
-        {
-            genlayerhills = new GenLayerZoom((long)(1000 + k), genlayerhills);
+        for (int k = 0; k < i; ++k) {
+            genlayerhills = new GenLayerZoom((long) (1000 + k), genlayerhills);
 
-            if (k == 0)
-            {
+            if (k == 0) {
                 genlayerhills = new GenLayerAddIsland(3L, genlayerhills);
             }
 
-            if (k == 1 || i == 1)
-            {
+            if (k == 1 || i == 1) {
                 genlayerhills = new GenLayerShore(1000L, genlayerhills);
             }
         }
@@ -80,11 +73,10 @@
         GenLayer genlayer3 = new GenLayerVoronoiZoom(10L, genlayerrivermix);
         genlayerrivermix.initWorldGenSeed(seed);
         genlayer3.initWorldGenSeed(seed);
-        return new GenLayer[] {genlayerrivermix, genlayer3, genlayerrivermix};
+        return new GenLayer[]{genlayerrivermix, genlayer3, genlayerrivermix};
     }
 
-    public GenLayer(long p_i2125_1_)
-    {
+    public GenLayer(long p_i2125_1_) {
         this.baseSeed = p_i2125_1_;
         this.baseSeed *= this.baseSeed * 6364136223846793005L + 1442695040888963407L;
         this.baseSeed += p_i2125_1_;
@@ -94,12 +86,10 @@
         this.baseSeed += p_i2125_1_;
     }
 
-    public void initWorldGenSeed(long seed)
-    {
+    public void initWorldGenSeed(long seed) {
         this.worldGenSeed = seed;
 
-        if (this.parent != null)
-        {
+        if (this.parent != null) {
             this.parent.initWorldGenSeed(seed);
         }
 
@@ -111,8 +101,7 @@
         this.worldGenSeed += this.baseSeed;
     }
 
-    public void initChunkSeed(long p_75903_1_, long p_75903_3_)
-    {
+    public void initChunkSeed(long p_75903_1_, long p_75903_3_) {
         this.chunkSeed = this.worldGenSeed;
         this.chunkSeed *= this.chunkSeed * 6364136223846793005L + 1442695040888963407L;
         this.chunkSeed += p_75903_1_;
@@ -124,12 +113,10 @@
         this.chunkSeed += p_75903_3_;
     }
 
-    protected int nextInt(int p_75902_1_)
-    {
-        int i = (int)((this.chunkSeed >> 24) % (long)p_75902_1_);
+    protected int nextInt(int p_75902_1_) {
+        int i = (int) ((this.chunkSeed >> 24) % (long) p_75902_1_);
 
-        if (i < 0)
-        {
+        if (i < 0) {
             i += p_75902_1_;
         }
 
@@ -140,47 +127,34 @@
 
     public abstract int[] getInts(int areaX, int areaY, int areaWidth, int areaHeight);
 
-    protected static boolean biomesEqualOrMesaPlateau(int biomeIDA, int biomeIDB)
-    {
-        if (biomeIDA == biomeIDB)
-        {
+    protected static boolean biomesEqualOrMesaPlateau(int biomeIDA, int biomeIDB) {
+        if (biomeIDA == biomeIDB) {
             return true;
-        }
-        else
-        {
+        } else {
             Biome biome = Biome.getBiome(biomeIDA);
             Biome biome1 = Biome.getBiome(biomeIDB);
 
-            if (biome != null && biome1 != null)
-            {
-                if (biome != Biomes.MESA_ROCK && biome != Biomes.MESA_CLEAR_ROCK)
-                {
+            if (biome != null && biome1 != null) {
+                if (biome != Biomes.MESA_ROCK && biome != Biomes.MESA_CLEAR_ROCK) {
                     return biome == biome1 || biome.getBiomeClass() == biome1.getBiomeClass();
-                }
-                else
-                {
+                } else {
                     return biome1 == Biomes.MESA_ROCK || biome1 == Biomes.MESA_CLEAR_ROCK;
                 }
-            }
-            else
-            {
+            } else {
                 return false;
             }
         }
     }
 
-    protected static boolean isBiomeOceanic(int p_151618_0_)
-    {
+    protected static boolean isBiomeOceanic(int p_151618_0_) {
         return net.minecraftforge.common.BiomeManager.oceanBiomes.contains(Biome.getBiome(p_151618_0_));
     }
 
     /* ======================================== FORGE START =====================================*/
-    protected long nextLong(long par1)
-    {
+    protected long nextLong(long par1) {
         long j = (this.chunkSeed >> 24) % par1;
 
-        if (j < 0)
-        {
+        if (j < 0) {
             j += par1;
         }
 
@@ -189,59 +163,37 @@
         return j;
     }
 
-    public static int getModdedBiomeSize(WorldType worldType, int original)
-    {
+    public static int getModdedBiomeSize(WorldType worldType, int original) {
         net.minecraftforge.event.terraingen.WorldTypeEvent.BiomeSize event = new net.minecraftforge.event.terraingen.WorldTypeEvent.BiomeSize(worldType, original);
         net.minecraftforge.common.MinecraftForge.TERRAIN_GEN_BUS.post(event);
         return event.getNewSize();
     }
     /* ========================================= FORGE END ======================================*/
 
-    protected int selectRandom(int... p_151619_1_)
-    {
+    protected int selectRandom(int... p_151619_1_) {
         return p_151619_1_[this.nextInt(p_151619_1_.length)];
     }
 
-    protected int selectModeOrRandom(int p_151617_1_, int p_151617_2_, int p_151617_3_, int p_151617_4_)
-    {
-        if (p_151617_2_ == p_151617_3_ && p_151617_3_ == p_151617_4_)
-        {
+    protected int selectModeOrRandom(int p_151617_1_, int p_151617_2_, int p_151617_3_, int p_151617_4_) {
+        if (p_151617_2_ == p_151617_3_ && p_151617_3_ == p_151617_4_) {
             return p_151617_2_;
-        }
-        else if (p_151617_1_ == p_151617_2_ && p_151617_1_ == p_151617_3_)
-        {
+        } else if (p_151617_1_ == p_151617_2_ && p_151617_1_ == p_151617_3_) {
             return p_151617_1_;
-        }
-        else if (p_151617_1_ == p_151617_2_ && p_151617_1_ == p_151617_4_)
-        {
+        } else if (p_151617_1_ == p_151617_2_ && p_151617_1_ == p_151617_4_) {
             return p_151617_1_;
-        }
-        else if (p_151617_1_ == p_151617_3_ && p_151617_1_ == p_151617_4_)
-        {
+        } else if (p_151617_1_ == p_151617_3_ && p_151617_1_ == p_151617_4_) {
             return p_151617_1_;
-        }
-        else if (p_151617_1_ == p_151617_2_ && p_151617_3_ != p_151617_4_)
-        {
+        } else if (p_151617_1_ == p_151617_2_ && p_151617_3_ != p_151617_4_) {
             return p_151617_1_;
-        }
-        else if (p_151617_1_ == p_151617_3_ && p_151617_2_ != p_151617_4_)
-        {
+        } else if (p_151617_1_ == p_151617_3_ && p_151617_2_ != p_151617_4_) {
             return p_151617_1_;
-        }
-        else if (p_151617_1_ == p_151617_4_ && p_151617_2_ != p_151617_3_)
-        {
+        } else if (p_151617_1_ == p_151617_4_ && p_151617_2_ != p_151617_3_) {
             return p_151617_1_;
-        }
-        else if (p_151617_2_ == p_151617_3_ && p_151617_1_ != p_151617_4_)
-        {
+        } else if (p_151617_2_ == p_151617_3_ && p_151617_1_ != p_151617_4_) {
             return p_151617_2_;
-        }
-        else if (p_151617_2_ == p_151617_4_ && p_151617_1_ != p_151617_3_)
-        {
+        } else if (p_151617_2_ == p_151617_4_ && p_151617_1_ != p_151617_3_) {
             return p_151617_2_;
-        }
-        else
-        {
+        } else {
             return p_151617_3_ == p_151617_4_ && p_151617_1_ != p_151617_2_ ? p_151617_3_ : this.selectRandom(p_151617_1_, p_151617_2_, p_151617_3_, p_151617_4_);
         }
     }
