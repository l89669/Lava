--- ../src-base/minecraft/net/minecraft/world/gen/feature/WorldGenAbstractTree.java
+++ ../src-work/minecraft/net/minecraft/world/gen/feature/WorldGenAbstractTree.java
@@ -1,39 +1,33 @@
 package net.minecraft.world.gen.feature;
 
-import java.util.Random;
 import net.minecraft.block.Block;
 import net.minecraft.block.material.Material;
 import net.minecraft.init.Blocks;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.world.World;
 
-public abstract class WorldGenAbstractTree extends WorldGenerator
-{
-    public WorldGenAbstractTree(boolean notify)
-    {
+import java.util.Random;
+
+public abstract class WorldGenAbstractTree extends WorldGenerator {
+    public WorldGenAbstractTree(boolean notify) {
         super(notify);
     }
 
-    protected boolean canGrowInto(Block blockType)
-    {
+    protected boolean canGrowInto(Block blockType) {
         Material material = blockType.getDefaultState().getMaterial();
         return material == Material.AIR || material == Material.LEAVES || blockType == Blocks.GRASS || blockType == Blocks.DIRT || blockType == Blocks.LOG || blockType == Blocks.LOG2 || blockType == Blocks.SAPLING || blockType == Blocks.VINE;
     }
 
-    public void generateSaplings(World worldIn, Random random, BlockPos pos)
-    {
+    public void generateSaplings(World worldIn, Random random, BlockPos pos) {
     }
 
-    protected void setDirtAt(World worldIn, BlockPos pos)
-    {
-        if (worldIn.getBlockState(pos).getBlock() != Blocks.DIRT)
-        {
+    protected void setDirtAt(World worldIn, BlockPos pos) {
+        if (worldIn.getBlockState(pos).getBlock() != Blocks.DIRT) {
             this.setBlockAndNotifyAdequately(worldIn, pos, Blocks.DIRT.getDefaultState());
         }
     }
 
-    public boolean isReplaceable(World world, BlockPos pos)
-    {
+    public boolean isReplaceable(World world, BlockPos pos) {
         net.minecraft.block.state.IBlockState state = world.getBlockState(pos);
         return state.getBlock().isAir(state, world, pos) || state.getBlock().isLeaves(state, world, pos) || state.getBlock().isWood(world, pos) || canGrowInto(state.getBlock());
     }
