--- ../src-base/minecraft/net/minecraft/world/chunk/storage/ExtendedBlockStorage.java
+++ ../src-work/minecraft/net/minecraft/world/chunk/storage/ExtendedBlockStorage.java
@@ -6,8 +6,7 @@
 import net.minecraft.world.chunk.BlockStateContainer;
 import net.minecraft.world.chunk.NibbleArray;
 
-public class ExtendedBlockStorage
-{
+public class ExtendedBlockStorage {
     private final int yBase;
     private int blockRefCount;
     private int tickRefCount;
@@ -15,47 +14,55 @@
     private NibbleArray blockLight;
     private NibbleArray skyLight;
 
-    public ExtendedBlockStorage(int y, boolean storeSkylight)
-    {
+    public ExtendedBlockStorage(int y, boolean storeSkylight) {
         this.yBase = y;
         this.data = new BlockStateContainer();
         this.blockLight = new NibbleArray();
 
-        if (storeSkylight)
-        {
+        if (storeSkylight) {
             this.skyLight = new NibbleArray();
         }
     }
 
-    public IBlockState get(int x, int y, int z)
-    {
+    public ExtendedBlockStorage(int y, boolean flag, char[] blockIds) {
+        this.yBase = y;
+        this.data = new BlockStateContainer();
+        for (int i = 0; i < blockIds.length; i++) {
+            int xx = i & 15;
+            int yy = (i >> 8) & 15;
+            int zz = (i >> 4) & 15;
+            this.data.set(xx, yy, zz, Block.BLOCK_STATE_IDS.getByValue(blockIds[i]));
+        }
+        this.blockLight = new NibbleArray();
+        if (flag) {
+            this.skyLight = new NibbleArray();
+        }
+        recalculateRefCounts();
+    }
+
+    public IBlockState get(int x, int y, int z) {
         return this.data.get(x, y, z);
     }
 
-    public void set(int x, int y, int z, IBlockState state)
-    {
+    public void set(int x, int y, int z, IBlockState state) {
         if (state instanceof net.minecraftforge.common.property.IExtendedBlockState)
             state = ((net.minecraftforge.common.property.IExtendedBlockState) state).getClean();
         IBlockState iblockstate = this.get(x, y, z);
         Block block = iblockstate.getBlock();
         Block block1 = state.getBlock();
 
-        if (block != Blocks.AIR)
-        {
+        if (block != Blocks.AIR) {
             --this.blockRefCount;
 
-            if (block.getTickRandomly())
-            {
+            if (block.getTickRandomly()) {
                 --this.tickRefCount;
             }
         }
 
-        if (block1 != Blocks.AIR)
-        {
+        if (block1 != Blocks.AIR) {
             ++this.blockRefCount;
 
-            if (block1.getTickRandomly())
-            {
+            if (block1.getTickRandomly()) {
                 ++this.tickRefCount;
             }
         }
@@ -63,60 +70,48 @@
         this.data.set(x, y, z, state);
     }
 
-    public boolean isEmpty()
-    {
-        return this.blockRefCount == 0;
+    public boolean isEmpty() {
+        // return this.blockRefCount == 0;
+        return false; // CraftBukkit - MC-80966
     }
 
-    public boolean needsRandomTick()
-    {
+    public boolean needsRandomTick() {
         return this.tickRefCount > 0;
     }
 
-    public int getYLocation()
-    {
+    public int getYLocation() {
         return this.yBase;
     }
 
-    public void setSkyLight(int x, int y, int z, int value)
-    {
+    public void setSkyLight(int x, int y, int z, int value) {
         this.skyLight.set(x, y, z, value);
     }
 
-    public int getSkyLight(int x, int y, int z)
-    {
+    public int getSkyLight(int x, int y, int z) {
         return this.skyLight.get(x, y, z);
     }
 
-    public void setBlockLight(int x, int y, int z, int value)
-    {
+    public void setBlockLight(int x, int y, int z, int value) {
         this.blockLight.set(x, y, z, value);
     }
 
-    public int getBlockLight(int x, int y, int z)
-    {
+    public int getBlockLight(int x, int y, int z) {
         return this.blockLight.get(x, y, z);
     }
 
-    public void recalculateRefCounts()
-    {
+    public void recalculateRefCounts() {
         this.blockRefCount = 0;
         this.tickRefCount = 0;
 
-        for (int i = 0; i < 16; ++i)
-        {
-            for (int j = 0; j < 16; ++j)
-            {
-                for (int k = 0; k < 16; ++k)
-                {
+        for (int i = 0; i < 16; ++i) {
+            for (int j = 0; j < 16; ++j) {
+                for (int k = 0; k < 16; ++k) {
                     Block block = this.get(i, j, k).getBlock();
 
-                    if (block != Blocks.AIR)
-                    {
+                    if (block != Blocks.AIR) {
                         ++this.blockRefCount;
 
-                        if (block.getTickRandomly())
-                        {
+                        if (block.getTickRandomly()) {
                             ++this.tickRefCount;
                         }
                     }
@@ -125,28 +120,23 @@
         }
     }
 
-    public BlockStateContainer getData()
-    {
+    public BlockStateContainer getData() {
         return this.data;
     }
 
-    public NibbleArray getBlockLight()
-    {
+    public NibbleArray getBlockLight() {
         return this.blockLight;
     }
 
-    public NibbleArray getSkyLight()
-    {
+    public NibbleArray getSkyLight() {
         return this.skyLight;
     }
 
-    public void setBlockLight(NibbleArray newBlocklightArray)
-    {
+    public void setBlockLight(NibbleArray newBlocklightArray) {
         this.blockLight = newBlocklightArray;
     }
 
-    public void setSkyLight(NibbleArray newSkylightArray)
-    {
+    public void setSkyLight(NibbleArray newSkylightArray) {
         this.skyLight = newSkylightArray;
     }
 }
