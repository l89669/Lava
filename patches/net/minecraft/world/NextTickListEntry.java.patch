--- ../src-base/minecraft/net/minecraft/world/NextTickListEntry.java
+++ ../src-work/minecraft/net/minecraft/world/NextTickListEntry.java
@@ -3,8 +3,7 @@
 import net.minecraft.block.Block;
 import net.minecraft.util.math.BlockPos;
 
-public class NextTickListEntry implements Comparable<NextTickListEntry>
-{
+public class NextTickListEntry implements Comparable<NextTickListEntry> {
     private static long nextTickEntryID;
     private final Block block;
     public final BlockPos position;
@@ -12,73 +11,53 @@
     public int priority;
     private final long tickEntryID;
 
-    public NextTickListEntry(BlockPos positionIn, Block blockIn)
-    {
-        this.tickEntryID = (long)(nextTickEntryID++);
+    public NextTickListEntry(BlockPos positionIn, Block blockIn) {
+        this.tickEntryID = (long) (nextTickEntryID++);
         this.position = positionIn.toImmutable();
         this.block = blockIn;
     }
 
-    public boolean equals(Object p_equals_1_)
-    {
-        if (!(p_equals_1_ instanceof NextTickListEntry))
-        {
+    public boolean equals(Object p_equals_1_) {
+        if (!(p_equals_1_ instanceof NextTickListEntry)) {
             return false;
-        }
-        else
-        {
-            NextTickListEntry nextticklistentry = (NextTickListEntry)p_equals_1_;
+        } else {
+            NextTickListEntry nextticklistentry = (NextTickListEntry) p_equals_1_;
             return this.position.equals(nextticklistentry.position) && Block.isEqualTo(this.block, nextticklistentry.block);
         }
     }
 
-    public int hashCode()
-    {
+    public int hashCode() {
         return this.position.hashCode();
     }
 
-    public NextTickListEntry setScheduledTime(long scheduledTimeIn)
-    {
+    public NextTickListEntry setScheduledTime(long scheduledTimeIn) {
         this.scheduledTime = scheduledTimeIn;
         return this;
     }
 
-    public void setPriority(int priorityIn)
-    {
+    public void setPriority(int priorityIn) {
         this.priority = priorityIn;
     }
 
-    public int compareTo(NextTickListEntry p_compareTo_1_)
-    {
-        if (this.scheduledTime < p_compareTo_1_.scheduledTime)
-        {
+    public int compareTo(NextTickListEntry p_compareTo_1_) {
+        if (this.scheduledTime < p_compareTo_1_.scheduledTime) {
             return -1;
-        }
-        else if (this.scheduledTime > p_compareTo_1_.scheduledTime)
-        {
+        } else if (this.scheduledTime > p_compareTo_1_.scheduledTime) {
             return 1;
-        }
-        else if (this.priority != p_compareTo_1_.priority)
-        {
+        } else if (this.priority != p_compareTo_1_.priority) {
             return this.priority - p_compareTo_1_.priority;
-        }
-        else if (this.tickEntryID < p_compareTo_1_.tickEntryID)
-        {
+        } else if (this.tickEntryID < p_compareTo_1_.tickEntryID) {
             return -1;
-        }
-        else
-        {
+        } else {
             return this.tickEntryID > p_compareTo_1_.tickEntryID ? 1 : 0;
         }
     }
 
-    public String toString()
-    {
+    public String toString() {
         return Block.getIdFromBlock(this.block) + ": " + this.position + ", " + this.scheduledTime + ", " + this.priority + ", " + this.tickEntryID;
     }
 
-    public Block getBlock()
-    {
+    public Block getBlock() {
         return this.block;
     }
 }
