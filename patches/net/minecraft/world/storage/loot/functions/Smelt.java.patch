--- ../src-base/minecraft/net/minecraft/world/storage/loot/functions/Smelt.java
+++ ../src-work/minecraft/net/minecraft/world/storage/loot/functions/Smelt.java
@@ -3,7 +3,6 @@
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonSerializationContext;
-import java.util.Random;
 import net.minecraft.item.ItemStack;
 import net.minecraft.item.crafting.FurnaceRecipes;
 import net.minecraft.util.ResourceLocation;
@@ -12,32 +11,25 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public class Smelt extends LootFunction
-{
+import java.util.Random;
+
+public class Smelt extends LootFunction {
     private static final Logger LOGGER = LogManager.getLogger();
 
-    public Smelt(LootCondition[] conditionsIn)
-    {
+    public Smelt(LootCondition[] conditionsIn) {
         super(conditionsIn);
     }
 
-    public ItemStack apply(ItemStack stack, Random rand, LootContext context)
-    {
-        if (stack.isEmpty())
-        {
+    public ItemStack apply(ItemStack stack, Random rand, LootContext context) {
+        if (stack.isEmpty()) {
             return stack;
-        }
-        else
-        {
+        } else {
             ItemStack itemstack = FurnaceRecipes.instance().getSmeltingResult(stack);
 
-            if (itemstack.isEmpty())
-            {
-                LOGGER.warn("Couldn't smelt {} because there is no smelting recipe", (Object)stack);
+            if (itemstack.isEmpty()) {
+                LOGGER.warn("Couldn't smelt {} because there is no smelting recipe", (Object) stack);
                 return stack;
-            }
-            else
-            {
+            } else {
                 ItemStack itemstack1 = itemstack.copy();
                 itemstack1.setCount(stack.getCount());
                 return itemstack1;
@@ -45,20 +37,16 @@
         }
     }
 
-    public static class Serializer extends LootFunction.Serializer<Smelt>
-        {
-            protected Serializer()
-            {
-                super(new ResourceLocation("furnace_smelt"), Smelt.class);
-            }
+    public static class Serializer extends LootFunction.Serializer<Smelt> {
+        protected Serializer() {
+            super(new ResourceLocation("furnace_smelt"), Smelt.class);
+        }
 
-            public void serialize(JsonObject object, Smelt functionClazz, JsonSerializationContext serializationContext)
-            {
-            }
+        public void serialize(JsonObject object, Smelt functionClazz, JsonSerializationContext serializationContext) {
+        }
 
-            public Smelt deserialize(JsonObject object, JsonDeserializationContext deserializationContext, LootCondition[] conditionsIn)
-            {
-                return new Smelt(conditionsIn);
-            }
+        public Smelt deserialize(JsonObject object, JsonDeserializationContext deserializationContext, LootCondition[] conditionsIn) {
+            return new Smelt(conditionsIn);
         }
+    }
 }
