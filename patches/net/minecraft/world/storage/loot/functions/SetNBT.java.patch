--- ../src-base/minecraft/net/minecraft/world/storage/loot/functions/SetNBT.java
+++ ../src-work/minecraft/net/minecraft/world/storage/loot/functions/SetNBT.java
@@ -4,7 +4,6 @@
 import com.google.gson.JsonObject;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSyntaxException;
-import java.util.Random;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.JsonToNBT;
 import net.minecraft.nbt.NBTException;
@@ -14,26 +13,22 @@
 import net.minecraft.world.storage.loot.LootContext;
 import net.minecraft.world.storage.loot.conditions.LootCondition;
 
-public class SetNBT extends LootFunction
-{
+import java.util.Random;
+
+public class SetNBT extends LootFunction {
     private final NBTTagCompound tag;
 
-    public SetNBT(LootCondition[] conditionsIn, NBTTagCompound tagIn)
-    {
+    public SetNBT(LootCondition[] conditionsIn, NBTTagCompound tagIn) {
         super(conditionsIn);
         this.tag = tagIn;
     }
 
-    public ItemStack apply(ItemStack stack, Random rand, LootContext context)
-    {
+    public ItemStack apply(ItemStack stack, Random rand, LootContext context) {
         NBTTagCompound nbttagcompound = stack.getTagCompound();
 
-        if (nbttagcompound == null)
-        {
+        if (nbttagcompound == null) {
             nbttagcompound = this.tag.copy();
-        }
-        else
-        {
+        } else {
             nbttagcompound.merge(this.tag);
         }
 
@@ -41,29 +36,22 @@
         return stack;
     }
 
-    public static class Serializer extends LootFunction.Serializer<SetNBT>
-        {
-            public Serializer()
-            {
-                super(new ResourceLocation("set_nbt"), SetNBT.class);
-            }
+    public static class Serializer extends LootFunction.Serializer<SetNBT> {
+        public Serializer() {
+            super(new ResourceLocation("set_nbt"), SetNBT.class);
+        }
 
-            public void serialize(JsonObject object, SetNBT functionClazz, JsonSerializationContext serializationContext)
-            {
-                object.addProperty("tag", functionClazz.tag.toString());
-            }
+        public void serialize(JsonObject object, SetNBT functionClazz, JsonSerializationContext serializationContext) {
+            object.addProperty("tag", functionClazz.tag.toString());
+        }
 
-            public SetNBT deserialize(JsonObject object, JsonDeserializationContext deserializationContext, LootCondition[] conditionsIn)
-            {
-                try
-                {
-                    NBTTagCompound nbttagcompound = JsonToNBT.getTagFromJson(JsonUtils.getString(object, "tag"));
-                    return new SetNBT(conditionsIn, nbttagcompound);
-                }
-                catch (NBTException nbtexception)
-                {
-                    throw new JsonSyntaxException(nbtexception);
-                }
+        public SetNBT deserialize(JsonObject object, JsonDeserializationContext deserializationContext, LootCondition[] conditionsIn) {
+            try {
+                NBTTagCompound nbttagcompound = JsonToNBT.getTagFromJson(JsonUtils.getString(object, "tag"));
+                return new SetNBT(conditionsIn, nbttagcompound);
+            } catch (NBTException nbtexception) {
+                throw new JsonSyntaxException(nbtexception);
             }
         }
+    }
 }
