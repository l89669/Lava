--- ../src-base/minecraft/net/minecraft/world/storage/SaveHandlerMP.java
+++ ../src-work/minecraft/net/minecraft/world/storage/SaveHandlerMP.java
@@ -1,6 +1,5 @@
 package net.minecraft.world.storage;
 
-import java.io.File;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.world.MinecraftException;
 import net.minecraft.world.WorldProvider;
@@ -9,52 +8,49 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import java.io.File;
+import java.util.UUID;
+
 @SideOnly(Side.CLIENT)
-public class SaveHandlerMP implements ISaveHandler
-{
-    public WorldInfo loadWorldInfo()
-    {
+public class SaveHandlerMP implements ISaveHandler {
+    public WorldInfo loadWorldInfo() {
         return null;
     }
 
-    public void checkSessionLock() throws MinecraftException
-    {
+    public void checkSessionLock() throws MinecraftException {
     }
 
-    public IChunkLoader getChunkLoader(WorldProvider provider)
-    {
+    public IChunkLoader getChunkLoader(WorldProvider provider) {
         return null;
     }
 
-    public void saveWorldInfoWithPlayer(WorldInfo worldInformation, NBTTagCompound tagCompound)
-    {
+    public void saveWorldInfoWithPlayer(WorldInfo worldInformation, NBTTagCompound tagCompound) {
     }
 
-    public void saveWorldInfo(WorldInfo worldInformation)
-    {
+    public void saveWorldInfo(WorldInfo worldInformation) {
     }
 
-    public IPlayerFileData getPlayerNBTManager()
-    {
+    public IPlayerFileData getPlayerNBTManager() {
         return null;
     }
 
-    public void flush()
-    {
+    public void flush() {
     }
 
-    public File getMapFileFromName(String mapName)
-    {
+    public File getMapFileFromName(String mapName) {
         return null;
     }
 
-    public File getWorldDirectory()
-    {
+    public File getWorldDirectory() {
         return null;
     }
 
-    public TemplateManager getStructureTemplateManager()
-    {
+    public TemplateManager getStructureTemplateManager() {
         return null;
     }
+
+    @Override
+    public UUID getUUID() {
+        return null;
+    }
 }
