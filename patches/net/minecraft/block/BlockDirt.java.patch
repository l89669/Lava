--- ../src-base/minecraft/net/minecraft/block/BlockDirt.java
+++ ../src-work/minecraft/net/minecraft/block/BlockDirt.java
@@ -16,27 +16,22 @@
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
 
-public class BlockDirt extends Block
-{
+public class BlockDirt extends Block {
     public static final PropertyEnum<BlockDirt.DirtType> VARIANT = PropertyEnum.<BlockDirt.DirtType>create("variant", BlockDirt.DirtType.class);
     public static final PropertyBool SNOWY = PropertyBool.create("snowy");
 
-    protected BlockDirt()
-    {
+    protected BlockDirt() {
         super(Material.GROUND);
         this.setDefaultState(this.blockState.getBaseState().withProperty(VARIANT, BlockDirt.DirtType.DIRT).withProperty(SNOWY, Boolean.valueOf(false)));
         this.setCreativeTab(CreativeTabs.BUILDING_BLOCKS);
     }
 
-    public MapColor getMapColor(IBlockState state, IBlockAccess worldIn, BlockPos pos)
-    {
-        return ((BlockDirt.DirtType)state.getValue(VARIANT)).getColor();
+    public MapColor getMapColor(IBlockState state, IBlockAccess worldIn, BlockPos pos) {
+        return ((BlockDirt.DirtType) state.getValue(VARIANT)).getColor();
     }
 
-    public IBlockState getActualState(IBlockState state, IBlockAccess worldIn, BlockPos pos)
-    {
-        if (state.getValue(VARIANT) == BlockDirt.DirtType.PODZOL)
-        {
+    public IBlockState getActualState(IBlockState state, IBlockAccess worldIn, BlockPos pos) {
+        if (state.getValue(VARIANT) == BlockDirt.DirtType.PODZOL) {
             Block block = worldIn.getBlockState(pos.up()).getBlock();
             state = state.withProperty(SNOWY, Boolean.valueOf(block == Blocks.SNOW || block == Blocks.SNOW_LAYER));
         }
@@ -44,47 +39,39 @@
         return state;
     }
 
-    public void getSubBlocks(CreativeTabs itemIn, NonNullList<ItemStack> items)
-    {
+    public void getSubBlocks(CreativeTabs itemIn, NonNullList<ItemStack> items) {
         items.add(new ItemStack(this, 1, BlockDirt.DirtType.DIRT.getMetadata()));
         items.add(new ItemStack(this, 1, BlockDirt.DirtType.COARSE_DIRT.getMetadata()));
         items.add(new ItemStack(this, 1, BlockDirt.DirtType.PODZOL.getMetadata()));
     }
 
-    public ItemStack getItem(World worldIn, BlockPos pos, IBlockState state)
-    {
-        return new ItemStack(this, 1, ((BlockDirt.DirtType)state.getValue(VARIANT)).getMetadata());
+    public ItemStack getItem(World worldIn, BlockPos pos, IBlockState state) {
+        return new ItemStack(this, 1, ((BlockDirt.DirtType) state.getValue(VARIANT)).getMetadata());
     }
 
-    public IBlockState getStateFromMeta(int meta)
-    {
+    public IBlockState getStateFromMeta(int meta) {
         return this.getDefaultState().withProperty(VARIANT, BlockDirt.DirtType.byMetadata(meta));
     }
 
-    public int getMetaFromState(IBlockState state)
-    {
-        return ((BlockDirt.DirtType)state.getValue(VARIANT)).getMetadata();
+    public int getMetaFromState(IBlockState state) {
+        return ((BlockDirt.DirtType) state.getValue(VARIANT)).getMetadata();
     }
 
-    protected BlockStateContainer createBlockState()
-    {
-        return new BlockStateContainer(this, new IProperty[] {VARIANT, SNOWY});
+    protected BlockStateContainer createBlockState() {
+        return new BlockStateContainer(this, new IProperty[]{VARIANT, SNOWY});
     }
 
-    public int damageDropped(IBlockState state)
-    {
-        BlockDirt.DirtType blockdirt$dirttype = (BlockDirt.DirtType)state.getValue(VARIANT);
+    public int damageDropped(IBlockState state) {
+        BlockDirt.DirtType blockdirt$dirttype = (BlockDirt.DirtType) state.getValue(VARIANT);
 
-        if (blockdirt$dirttype == BlockDirt.DirtType.PODZOL)
-        {
+        if (blockdirt$dirttype == BlockDirt.DirtType.PODZOL) {
             blockdirt$dirttype = BlockDirt.DirtType.DIRT;
         }
 
         return blockdirt$dirttype.getMetadata();
     }
 
-    public static enum DirtType implements IStringSerializable
-    {
+    public static enum DirtType implements IStringSerializable {
         DIRT(0, "dirt", "default", MapColor.DIRT),
         COARSE_DIRT(1, "coarse_dirt", "coarse", MapColor.DIRT),
         PODZOL(2, "podzol", MapColor.OBSIDIAN);
@@ -95,58 +82,47 @@
         private final String unlocalizedName;
         private final MapColor color;
 
-        private DirtType(int metadataIn, String nameIn, MapColor color)
-        {
+        private DirtType(int metadataIn, String nameIn, MapColor color) {
             this(metadataIn, nameIn, nameIn, color);
         }
 
-        private DirtType(int metadataIn, String nameIn, String unlocalizedNameIn, MapColor color)
-        {
+        private DirtType(int metadataIn, String nameIn, String unlocalizedNameIn, MapColor color) {
             this.metadata = metadataIn;
             this.name = nameIn;
             this.unlocalizedName = unlocalizedNameIn;
             this.color = color;
         }
 
-        public int getMetadata()
-        {
+        public int getMetadata() {
             return this.metadata;
         }
 
-        public String getUnlocalizedName()
-        {
+        public String getUnlocalizedName() {
             return this.unlocalizedName;
         }
 
-        public MapColor getColor()
-        {
+        public MapColor getColor() {
             return this.color;
         }
 
-        public String toString()
-        {
+        public String toString() {
             return this.name;
         }
 
-        public static BlockDirt.DirtType byMetadata(int metadata)
-        {
-            if (metadata < 0 || metadata >= METADATA_LOOKUP.length)
-            {
+        public static BlockDirt.DirtType byMetadata(int metadata) {
+            if (metadata < 0 || metadata >= METADATA_LOOKUP.length) {
                 metadata = 0;
             }
 
             return METADATA_LOOKUP[metadata];
         }
 
-        public String getName()
-        {
+        public String getName() {
             return this.name;
         }
 
-        static
-        {
-            for (BlockDirt.DirtType blockdirt$dirttype : values())
-            {
+        static {
+            for (BlockDirt.DirtType blockdirt$dirttype : values()) {
                 METADATA_LOOKUP[blockdirt$dirttype.getMetadata()] = blockdirt$dirttype;
             }
         }
