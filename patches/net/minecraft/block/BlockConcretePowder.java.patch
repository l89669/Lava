--- ../src-base/minecraft/net/minecraft/block/BlockConcretePowder.java
+++ ../src-work/minecraft/net/minecraft/block/BlockConcretePowder.java
@@ -16,97 +16,77 @@
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
 
-public class BlockConcretePowder extends BlockFalling
-{
+public class BlockConcretePowder extends BlockFalling {
     public static final PropertyEnum<EnumDyeColor> COLOR = PropertyEnum.<EnumDyeColor>create("color", EnumDyeColor.class);
 
-    public BlockConcretePowder()
-    {
+    public BlockConcretePowder() {
         super(Material.SAND);
         this.setDefaultState(this.blockState.getBaseState().withProperty(COLOR, EnumDyeColor.WHITE));
         this.setCreativeTab(CreativeTabs.BUILDING_BLOCKS);
     }
 
-    public void onEndFalling(World worldIn, BlockPos pos, IBlockState p_176502_3_, IBlockState p_176502_4_)
-    {
-        if (p_176502_4_.getMaterial().isLiquid())
-        {
-            worldIn.setBlockState(pos, Blocks.CONCRETE.getDefaultState().withProperty(BlockColored.COLOR, p_176502_3_.getValue(COLOR)), 3);
+    public void onEndFalling(World worldIn, BlockPos pos, IBlockState p_176502_3_, IBlockState p_176502_4_) {
+        if (p_176502_4_.getMaterial().isLiquid() && worldIn.getBlockState(pos).getBlock() != Blocks.CONCRETE) { // CraftBukkit - don't double concrete
+            org.bukkit.craftbukkit.event.CraftEventFactory.handleBlockFormEvent(worldIn, pos, Blocks.CONCRETE.getDefaultState().withProperty(BlockColored.COLOR, p_176502_3_.getValue(BlockConcretePowder.COLOR)), null); // CraftBukkit
         }
     }
 
-    protected boolean tryTouchWater(World worldIn, BlockPos pos, IBlockState state)
-    {
+    protected boolean tryTouchWater(World worldIn, BlockPos pos, IBlockState state) {
         boolean flag = false;
 
-        for (EnumFacing enumfacing : EnumFacing.values())
-        {
-            if (enumfacing != EnumFacing.DOWN)
-            {
+        for (EnumFacing enumfacing : EnumFacing.values()) {
+            if (enumfacing != EnumFacing.DOWN) {
                 BlockPos blockpos = pos.offset(enumfacing);
 
-                if (worldIn.getBlockState(blockpos).getMaterial() == Material.WATER)
-                {
+                if (worldIn.getBlockState(blockpos).getMaterial() == Material.WATER) {
                     flag = true;
                     break;
                 }
             }
         }
 
-        if (flag)
-        {
-            worldIn.setBlockState(pos, Blocks.CONCRETE.getDefaultState().withProperty(BlockColored.COLOR, state.getValue(COLOR)), 3);
+        if (flag) {
+            org.bukkit.craftbukkit.event.CraftEventFactory.handleBlockFormEvent(worldIn, pos, Blocks.CONCRETE.getDefaultState().withProperty(BlockColored.COLOR, state.getValue(BlockConcretePowder.COLOR)), null);
         }
 
         return flag;
     }
 
-    public void neighborChanged(IBlockState state, World worldIn, BlockPos pos, Block blockIn, BlockPos fromPos)
-    {
-        if (!this.tryTouchWater(worldIn, pos, state))
-        {
+    public void neighborChanged(IBlockState state, World worldIn, BlockPos pos, Block blockIn, BlockPos fromPos) {
+        if (!this.tryTouchWater(worldIn, pos, state)) {
             super.neighborChanged(state, worldIn, pos, blockIn, fromPos);
         }
     }
 
-    public void onBlockAdded(World worldIn, BlockPos pos, IBlockState state)
-    {
-        if (!this.tryTouchWater(worldIn, pos, state))
-        {
+    public void onBlockAdded(World worldIn, BlockPos pos, IBlockState state) {
+        if (!this.tryTouchWater(worldIn, pos, state)) {
             super.onBlockAdded(worldIn, pos, state);
         }
     }
 
-    public int damageDropped(IBlockState state)
-    {
-        return ((EnumDyeColor)state.getValue(COLOR)).getMetadata();
+    public int damageDropped(IBlockState state) {
+        return ((EnumDyeColor) state.getValue(COLOR)).getMetadata();
     }
 
-    public void getSubBlocks(CreativeTabs itemIn, NonNullList<ItemStack> items)
-    {
-        for (EnumDyeColor enumdyecolor : EnumDyeColor.values())
-        {
+    public void getSubBlocks(CreativeTabs itemIn, NonNullList<ItemStack> items) {
+        for (EnumDyeColor enumdyecolor : EnumDyeColor.values()) {
             items.add(new ItemStack(this, 1, enumdyecolor.getMetadata()));
         }
     }
 
-    public MapColor getMapColor(IBlockState state, IBlockAccess worldIn, BlockPos pos)
-    {
-        return MapColor.getBlockColor((EnumDyeColor)state.getValue(COLOR));
+    public MapColor getMapColor(IBlockState state, IBlockAccess worldIn, BlockPos pos) {
+        return MapColor.getBlockColor((EnumDyeColor) state.getValue(COLOR));
     }
 
-    public IBlockState getStateFromMeta(int meta)
-    {
+    public IBlockState getStateFromMeta(int meta) {
         return this.getDefaultState().withProperty(COLOR, EnumDyeColor.byMetadata(meta));
     }
 
-    public int getMetaFromState(IBlockState state)
-    {
-        return ((EnumDyeColor)state.getValue(COLOR)).getMetadata();
+    public int getMetaFromState(IBlockState state) {
+        return ((EnumDyeColor) state.getValue(COLOR)).getMetadata();
     }
 
-    protected BlockStateContainer createBlockState()
-    {
-        return new BlockStateContainer(this, new IProperty[] {COLOR});
+    protected BlockStateContainer createBlockState() {
+        return new BlockStateContainer(this, new IProperty[]{COLOR});
     }
 }
