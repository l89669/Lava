--- ../src-base/minecraft/net/minecraft/block/BlockSilverfish.java
+++ ../src-work/minecraft/net/minecraft/block/BlockSilverfish.java
@@ -1,6 +1,5 @@
 package net.minecraft.block;
 
-import java.util.Random;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyEnum;
@@ -14,34 +13,31 @@
 import net.minecraft.util.NonNullList;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.world.World;
+import org.bukkit.event.entity.CreatureSpawnEvent;
 
-public class BlockSilverfish extends Block
-{
+import java.util.Random;
+
+public class BlockSilverfish extends Block {
     public static final PropertyEnum<BlockSilverfish.EnumType> VARIANT = PropertyEnum.<BlockSilverfish.EnumType>create("variant", BlockSilverfish.EnumType.class);
 
-    public BlockSilverfish()
-    {
+    public BlockSilverfish() {
         super(Material.CLAY);
         this.setDefaultState(this.blockState.getBaseState().withProperty(VARIANT, BlockSilverfish.EnumType.STONE));
         this.setHardness(0.0F);
         this.setCreativeTab(CreativeTabs.DECORATIONS);
     }
 
-    public int quantityDropped(Random random)
-    {
+    public int quantityDropped(Random random) {
         return 0;
     }
 
-    public static boolean canContainSilverfish(IBlockState blockState)
-    {
+    public static boolean canContainSilverfish(IBlockState blockState) {
         Block block = blockState.getBlock();
         return blockState == Blocks.STONE.getDefaultState().withProperty(BlockStone.VARIANT, BlockStone.EnumType.STONE) || block == Blocks.COBBLESTONE || block == Blocks.STONEBRICK;
     }
 
-    protected ItemStack getSilkTouchDrop(IBlockState state)
-    {
-        switch ((BlockSilverfish.EnumType)state.getValue(VARIANT))
-        {
+    protected ItemStack getSilkTouchDrop(IBlockState state) {
+        switch ((BlockSilverfish.EnumType) state.getValue(VARIANT)) {
             case COBBLESTONE:
                 return new ItemStack(Blocks.COBBLESTONE);
             case STONEBRICK:
@@ -57,86 +53,65 @@
         }
     }
 
-    public void dropBlockAsItemWithChance(World worldIn, BlockPos pos, IBlockState state, float chance, int fortune)
-    {
-        if (!worldIn.isRemote && worldIn.getGameRules().getBoolean("doTileDrops"))
-        {
+    public void dropBlockAsItemWithChance(World worldIn, BlockPos pos, IBlockState state, float chance, int fortune) {
+        if (!worldIn.isRemote && worldIn.getGameRules().getBoolean("doTileDrops")) {
             EntitySilverfish entitysilverfish = new EntitySilverfish(worldIn);
-            entitysilverfish.setLocationAndAngles((double)pos.getX() + 0.5D, (double)pos.getY(), (double)pos.getZ() + 0.5D, 0.0F, 0.0F);
-            worldIn.spawnEntity(entitysilverfish);
+            entitysilverfish.setLocationAndAngles((double) pos.getX() + 0.5D, (double) pos.getY(), (double) pos.getZ() + 0.5D, 0.0F, 0.0F);
+            worldIn.spawnEntity(entitysilverfish, CreatureSpawnEvent.SpawnReason.SILVERFISH_BLOCK); // CraftBukkit - add SpawnReason
             entitysilverfish.spawnExplosionParticle();
         }
     }
 
-    public ItemStack getItem(World worldIn, BlockPos pos, IBlockState state)
-    {
+    public ItemStack getItem(World worldIn, BlockPos pos, IBlockState state) {
         return new ItemStack(this, 1, state.getBlock().getMetaFromState(state));
     }
 
-    public void getSubBlocks(CreativeTabs itemIn, NonNullList<ItemStack> items)
-    {
-        for (BlockSilverfish.EnumType blocksilverfish$enumtype : BlockSilverfish.EnumType.values())
-        {
+    public void getSubBlocks(CreativeTabs itemIn, NonNullList<ItemStack> items) {
+        for (BlockSilverfish.EnumType blocksilverfish$enumtype : BlockSilverfish.EnumType.values()) {
             items.add(new ItemStack(this, 1, blocksilverfish$enumtype.getMetadata()));
         }
     }
 
-    public IBlockState getStateFromMeta(int meta)
-    {
+    public IBlockState getStateFromMeta(int meta) {
         return this.getDefaultState().withProperty(VARIANT, BlockSilverfish.EnumType.byMetadata(meta));
     }
 
-    public int getMetaFromState(IBlockState state)
-    {
-        return ((BlockSilverfish.EnumType)state.getValue(VARIANT)).getMetadata();
+    public int getMetaFromState(IBlockState state) {
+        return ((BlockSilverfish.EnumType) state.getValue(VARIANT)).getMetadata();
     }
 
-    protected BlockStateContainer createBlockState()
-    {
-        return new BlockStateContainer(this, new IProperty[] {VARIANT});
+    protected BlockStateContainer createBlockState() {
+        return new BlockStateContainer(this, new IProperty[]{VARIANT});
     }
 
-    public static enum EnumType implements IStringSerializable
-    {
-        STONE(0, "stone")
-        {
-            public IBlockState getModelBlock()
-            {
+    public static enum EnumType implements IStringSerializable {
+        STONE(0, "stone") {
+            public IBlockState getModelBlock() {
                 return Blocks.STONE.getDefaultState().withProperty(BlockStone.VARIANT, BlockStone.EnumType.STONE);
             }
         },
-        COBBLESTONE(1, "cobblestone", "cobble")
-        {
-            public IBlockState getModelBlock()
-            {
+        COBBLESTONE(1, "cobblestone", "cobble") {
+            public IBlockState getModelBlock() {
                 return Blocks.COBBLESTONE.getDefaultState();
             }
         },
-        STONEBRICK(2, "stone_brick", "brick")
-        {
-            public IBlockState getModelBlock()
-            {
+        STONEBRICK(2, "stone_brick", "brick") {
+            public IBlockState getModelBlock() {
                 return Blocks.STONEBRICK.getDefaultState().withProperty(BlockStoneBrick.VARIANT, BlockStoneBrick.EnumType.DEFAULT);
             }
         },
-        MOSSY_STONEBRICK(3, "mossy_brick", "mossybrick")
-        {
-            public IBlockState getModelBlock()
-            {
+        MOSSY_STONEBRICK(3, "mossy_brick", "mossybrick") {
+            public IBlockState getModelBlock() {
                 return Blocks.STONEBRICK.getDefaultState().withProperty(BlockStoneBrick.VARIANT, BlockStoneBrick.EnumType.MOSSY);
             }
         },
-        CRACKED_STONEBRICK(4, "cracked_brick", "crackedbrick")
-        {
-            public IBlockState getModelBlock()
-            {
+        CRACKED_STONEBRICK(4, "cracked_brick", "crackedbrick") {
+            public IBlockState getModelBlock() {
                 return Blocks.STONEBRICK.getDefaultState().withProperty(BlockStoneBrick.VARIANT, BlockStoneBrick.EnumType.CRACKED);
             }
         },
-        CHISELED_STONEBRICK(5, "chiseled_brick", "chiseledbrick")
-        {
-            public IBlockState getModelBlock()
-            {
+        CHISELED_STONEBRICK(5, "chiseled_brick", "chiseledbrick") {
+            public IBlockState getModelBlock() {
                 return Blocks.STONEBRICK.getDefaultState().withProperty(BlockStoneBrick.VARIANT, BlockStoneBrick.EnumType.CHISELED);
             }
         };
@@ -146,56 +121,45 @@
         private final String name;
         private final String unlocalizedName;
 
-        private EnumType(int meta, String name)
-        {
+        private EnumType(int meta, String name) {
             this(meta, name, name);
         }
 
-        private EnumType(int meta, String name, String unlocalizedName)
-        {
+        private EnumType(int meta, String name, String unlocalizedName) {
             this.meta = meta;
             this.name = name;
             this.unlocalizedName = unlocalizedName;
         }
 
-        public int getMetadata()
-        {
+        public int getMetadata() {
             return this.meta;
         }
 
-        public String toString()
-        {
+        public String toString() {
             return this.name;
         }
 
-        public static BlockSilverfish.EnumType byMetadata(int meta)
-        {
-            if (meta < 0 || meta >= META_LOOKUP.length)
-            {
+        public static BlockSilverfish.EnumType byMetadata(int meta) {
+            if (meta < 0 || meta >= META_LOOKUP.length) {
                 meta = 0;
             }
 
             return META_LOOKUP[meta];
         }
 
-        public String getName()
-        {
+        public String getName() {
             return this.name;
         }
 
-        public String getUnlocalizedName()
-        {
+        public String getUnlocalizedName() {
             return this.unlocalizedName;
         }
 
         public abstract IBlockState getModelBlock();
 
-        public static BlockSilverfish.EnumType forModelBlock(IBlockState model)
-        {
-            for (BlockSilverfish.EnumType blocksilverfish$enumtype : values())
-            {
-                if (model == blocksilverfish$enumtype.getModelBlock())
-                {
+        public static BlockSilverfish.EnumType forModelBlock(IBlockState model) {
+            for (BlockSilverfish.EnumType blocksilverfish$enumtype : values()) {
+                if (model == blocksilverfish$enumtype.getModelBlock()) {
                     return blocksilverfish$enumtype;
                 }
             }
@@ -203,10 +167,8 @@
             return STONE;
         }
 
-        static
-        {
-            for (BlockSilverfish.EnumType blocksilverfish$enumtype : values())
-            {
+        static {
+            for (BlockSilverfish.EnumType blocksilverfish$enumtype : values()) {
                 META_LOOKUP[blocksilverfish$enumtype.getMetadata()] = blocksilverfish$enumtype;
             }
         }
