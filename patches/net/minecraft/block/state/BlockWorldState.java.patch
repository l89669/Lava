--- ../src-base/minecraft/net/minecraft/block/state/BlockWorldState.java
+++ ../src-work/minecraft/net/minecraft/block/state/BlockWorldState.java
@@ -1,13 +1,13 @@
 package net.minecraft.block.state;
 
 import com.google.common.base.Predicate;
-import javax.annotation.Nullable;
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.world.World;
 
-public class BlockWorldState
-{
+import javax.annotation.Nullable;
+
+public class BlockWorldState {
     private final World world;
     private final BlockPos pos;
     private final boolean forceLoad;
@@ -15,17 +15,14 @@
     private TileEntity tileEntity;
     private boolean tileEntityInitialized;
 
-    public BlockWorldState(World worldIn, BlockPos posIn, boolean forceLoadIn)
-    {
+    public BlockWorldState(World worldIn, BlockPos posIn, boolean forceLoadIn) {
         this.world = worldIn;
         this.pos = posIn;
         this.forceLoad = forceLoadIn;
     }
 
-    public IBlockState getBlockState()
-    {
-        if (this.state == null && (this.forceLoad || this.world.isBlockLoaded(this.pos)))
-        {
+    public IBlockState getBlockState() {
+        if (this.state == null && (this.forceLoad || this.world.isBlockLoaded(this.pos))) {
             this.state = this.world.getBlockState(this.pos);
         }
 
@@ -33,10 +30,8 @@
     }
 
     @Nullable
-    public TileEntity getTileEntity()
-    {
-        if (this.tileEntity == null && !this.tileEntityInitialized)
-        {
+    public TileEntity getTileEntity() {
+        if (this.tileEntity == null && !this.tileEntityInitialized) {
             this.tileEntity = this.world.getTileEntity(this.pos);
             this.tileEntityInitialized = true;
         }
@@ -44,17 +39,13 @@
         return this.tileEntity;
     }
 
-    public BlockPos getPos()
-    {
+    public BlockPos getPos() {
         return this.pos;
     }
 
-    public static Predicate<BlockWorldState> hasState(final Predicate<IBlockState> predicatesIn)
-    {
-        return new Predicate<BlockWorldState>()
-        {
-            public boolean apply(@Nullable BlockWorldState p_apply_1_)
-            {
+    public static Predicate<BlockWorldState> hasState(final Predicate<IBlockState> predicatesIn) {
+        return new Predicate<BlockWorldState>() {
+            public boolean apply(@Nullable BlockWorldState p_apply_1_) {
                 return p_apply_1_ != null && predicatesIn.apply(p_apply_1_.getBlockState());
             }
         };
