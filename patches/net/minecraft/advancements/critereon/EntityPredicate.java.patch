--- ../src-base/minecraft/net/minecraft/advancements/critereon/EntityPredicate.java
+++ ../src-work/minecraft/net/minecraft/advancements/critereon/EntityPredicate.java
@@ -3,24 +3,23 @@
 import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonSyntaxException;
-import javax.annotation.Nullable;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityList;
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.util.JsonUtils;
 import net.minecraft.util.ResourceLocation;
 
-public class EntityPredicate
-{
-    public static final EntityPredicate ANY = new EntityPredicate((ResourceLocation)null, DistancePredicate.ANY, LocationPredicate.ANY, MobEffectsPredicate.ANY, NBTPredicate.ANY);
+import javax.annotation.Nullable;
+
+public class EntityPredicate {
+    public static final EntityPredicate ANY = new EntityPredicate((ResourceLocation) null, DistancePredicate.ANY, LocationPredicate.ANY, MobEffectsPredicate.ANY, NBTPredicate.ANY);
     private final ResourceLocation type;
     private final DistancePredicate distance;
     private final LocationPredicate location;
     private final MobEffectsPredicate effects;
     private final NBTPredicate nbt;
 
-    public EntityPredicate(@Nullable ResourceLocation type, DistancePredicate distance, LocationPredicate location, MobEffectsPredicate effects, NBTPredicate nbt)
-    {
+    public EntityPredicate(@Nullable ResourceLocation type, DistancePredicate distance, LocationPredicate location, MobEffectsPredicate effects, NBTPredicate nbt) {
         this.type = type;
         this.distance = distance;
         this.location = location;
@@ -28,51 +27,33 @@
         this.nbt = nbt;
     }
 
-    public boolean test(EntityPlayerMP player, @Nullable Entity entity)
-    {
-        if (this == ANY)
-        {
+    public boolean test(EntityPlayerMP player, @Nullable Entity entity) {
+        if (this == ANY) {
             return true;
-        }
-        else if (entity == null)
-        {
+        } else if (entity == null) {
             return false;
-        }
-        else if (this.type != null && !EntityList.isMatchingName(entity, this.type))
-        {
+        } else if (this.type != null && !EntityList.isMatchingName(entity, this.type)) {
             return false;
-        }
-        else if (!this.distance.test(player.posX, player.posY, player.posZ, entity.posX, entity.posY, entity.posZ))
-        {
+        } else if (!this.distance.test(player.posX, player.posY, player.posZ, entity.posX, entity.posY, entity.posZ)) {
             return false;
-        }
-        else if (!this.location.test(player.getServerWorld(), entity.posX, entity.posY, entity.posZ))
-        {
+        } else if (!this.location.test(player.getServerWorld(), entity.posX, entity.posY, entity.posZ)) {
             return false;
-        }
-        else if (!this.effects.test(entity))
-        {
+        } else if (!this.effects.test(entity)) {
             return false;
-        }
-        else
-        {
+        } else {
             return this.nbt.test(entity);
         }
     }
 
-    public static EntityPredicate deserialize(@Nullable JsonElement element)
-    {
-        if (element != null && !element.isJsonNull())
-        {
+    public static EntityPredicate deserialize(@Nullable JsonElement element) {
+        if (element != null && !element.isJsonNull()) {
             JsonObject jsonobject = JsonUtils.getJsonObject(element, "entity");
             ResourceLocation resourcelocation = null;
 
-            if (jsonobject.has("type"))
-            {
+            if (jsonobject.has("type")) {
                 resourcelocation = new ResourceLocation(JsonUtils.getString(jsonobject, "type"));
 
-                if (!EntityList.isRegistered(resourcelocation))
-                {
+                if (!EntityList.isRegistered(resourcelocation)) {
                     throw new JsonSyntaxException("Unknown entity type '" + resourcelocation + "', valid types are: " + EntityList.getValidTypeNames());
                 }
             }
@@ -82,9 +63,7 @@
             MobEffectsPredicate mobeffectspredicate = MobEffectsPredicate.deserialize(jsonobject.get("effects"));
             NBTPredicate nbtpredicate = NBTPredicate.deserialize(jsonobject.get("nbt"));
             return new EntityPredicate(resourcelocation, distancepredicate, locationpredicate, mobeffectspredicate, nbtpredicate);
-        }
-        else
-        {
+        } else {
             return ANY;
         }
     }
