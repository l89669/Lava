--- ../src-base/minecraft/net/minecraft/item/ItemDoor.java
+++ ../src-work/minecraft/net/minecraft/item/ItemDoor.java
@@ -13,37 +13,29 @@
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.world.World;
 
-public class ItemDoor extends Item
-{
+public class ItemDoor extends Item {
     private final Block block;
 
-    public ItemDoor(Block block)
-    {
+    public ItemDoor(Block block) {
         this.block = block;
         this.setCreativeTab(CreativeTabs.REDSTONE);
     }
 
-    public EnumActionResult onItemUse(EntityPlayer player, World worldIn, BlockPos pos, EnumHand hand, EnumFacing facing, float hitX, float hitY, float hitZ)
-    {
-        if (facing != EnumFacing.UP)
-        {
+    public EnumActionResult onItemUse(EntityPlayer player, World worldIn, BlockPos pos, EnumHand hand, EnumFacing facing, float hitX, float hitY, float hitZ) {
+        if (facing != EnumFacing.UP) {
             return EnumActionResult.FAIL;
-        }
-        else
-        {
+        } else {
             IBlockState iblockstate = worldIn.getBlockState(pos);
             Block block = iblockstate.getBlock();
 
-            if (!block.isReplaceable(worldIn, pos))
-            {
+            if (!block.isReplaceable(worldIn, pos)) {
                 pos = pos.offset(facing);
             }
 
             ItemStack itemstack = player.getHeldItem(hand);
 
-            if (player.canPlayerEdit(pos, facing, itemstack) && this.block.canPlaceBlockAt(worldIn, pos))
-            {
-                EnumFacing enumfacing = EnumFacing.fromAngle((double)player.rotationYaw);
+            if (player.canPlayerEdit(pos, facing, itemstack) && this.block.canPlaceBlockAt(worldIn, pos)) {
+                EnumFacing enumfacing = EnumFacing.fromAngle((double) player.rotationYaw);
                 int i = enumfacing.getFrontOffsetX();
                 int j = enumfacing.getFrontOffsetZ();
                 boolean flag = i < 0 && hitZ < 0.5F || i > 0 && hitZ > 0.5F || j < 0 && hitX > 0.5F || j > 0 && hitX < 0.5F;
@@ -52,16 +44,13 @@
                 worldIn.playSound(player, pos, soundtype.getPlaceSound(), SoundCategory.BLOCKS, (soundtype.getVolume() + 1.0F) / 2.0F, soundtype.getPitch() * 0.8F);
                 itemstack.shrink(1);
                 return EnumActionResult.SUCCESS;
-            }
-            else
-            {
+            } else {
                 return EnumActionResult.FAIL;
             }
         }
     }
 
-    public static void placeDoor(World worldIn, BlockPos pos, EnumFacing facing, Block door, boolean isRightHinge)
-    {
+    public static void placeDoor(World worldIn, BlockPos pos, EnumFacing facing, Block door, boolean isRightHinge) {
         BlockPos blockpos = pos.offset(facing.rotateY());
         BlockPos blockpos1 = pos.offset(facing.rotateYCCW());
         int i = (worldIn.getBlockState(blockpos1).isNormalCube() ? 1 : 0) + (worldIn.getBlockState(blockpos1.up()).isNormalCube() ? 1 : 0);
@@ -69,15 +58,11 @@
         boolean flag = worldIn.getBlockState(blockpos1).getBlock() == door || worldIn.getBlockState(blockpos1.up()).getBlock() == door;
         boolean flag1 = worldIn.getBlockState(blockpos).getBlock() == door || worldIn.getBlockState(blockpos.up()).getBlock() == door;
 
-        if ((!flag || flag1) && j <= i)
-        {
-            if (flag1 && !flag || j < i)
-            {
+        if ((!flag || flag1) && j <= i) {
+            if (flag1 && !flag || j < i) {
                 isRightHinge = false;
             }
-        }
-        else
-        {
+        } else {
             isRightHinge = true;
         }
 
