--- ../src-base/minecraft/net/minecraft/item/ItemSign.java
+++ ../src-work/minecraft/net/minecraft/item/ItemSign.java
@@ -17,67 +17,50 @@
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.world.World;
 
-public class ItemSign extends Item
-{
-    public ItemSign()
-    {
+public class ItemSign extends Item {
+    public ItemSign() {
         this.maxStackSize = 16;
         this.setCreativeTab(CreativeTabs.DECORATIONS);
     }
 
-    public EnumActionResult onItemUse(EntityPlayer player, World worldIn, BlockPos pos, EnumHand hand, EnumFacing facing, float hitX, float hitY, float hitZ)
-    {
+    public EnumActionResult onItemUse(EntityPlayer player, World worldIn, BlockPos pos, EnumHand hand, EnumFacing facing, float hitX, float hitY, float hitZ) {
         IBlockState iblockstate = worldIn.getBlockState(pos);
         boolean flag = iblockstate.getBlock().isReplaceable(worldIn, pos);
 
-        if (facing != EnumFacing.DOWN && (iblockstate.getMaterial().isSolid() || flag) && (!flag || facing == EnumFacing.UP))
-        {
+        if (facing != EnumFacing.DOWN && (iblockstate.getMaterial().isSolid() || flag) && (!flag || facing == EnumFacing.UP)) {
             pos = pos.offset(facing);
             ItemStack itemstack = player.getHeldItem(hand);
 
-            if (player.canPlayerEdit(pos, facing, itemstack) && Blocks.STANDING_SIGN.canPlaceBlockAt(worldIn, pos))
-            {
-                if (worldIn.isRemote)
-                {
+            if (player.canPlayerEdit(pos, facing, itemstack) && Blocks.STANDING_SIGN.canPlaceBlockAt(worldIn, pos)) {
+                if (worldIn.isRemote) {
                     return EnumActionResult.SUCCESS;
-                }
-                else
-                {
+                } else {
                     pos = flag ? pos.down() : pos;
 
-                    if (facing == EnumFacing.UP)
-                    {
-                        int i = MathHelper.floor((double)((player.rotationYaw + 180.0F) * 16.0F / 360.0F) + 0.5D) & 15;
+                    if (facing == EnumFacing.UP) {
+                        int i = MathHelper.floor((double) ((player.rotationYaw + 180.0F) * 16.0F / 360.0F) + 0.5D) & 15;
                         worldIn.setBlockState(pos, Blocks.STANDING_SIGN.getDefaultState().withProperty(BlockStandingSign.ROTATION, Integer.valueOf(i)), 11);
-                    }
-                    else
-                    {
+                    } else {
                         worldIn.setBlockState(pos, Blocks.WALL_SIGN.getDefaultState().withProperty(BlockWallSign.FACING, facing), 11);
                     }
 
                     TileEntity tileentity = worldIn.getTileEntity(pos);
 
-                    if (tileentity instanceof TileEntitySign && !ItemBlock.setTileEntityNBT(worldIn, player, pos, itemstack))
-                    {
-                        player.openEditSign((TileEntitySign)tileentity);
+                    if (tileentity instanceof TileEntitySign && !ItemBlock.setTileEntityNBT(worldIn, player, pos, itemstack)) {
+                        player.openEditSign((TileEntitySign) tileentity);
                     }
 
-                    if (player instanceof EntityPlayerMP)
-                    {
-                        CriteriaTriggers.PLACED_BLOCK.trigger((EntityPlayerMP)player, pos, itemstack);
+                    if (player instanceof EntityPlayerMP) {
+                        CriteriaTriggers.PLACED_BLOCK.trigger((EntityPlayerMP) player, pos, itemstack);
                     }
 
                     itemstack.shrink(1);
                     return EnumActionResult.SUCCESS;
                 }
-            }
-            else
-            {
+            } else {
                 return EnumActionResult.FAIL;
             }
-        }
-        else
-        {
+        } else {
             return EnumActionResult.FAIL;
         }
     }
