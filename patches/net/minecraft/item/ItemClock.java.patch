--- ../src-base/minecraft/net/minecraft/item/ItemClock.java
+++ ../src-work/minecraft/net/minecraft/item/ItemClock.java
@@ -1,6 +1,5 @@
 package net.minecraft.item;
 
-import javax.annotation.Nullable;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.util.ResourceLocation;
@@ -9,55 +8,46 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class ItemClock extends Item
-{
-    public ItemClock()
-    {
-        this.addPropertyOverride(new ResourceLocation("time"), new IItemPropertyGetter()
-        {
+import javax.annotation.Nullable;
+
+public class ItemClock extends Item {
+    public ItemClock() {
+        this.addPropertyOverride(new ResourceLocation("time"), new IItemPropertyGetter() {
             @SideOnly(Side.CLIENT)
             double rotation;
             @SideOnly(Side.CLIENT)
             double rota;
             @SideOnly(Side.CLIENT)
             long lastUpdateTick;
+
             @SideOnly(Side.CLIENT)
-            public float apply(ItemStack stack, @Nullable World worldIn, @Nullable EntityLivingBase entityIn)
-            {
+            public float apply(ItemStack stack, @Nullable World worldIn, @Nullable EntityLivingBase entityIn) {
                 boolean flag = entityIn != null;
-                Entity entity = (Entity)(flag ? entityIn : stack.getItemFrame());
+                Entity entity = (Entity) (flag ? entityIn : stack.getItemFrame());
 
-                if (worldIn == null && entity != null)
-                {
+                if (worldIn == null && entity != null) {
                     worldIn = entity.world;
                 }
 
-                if (worldIn == null)
-                {
+                if (worldIn == null) {
                     return 0.0F;
-                }
-                else
-                {
+                } else {
                     double d0;
 
-                    if (worldIn.provider.isSurfaceWorld())
-                    {
-                        d0 = (double)worldIn.getCelestialAngle(1.0F);
-                    }
-                    else
-                    {
+                    if (worldIn.provider.isSurfaceWorld()) {
+                        d0 = (double) worldIn.getCelestialAngle(1.0F);
+                    } else {
                         d0 = Math.random();
                     }
 
                     d0 = this.wobble(worldIn, d0);
-                    return (float)d0;
+                    return (float) d0;
                 }
             }
+
             @SideOnly(Side.CLIENT)
-            private double wobble(World p_185087_1_, double p_185087_2_)
-            {
-                if (p_185087_1_.getTotalWorldTime() != this.lastUpdateTick)
-                {
+            private double wobble(World p_185087_1_, double p_185087_2_) {
+                if (p_185087_1_.getTotalWorldTime() != this.lastUpdateTick) {
                     this.lastUpdateTick = p_185087_1_.getTotalWorldTime();
                     double d0 = p_185087_2_ - this.rotation;
                     d0 = MathHelper.positiveModulo(d0 + 0.5D, 1.0D) - 0.5D;
