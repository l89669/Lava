--- ../src-base/minecraft/net/minecraft/item/ItemEndCrystal.java
+++ ../src-work/minecraft/net/minecraft/item/ItemEndCrystal.java
@@ -1,6 +1,5 @@
 package net.minecraft.item;
 
-import java.util.List;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.creativetab.CreativeTabs;
 import net.minecraft.entity.Entity;
@@ -18,63 +17,48 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class ItemEndCrystal extends Item
-{
-    public ItemEndCrystal()
-    {
+import java.util.List;
+
+public class ItemEndCrystal extends Item {
+    public ItemEndCrystal() {
         this.setUnlocalizedName("end_crystal");
         this.setCreativeTab(CreativeTabs.DECORATIONS);
     }
 
-    public EnumActionResult onItemUse(EntityPlayer player, World worldIn, BlockPos pos, EnumHand hand, EnumFacing facing, float hitX, float hitY, float hitZ)
-    {
+    public EnumActionResult onItemUse(EntityPlayer player, World worldIn, BlockPos pos, EnumHand hand, EnumFacing facing, float hitX, float hitY, float hitZ) {
         IBlockState iblockstate = worldIn.getBlockState(pos);
 
-        if (iblockstate.getBlock() != Blocks.OBSIDIAN && iblockstate.getBlock() != Blocks.BEDROCK)
-        {
+        if (iblockstate.getBlock() != Blocks.OBSIDIAN && iblockstate.getBlock() != Blocks.BEDROCK) {
             return EnumActionResult.FAIL;
-        }
-        else
-        {
+        } else {
             BlockPos blockpos = pos.up();
             ItemStack itemstack = player.getHeldItem(hand);
 
-            if (!player.canPlayerEdit(blockpos, facing, itemstack))
-            {
+            if (!player.canPlayerEdit(blockpos, facing, itemstack)) {
                 return EnumActionResult.FAIL;
-            }
-            else
-            {
+            } else {
                 BlockPos blockpos1 = blockpos.up();
                 boolean flag = !worldIn.isAirBlock(blockpos) && !worldIn.getBlockState(blockpos).getBlock().isReplaceable(worldIn, blockpos);
                 flag = flag | (!worldIn.isAirBlock(blockpos1) && !worldIn.getBlockState(blockpos1).getBlock().isReplaceable(worldIn, blockpos1));
 
-                if (flag)
-                {
+                if (flag) {
                     return EnumActionResult.FAIL;
-                }
-                else
-                {
-                    double d0 = (double)blockpos.getX();
-                    double d1 = (double)blockpos.getY();
-                    double d2 = (double)blockpos.getZ();
-                    List<Entity> list = worldIn.getEntitiesWithinAABBExcludingEntity((Entity)null, new AxisAlignedBB(d0, d1, d2, d0 + 1.0D, d1 + 2.0D, d2 + 1.0D));
+                } else {
+                    double d0 = (double) blockpos.getX();
+                    double d1 = (double) blockpos.getY();
+                    double d2 = (double) blockpos.getZ();
+                    List<Entity> list = worldIn.getEntitiesWithinAABBExcludingEntity((Entity) null, new AxisAlignedBB(d0, d1, d2, d0 + 1.0D, d1 + 2.0D, d2 + 1.0D));
 
-                    if (!list.isEmpty())
-                    {
+                    if (!list.isEmpty()) {
                         return EnumActionResult.FAIL;
-                    }
-                    else
-                    {
-                        if (!worldIn.isRemote)
-                        {
-                            EntityEnderCrystal entityendercrystal = new EntityEnderCrystal(worldIn, (double)((float)pos.getX() + 0.5F), (double)(pos.getY() + 1), (double)((float)pos.getZ() + 0.5F));
+                    } else {
+                        if (!worldIn.isRemote) {
+                            EntityEnderCrystal entityendercrystal = new EntityEnderCrystal(worldIn, (double) ((float) pos.getX() + 0.5F), (double) (pos.getY() + 1), (double) ((float) pos.getZ() + 0.5F));
                             entityendercrystal.setShowBottom(false);
                             worldIn.spawnEntity(entityendercrystal);
 
-                            if (worldIn.provider instanceof WorldProviderEnd)
-                            {
-                                DragonFightManager dragonfightmanager = ((WorldProviderEnd)worldIn.provider).getDragonFightManager();
+                            if (worldIn.provider instanceof WorldProviderEnd) {
+                                DragonFightManager dragonfightmanager = ((WorldProviderEnd) worldIn.provider).getDragonFightManager();
                                 dragonfightmanager.respawnDragon();
                             }
                         }
@@ -88,8 +72,7 @@
     }
 
     @SideOnly(Side.CLIENT)
-    public boolean hasEffect(ItemStack stack)
-    {
+    public boolean hasEffect(ItemStack stack) {
         return true;
     }
 }
