--- ../src-base/minecraft/net/minecraft/item/ItemFirework.java
+++ ../src-work/minecraft/net/minecraft/item/ItemFirework.java
@@ -1,8 +1,6 @@
 package net.minecraft.item;
 
 import com.google.common.collect.Lists;
-import java.util.List;
-import javax.annotation.Nullable;
 import net.minecraft.client.util.ITooltipFlag;
 import net.minecraft.entity.item.EntityFireworkRocket;
 import net.minecraft.entity.player.EntityPlayer;
@@ -18,18 +16,17 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class ItemFirework extends Item
-{
-    public EnumActionResult onItemUse(EntityPlayer player, World worldIn, BlockPos pos, EnumHand hand, EnumFacing facing, float hitX, float hitY, float hitZ)
-    {
-        if (!worldIn.isRemote)
-        {
+import javax.annotation.Nullable;
+import java.util.List;
+
+public class ItemFirework extends Item {
+    public EnumActionResult onItemUse(EntityPlayer player, World worldIn, BlockPos pos, EnumHand hand, EnumFacing facing, float hitX, float hitY, float hitZ) {
+        if (!worldIn.isRemote) {
             ItemStack itemstack = player.getHeldItem(hand);
-            EntityFireworkRocket entityfireworkrocket = new EntityFireworkRocket(worldIn, (double)((float)pos.getX() + hitX), (double)((float)pos.getY() + hitY), (double)((float)pos.getZ() + hitZ), itemstack);
+            EntityFireworkRocket entityfireworkrocket = new EntityFireworkRocket(worldIn, (double) ((float) pos.getX() + hitX), (double) ((float) pos.getY() + hitY), (double) ((float) pos.getZ() + hitZ), itemstack);
             worldIn.spawnEntity(entityfireworkrocket);
 
-            if (!player.capabilities.isCreativeMode)
-            {
+            if (!player.capabilities.isCreativeMode) {
                 itemstack.shrink(1);
             }
         }
@@ -37,58 +34,45 @@
         return EnumActionResult.SUCCESS;
     }
 
-    public ActionResult<ItemStack> onItemRightClick(World worldIn, EntityPlayer playerIn, EnumHand handIn)
-    {
-        if (playerIn.isElytraFlying())
-        {
+    public ActionResult<ItemStack> onItemRightClick(World worldIn, EntityPlayer playerIn, EnumHand handIn) {
+        if (playerIn.isElytraFlying()) {
             ItemStack itemstack = playerIn.getHeldItem(handIn);
 
-            if (!worldIn.isRemote)
-            {
+            if (!worldIn.isRemote) {
                 EntityFireworkRocket entityfireworkrocket = new EntityFireworkRocket(worldIn, itemstack, playerIn);
                 worldIn.spawnEntity(entityfireworkrocket);
 
-                if (!playerIn.capabilities.isCreativeMode)
-                {
+                if (!playerIn.capabilities.isCreativeMode) {
                     itemstack.shrink(1);
                 }
             }
 
             return new ActionResult<ItemStack>(EnumActionResult.SUCCESS, playerIn.getHeldItem(handIn));
-        }
-        else
-        {
+        } else {
             return new ActionResult<ItemStack>(EnumActionResult.PASS, playerIn.getHeldItem(handIn));
         }
     }
 
     @SideOnly(Side.CLIENT)
-    public void addInformation(ItemStack stack, @Nullable World worldIn, List<String> tooltip, ITooltipFlag flagIn)
-    {
+    public void addInformation(ItemStack stack, @Nullable World worldIn, List<String> tooltip, ITooltipFlag flagIn) {
         NBTTagCompound nbttagcompound = stack.getSubCompound("Fireworks");
 
-        if (nbttagcompound != null)
-        {
-            if (nbttagcompound.hasKey("Flight", 99))
-            {
+        if (nbttagcompound != null) {
+            if (nbttagcompound.hasKey("Flight", 99)) {
                 tooltip.add(I18n.translateToLocal("item.fireworks.flight") + " " + nbttagcompound.getByte("Flight"));
             }
 
             NBTTagList nbttaglist = nbttagcompound.getTagList("Explosions", 10);
 
-            if (!nbttaglist.hasNoTags())
-            {
-                for (int i = 0; i < nbttaglist.tagCount(); ++i)
-                {
+            if (!nbttaglist.hasNoTags()) {
+                for (int i = 0; i < nbttaglist.tagCount(); ++i) {
                     NBTTagCompound nbttagcompound1 = nbttaglist.getCompoundTagAt(i);
                     List<String> list = Lists.<String>newArrayList();
                     ItemFireworkCharge.addExplosionInfo(nbttagcompound1, list);
 
-                    if (!list.isEmpty())
-                    {
-                        for (int j = 1; j < list.size(); ++j)
-                        {
-                            list.set(j, "  " + (String)list.get(j));
+                    if (!list.isEmpty()) {
+                        for (int j = 1; j < list.size(); ++j) {
+                            list.set(j, "  " + (String) list.get(j));
                         }
 
                         tooltip.addAll(list);
