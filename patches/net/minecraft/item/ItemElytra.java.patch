--- ../src-base/minecraft/net/minecraft/item/ItemElytra.java
+++ ../src-work/minecraft/net/minecraft/item/ItemElytra.java
@@ -1,6 +1,5 @@
 package net.minecraft.item;
 
-import javax.annotation.Nullable;
 import net.minecraft.block.BlockDispenser;
 import net.minecraft.creativetab.CreativeTabs;
 import net.minecraft.entity.EntityLiving;
@@ -16,48 +15,40 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class ItemElytra extends Item
-{
-    public ItemElytra()
-    {
+import javax.annotation.Nullable;
+
+public class ItemElytra extends Item {
+    public ItemElytra() {
         this.maxStackSize = 1;
         this.setMaxDamage(432);
         this.setCreativeTab(CreativeTabs.TRANSPORTATION);
-        this.addPropertyOverride(new ResourceLocation("broken"), new IItemPropertyGetter()
-        {
+        this.addPropertyOverride(new ResourceLocation("broken"), new IItemPropertyGetter() {
             @SideOnly(Side.CLIENT)
-            public float apply(ItemStack stack, @Nullable World worldIn, @Nullable EntityLivingBase entityIn)
-            {
+            public float apply(ItemStack stack, @Nullable World worldIn, @Nullable EntityLivingBase entityIn) {
                 return ItemElytra.isUsable(stack) ? 0.0F : 1.0F;
             }
         });
         BlockDispenser.DISPENSE_BEHAVIOR_REGISTRY.putObject(this, ItemArmor.DISPENSER_BEHAVIOR);
     }
 
-    public static boolean isUsable(ItemStack stack)
-    {
+    public static boolean isUsable(ItemStack stack) {
         return stack.getItemDamage() < stack.getMaxDamage() - 1;
     }
 
-    public boolean getIsRepairable(ItemStack toRepair, ItemStack repair)
-    {
+    public boolean getIsRepairable(ItemStack toRepair, ItemStack repair) {
         return repair.getItem() == Items.LEATHER;
     }
 
-    public ActionResult<ItemStack> onItemRightClick(World worldIn, EntityPlayer playerIn, EnumHand handIn)
-    {
+    public ActionResult<ItemStack> onItemRightClick(World worldIn, EntityPlayer playerIn, EnumHand handIn) {
         ItemStack itemstack = playerIn.getHeldItem(handIn);
         EntityEquipmentSlot entityequipmentslot = EntityLiving.getSlotForItemStack(itemstack);
         ItemStack itemstack1 = playerIn.getItemStackFromSlot(entityequipmentslot);
 
-        if (itemstack1.isEmpty())
-        {
+        if (itemstack1.isEmpty()) {
             playerIn.setItemStackToSlot(entityequipmentslot, itemstack.copy());
             itemstack.setCount(0);
             return new ActionResult<ItemStack>(EnumActionResult.SUCCESS, itemstack);
-        }
-        else
-        {
+        } else {
             return new ActionResult<ItemStack>(EnumActionResult.FAIL, itemstack);
         }
     }
