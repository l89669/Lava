--- ../src-base/minecraft/net/minecraft/pathfinding/PathNavigateClimber.java
+++ ../src-work/minecraft/net/minecraft/pathfinding/PathNavigateClimber.java
@@ -6,61 +6,45 @@
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.world.World;
 
-public class PathNavigateClimber extends PathNavigateGround
-{
+public class PathNavigateClimber extends PathNavigateGround {
     private BlockPos targetPosition;
 
-    public PathNavigateClimber(EntityLiving entityLivingIn, World worldIn)
-    {
+    public PathNavigateClimber(EntityLiving entityLivingIn, World worldIn) {
         super(entityLivingIn, worldIn);
     }
 
-    public Path getPathToPos(BlockPos pos)
-    {
+    public Path getPathToPos(BlockPos pos) {
         this.targetPosition = pos;
         return super.getPathToPos(pos);
     }
 
-    public Path getPathToEntityLiving(Entity entityIn)
-    {
+    public Path getPathToEntityLiving(Entity entityIn) {
         this.targetPosition = new BlockPos(entityIn);
         return super.getPathToEntityLiving(entityIn);
     }
 
-    public boolean tryMoveToEntityLiving(Entity entityIn, double speedIn)
-    {
+    public boolean tryMoveToEntityLiving(Entity entityIn, double speedIn) {
         Path path = this.getPathToEntityLiving(entityIn);
 
-        if (path != null)
-        {
+        if (path != null) {
             return this.setPath(path, speedIn);
-        }
-        else
-        {
+        } else {
             this.targetPosition = new BlockPos(entityIn);
             this.speed = speedIn;
             return true;
         }
     }
 
-    public void onUpdateNavigation()
-    {
-        if (!this.noPath())
-        {
+    public void onUpdateNavigation() {
+        if (!this.noPath()) {
             super.onUpdateNavigation();
-        }
-        else
-        {
-            if (this.targetPosition != null)
-            {
-                double d0 = (double)(this.entity.width * this.entity.width);
+        } else {
+            if (this.targetPosition != null) {
+                double d0 = (double) (this.entity.width * this.entity.width);
 
-                if (this.entity.getDistanceSqToCenter(this.targetPosition) >= d0 && (this.entity.posY <= (double)this.targetPosition.getY() || this.entity.getDistanceSqToCenter(new BlockPos(this.targetPosition.getX(), MathHelper.floor(this.entity.posY), this.targetPosition.getZ())) >= d0))
-                {
-                    this.entity.getMoveHelper().setMoveTo((double)this.targetPosition.getX(), (double)this.targetPosition.getY(), (double)this.targetPosition.getZ(), this.speed);
-                }
-                else
-                {
+                if (this.entity.getDistanceSqToCenter(this.targetPosition) >= d0 && (this.entity.posY <= (double) this.targetPosition.getY() || this.entity.getDistanceSqToCenter(new BlockPos(this.targetPosition.getX(), MathHelper.floor(this.entity.posY), this.targetPosition.getZ())) >= d0)) {
+                    this.entity.getMoveHelper().setMoveTo((double) this.targetPosition.getX(), (double) this.targetPosition.getY(), (double) this.targetPosition.getZ(), this.speed);
+                } else {
                     this.targetPosition = null;
                 }
             }
