--- ../src-base/minecraft/net/minecraft/server/management/DemoPlayerInteractionManager.java
+++ ../src-work/minecraft/net/minecraft/server/management/DemoPlayerInteractionManager.java
@@ -10,122 +10,89 @@
 import net.minecraft.util.text.TextComponentTranslation;
 import net.minecraft.world.World;
 
-public class DemoPlayerInteractionManager extends PlayerInteractionManager
-{
+public class DemoPlayerInteractionManager extends PlayerInteractionManager {
     private boolean displayedIntro;
     private boolean demoTimeExpired;
     private int demoEndedReminder;
     private int gameModeTicks;
 
-    public DemoPlayerInteractionManager(World worldIn)
-    {
+    public DemoPlayerInteractionManager(World worldIn) {
         super(worldIn);
     }
 
-    public void updateBlockRemoving()
-    {
+    public void updateBlockRemoving() {
         super.updateBlockRemoving();
         ++this.gameModeTicks;
         long i = this.world.getTotalWorldTime();
         long j = i / 24000L + 1L;
 
-        if (!this.displayedIntro && this.gameModeTicks > 20)
-        {
+        if (!this.displayedIntro && this.gameModeTicks > 20) {
             this.displayedIntro = true;
             this.player.connection.sendPacket(new SPacketChangeGameState(5, 0.0F));
         }
 
         this.demoTimeExpired = i > 120500L;
 
-        if (this.demoTimeExpired)
-        {
+        if (this.demoTimeExpired) {
             ++this.demoEndedReminder;
         }
 
-        if (i % 24000L == 500L)
-        {
-            if (j <= 6L)
-            {
+        if (i % 24000L == 500L) {
+            if (j <= 6L) {
                 this.player.sendMessage(new TextComponentTranslation("demo.day." + j, new Object[0]));
             }
-        }
-        else if (j == 1L)
-        {
-            if (i == 100L)
-            {
+        } else if (j == 1L) {
+            if (i == 100L) {
                 this.player.connection.sendPacket(new SPacketChangeGameState(5, 101.0F));
-            }
-            else if (i == 175L)
-            {
+            } else if (i == 175L) {
                 this.player.connection.sendPacket(new SPacketChangeGameState(5, 102.0F));
-            }
-            else if (i == 250L)
-            {
+            } else if (i == 250L) {
                 this.player.connection.sendPacket(new SPacketChangeGameState(5, 103.0F));
             }
-        }
-        else if (j == 5L && i % 24000L == 22000L)
-        {
+        } else if (j == 5L && i % 24000L == 22000L) {
             this.player.sendMessage(new TextComponentTranslation("demo.day.warning", new Object[0]));
         }
     }
 
-    private void sendDemoReminder()
-    {
-        if (this.demoEndedReminder > 100)
-        {
+    private void sendDemoReminder() {
+        if (this.demoEndedReminder > 100) {
             this.player.sendMessage(new TextComponentTranslation("demo.reminder", new Object[0]));
             this.demoEndedReminder = 0;
         }
     }
 
-    public void onBlockClicked(BlockPos pos, EnumFacing side)
-    {
-        if (this.demoTimeExpired)
-        {
+    public void onBlockClicked(BlockPos pos, EnumFacing side) {
+        if (this.demoTimeExpired) {
             this.sendDemoReminder();
-        }
-        else
-        {
+        } else {
             super.onBlockClicked(pos, side);
         }
     }
 
-    public void blockRemoving(BlockPos pos)
-    {
-        if (!this.demoTimeExpired)
-        {
+    public void blockRemoving(BlockPos pos) {
+        if (!this.demoTimeExpired) {
             super.blockRemoving(pos);
         }
     }
 
-    public boolean tryHarvestBlock(BlockPos pos)
-    {
+    public boolean tryHarvestBlock(BlockPos pos) {
         return this.demoTimeExpired ? false : super.tryHarvestBlock(pos);
     }
 
-    public EnumActionResult processRightClick(EntityPlayer player, World worldIn, ItemStack stack, EnumHand hand)
-    {
-        if (this.demoTimeExpired)
-        {
+    public EnumActionResult processRightClick(EntityPlayer player, World worldIn, ItemStack stack, EnumHand hand) {
+        if (this.demoTimeExpired) {
             this.sendDemoReminder();
             return EnumActionResult.PASS;
-        }
-        else
-        {
+        } else {
             return super.processRightClick(player, worldIn, stack, hand);
         }
     }
 
-    public EnumActionResult processRightClickBlock(EntityPlayer player, World worldIn, ItemStack stack, EnumHand hand, BlockPos pos, EnumFacing facing, float hitX, float hitY, float hitZ)
-    {
-        if (this.demoTimeExpired)
-        {
+    public EnumActionResult processRightClickBlock(EntityPlayer player, World worldIn, ItemStack stack, EnumHand hand, BlockPos pos, EnumFacing facing, float hitX, float hitY, float hitZ) {
+        if (this.demoTimeExpired) {
             this.sendDemoReminder();
             return EnumActionResult.PASS;
-        }
-        else
-        {
+        } else {
             return super.processRightClickBlock(player, worldIn, stack, hand, pos, facing, hitX, hitY, hitZ);
         }
     }
