--- ../src-base/minecraft/net/minecraft/village/VillageSiege.java
+++ ../src-work/minecraft/net/minecraft/village/VillageSiege.java
@@ -1,8 +1,5 @@
 package net.minecraft.village;
 
-import java.util.Iterator;
-import java.util.List;
-import javax.annotation.Nullable;
 import net.minecraft.entity.EntityLiving;
 import net.minecraft.entity.IEntityLivingData;
 import net.minecraft.entity.monster.EntityZombie;
@@ -13,8 +10,11 @@
 import net.minecraft.world.World;
 import net.minecraft.world.WorldEntitySpawner;
 
-public class VillageSiege
-{
+import javax.annotation.Nullable;
+import java.util.Iterator;
+import java.util.List;
+
+public class VillageSiege {
     private final World world;
     private boolean hasSetupSiege;
     private int siegeState = -1;
@@ -25,64 +25,47 @@
     private int spawnY;
     private int spawnZ;
 
-    public VillageSiege(World worldIn)
-    {
+    public VillageSiege(World worldIn) {
         this.world = worldIn;
     }
 
-    public void tick()
-    {
-        if (this.world.isDaytime())
-        {
+    public void tick() {
+        if (this.world.isDaytime()) {
             this.siegeState = 0;
-        }
-        else if (this.siegeState != 2)
-        {
-            if (this.siegeState == 0)
-            {
+        } else if (this.siegeState != 2) {
+            if (this.siegeState == 0) {
                 float f = this.world.getCelestialAngle(0.0F);
 
-                if ((double)f < 0.5D || (double)f > 0.501D)
-                {
+                if ((double) f < 0.5D || (double) f > 0.501D) {
                     return;
                 }
 
                 this.siegeState = this.world.rand.nextInt(10) == 0 ? 1 : 2;
                 this.hasSetupSiege = false;
 
-                if (this.siegeState == 2)
-                {
+                if (this.siegeState == 2) {
                     return;
                 }
             }
 
-            if (this.siegeState != -1)
-            {
-                if (!this.hasSetupSiege)
-                {
-                    if (!this.trySetupSiege())
-                    {
+            if (this.siegeState != -1) {
+                if (!this.hasSetupSiege) {
+                    if (!this.trySetupSiege()) {
                         return;
                     }
 
                     this.hasSetupSiege = true;
                 }
 
-                if (this.nextSpawnTime > 0)
-                {
+                if (this.nextSpawnTime > 0) {
                     --this.nextSpawnTime;
-                }
-                else
-                {
+                } else {
                     this.nextSpawnTime = 2;
 
-                    if (this.siegeCount > 0)
-                    {
+                    if (this.siegeCount > 0) {
                         this.spawnZombie();
                         --this.siegeCount;
-                    }
-                    else
-                    {
+                    } else {
                         this.siegeState = 2;
                     }
                 }
@@ -90,63 +73,53 @@
         }
     }
 
-    private boolean trySetupSiege()
-    {
+    private boolean trySetupSiege() {
         List<EntityPlayer> list = this.world.playerEntities;
         Iterator iterator = list.iterator();
 
-        while (true)
-        {
-            if (!iterator.hasNext())
-            {
+        while (true) {
+            if (!iterator.hasNext()) {
                 return false;
             }
 
-            EntityPlayer entityplayer = (EntityPlayer)iterator.next();
+            EntityPlayer entityplayer = (EntityPlayer) iterator.next();
 
-            if (!entityplayer.isSpectator())
-            {
+            if (!entityplayer.isSpectator()) {
                 this.village = this.world.getVillageCollection().getNearestVillage(new BlockPos(entityplayer), 1);
 
-                if (this.village != null && this.village.getNumVillageDoors() >= 10 && this.village.getTicksSinceLastDoorAdding() >= 20 && this.village.getNumVillagers() >= 20)
-                {
+                if (this.village != null && this.village.getNumVillageDoors() >= 10 && this.village.getTicksSinceLastDoorAdding() >= 20 && this.village.getNumVillagers() >= 20) {
                     BlockPos blockpos = this.village.getCenter();
-                    float f = (float)this.village.getVillageRadius();
+                    float f = (float) this.village.getVillageRadius();
                     boolean flag = false;
 
-                    for (int i = 0; i < 10; ++i)
-                    {
-                        float f1 = this.world.rand.nextFloat() * ((float)Math.PI * 2F);
-                        this.spawnX = blockpos.getX() + (int)((double)(MathHelper.cos(f1) * f) * 0.9D);
+                    for (int i = 0; i < 10; ++i) {
+                        float f1 = this.world.rand.nextFloat() * ((float) Math.PI * 2F);
+                        this.spawnX = blockpos.getX() + (int) ((double) (MathHelper.cos(f1) * f) * 0.9D);
                         this.spawnY = blockpos.getY();
-                        this.spawnZ = blockpos.getZ() + (int)((double)(MathHelper.sin(f1) * f) * 0.9D);
+                        this.spawnZ = blockpos.getZ() + (int) ((double) (MathHelper.sin(f1) * f) * 0.9D);
                         flag = false;
 
-                        for (Village village : this.world.getVillageCollection().getVillageList())
-                        {
-                            if (village != this.village && village.isBlockPosWithinSqVillageRadius(new BlockPos(this.spawnX, this.spawnY, this.spawnZ)))
-                            {
+                        for (Village village : this.world.getVillageCollection().getVillageList()) {
+                            if (village != this.village && village.isBlockPosWithinSqVillageRadius(new BlockPos(this.spawnX, this.spawnY, this.spawnZ))) {
                                 flag = true;
                                 break;
                             }
                         }
 
-                        if (!flag)
-                        {
+                        if (!flag) {
                             break;
                         }
                     }
 
-                    if (flag)
-                    {
+                    if (flag) {
                         return false;
                     }
 
                     Vec3d vec3d = this.findRandomSpawnPos(new BlockPos(this.spawnX, this.spawnY, this.spawnZ));
 
-                    if (vec3d != null)
-                    {
-                        if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.village.VillageSiegeEvent(this, world, entityplayer, village, vec3d))) return false;
+                    if (vec3d != null) {
+                        if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.village.VillageSiegeEvent(this, world, entityplayer, village, vec3d)))
+                            return false;
                         break;
                     }
                 }
@@ -158,31 +131,24 @@
         return true;
     }
 
-    private boolean spawnZombie()
-    {
+    private boolean spawnZombie() {
         Vec3d vec3d = this.findRandomSpawnPos(new BlockPos(this.spawnX, this.spawnY, this.spawnZ));
 
-        if (vec3d == null)
-        {
+        if (vec3d == null) {
             return false;
-        }
-        else
-        {
+        } else {
             EntityZombie entityzombie;
 
-            try
-            {
+            try {
                 entityzombie = new EntityZombie(this.world);
-                entityzombie.onInitialSpawn(this.world.getDifficultyForLocation(new BlockPos(entityzombie)), (IEntityLivingData)null);
-            }
-            catch (Exception exception)
-            {
+                entityzombie.onInitialSpawn(this.world.getDifficultyForLocation(new BlockPos(entityzombie)), (IEntityLivingData) null);
+            } catch (Exception exception) {
                 exception.printStackTrace();
                 return false;
             }
 
             entityzombie.setLocationAndAngles(vec3d.x, vec3d.y, vec3d.z, this.world.rand.nextFloat() * 360.0F, 0.0F);
-            this.world.spawnEntity(entityzombie);
+            this.world.spawnEntity(entityzombie, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.VILLAGE_INVASION);
             BlockPos blockpos = this.village.getCenter();
             entityzombie.setHomePosAndDistance(blockpos, this.village.getVillageRadius());
             return true;
@@ -190,15 +156,12 @@
     }
 
     @Nullable
-    private Vec3d findRandomSpawnPos(BlockPos pos)
-    {
-        for (int i = 0; i < 10; ++i)
-        {
+    private Vec3d findRandomSpawnPos(BlockPos pos) {
+        for (int i = 0; i < 10; ++i) {
             BlockPos blockpos = pos.add(this.world.rand.nextInt(16) - 8, this.world.rand.nextInt(6) - 3, this.world.rand.nextInt(16) - 8);
 
-            if (this.village.isBlockPosWithinSqVillageRadius(blockpos) && WorldEntitySpawner.canCreatureTypeSpawnAtLocation(EntityLiving.SpawnPlacementType.ON_GROUND, this.world, blockpos))
-            {
-                return new Vec3d((double)blockpos.getX(), (double)blockpos.getY(), (double)blockpos.getZ());
+            if (this.village.isBlockPosWithinSqVillageRadius(blockpos) && WorldEntitySpawner.canCreatureTypeSpawnAtLocation(EntityLiving.SpawnPlacementType.ON_GROUND, this.world, blockpos)) {
+                return new Vec3d((double) blockpos.getX(), (double) blockpos.getY(), (double) blockpos.getZ());
             }
         }
 
