--- ../src-base/minecraft/net/minecraft/client/player/inventory/ContainerLocalMenu.java
+++ ../src-work/minecraft/net/minecraft/client/player/inventory/ContainerLocalMenu.java
@@ -1,7 +1,6 @@
 package net.minecraft.client.player.inventory;
 
 import com.google.common.collect.Maps;
-import java.util.Map;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.InventoryPlayer;
 import net.minecraft.inventory.Container;
@@ -12,54 +11,46 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import java.util.Map;
+
 @SideOnly(Side.CLIENT)
-public class ContainerLocalMenu extends InventoryBasic implements ILockableContainer
-{
+public class ContainerLocalMenu extends InventoryBasic implements ILockableContainer {
     private final String guiID;
     private final Map<Integer, Integer> dataValues = Maps.<Integer, Integer>newHashMap();
 
-    public ContainerLocalMenu(String id, ITextComponent title, int slotCount)
-    {
+    public ContainerLocalMenu(String id, ITextComponent title, int slotCount) {
         super(title, slotCount);
         this.guiID = id;
     }
 
-    public int getField(int id)
-    {
-        return this.dataValues.containsKey(Integer.valueOf(id)) ? ((Integer)this.dataValues.get(Integer.valueOf(id))).intValue() : 0;
+    public int getField(int id) {
+        return this.dataValues.containsKey(Integer.valueOf(id)) ? ((Integer) this.dataValues.get(Integer.valueOf(id))).intValue() : 0;
     }
 
-    public void setField(int id, int value)
-    {
+    public void setField(int id, int value) {
         this.dataValues.put(Integer.valueOf(id), Integer.valueOf(value));
     }
 
-    public int getFieldCount()
-    {
+    public int getFieldCount() {
         return this.dataValues.size();
     }
 
-    public boolean isLocked()
-    {
+    public boolean isLocked() {
         return false;
     }
 
-    public void setLockCode(LockCode code)
-    {
+    public void setLockCode(LockCode code) {
     }
 
-    public LockCode getLockCode()
-    {
+    public LockCode getLockCode() {
         return LockCode.EMPTY_CODE;
     }
 
-    public String getGuiID()
-    {
+    public String getGuiID() {
         return this.guiID;
     }
 
-    public Container createContainer(InventoryPlayer playerInventory, EntityPlayer playerIn)
-    {
+    public Container createContainer(InventoryPlayer playerInventory, EntityPlayer playerIn) {
         throw new UnsupportedOperationException();
     }
 }
