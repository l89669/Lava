--- ../src-base/minecraft/net/minecraft/client/multiplayer/ServerData.java
+++ ../src-work/minecraft/net/minecraft/client/multiplayer/ServerData.java
@@ -7,8 +7,7 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public class ServerData
-{
+public class ServerData {
     public String serverName;
     public String serverIP;
     public String populationInfo;
@@ -22,91 +21,71 @@
     private String serverIcon;
     private boolean lanServer;
 
-    public ServerData(String name, String ip, boolean isLan)
-    {
+    public ServerData(String name, String ip, boolean isLan) {
         this.serverName = name;
         this.serverIP = ip;
         this.lanServer = isLan;
     }
 
-    public NBTTagCompound getNBTCompound()
-    {
+    public NBTTagCompound getNBTCompound() {
         NBTTagCompound nbttagcompound = new NBTTagCompound();
         nbttagcompound.setString("name", this.serverName);
         nbttagcompound.setString("ip", this.serverIP);
 
-        if (this.serverIcon != null)
-        {
+        if (this.serverIcon != null) {
             nbttagcompound.setString("icon", this.serverIcon);
         }
 
-        if (this.resourceMode == ServerData.ServerResourceMode.ENABLED)
-        {
+        if (this.resourceMode == ServerData.ServerResourceMode.ENABLED) {
             nbttagcompound.setBoolean("acceptTextures", true);
-        }
-        else if (this.resourceMode == ServerData.ServerResourceMode.DISABLED)
-        {
+        } else if (this.resourceMode == ServerData.ServerResourceMode.DISABLED) {
             nbttagcompound.setBoolean("acceptTextures", false);
         }
 
         return nbttagcompound;
     }
 
-    public ServerData.ServerResourceMode getResourceMode()
-    {
+    public ServerData.ServerResourceMode getResourceMode() {
         return this.resourceMode;
     }
 
-    public void setResourceMode(ServerData.ServerResourceMode mode)
-    {
+    public void setResourceMode(ServerData.ServerResourceMode mode) {
         this.resourceMode = mode;
     }
 
-    public static ServerData getServerDataFromNBTCompound(NBTTagCompound nbtCompound)
-    {
+    public static ServerData getServerDataFromNBTCompound(NBTTagCompound nbtCompound) {
         ServerData serverdata = new ServerData(nbtCompound.getString("name"), nbtCompound.getString("ip"), false);
 
-        if (nbtCompound.hasKey("icon", 8))
-        {
+        if (nbtCompound.hasKey("icon", 8)) {
             serverdata.setBase64EncodedIconData(nbtCompound.getString("icon"));
         }
 
-        if (nbtCompound.hasKey("acceptTextures", 1))
-        {
-            if (nbtCompound.getBoolean("acceptTextures"))
-            {
+        if (nbtCompound.hasKey("acceptTextures", 1)) {
+            if (nbtCompound.getBoolean("acceptTextures")) {
                 serverdata.setResourceMode(ServerData.ServerResourceMode.ENABLED);
-            }
-            else
-            {
+            } else {
                 serverdata.setResourceMode(ServerData.ServerResourceMode.DISABLED);
             }
-        }
-        else
-        {
+        } else {
             serverdata.setResourceMode(ServerData.ServerResourceMode.PROMPT);
         }
 
         return serverdata;
     }
 
-    public String getBase64EncodedIconData()
-    {
+    public String getBase64EncodedIconData() {
         return this.serverIcon;
     }
 
-    public void setBase64EncodedIconData(String icon)
-    {
+    public void setBase64EncodedIconData(String icon) {
         this.serverIcon = icon;
     }
 
-    public boolean isOnLAN()
-    {
+    public boolean isOnLAN() {
         return this.lanServer;
     }
 
-    public void copyFrom(ServerData serverDataIn)
-    {
+    public void copyFrom(ServerData serverDataIn) {
         this.serverIP = serverDataIn.serverIP;
         this.serverName = serverDataIn.serverName;
         this.setResourceMode(serverDataIn.getResourceMode());
@@ -115,21 +94,18 @@
     }
 
     @SideOnly(Side.CLIENT)
-    public static enum ServerResourceMode
-    {
+    public static enum ServerResourceMode {
         ENABLED("enabled"),
         DISABLED("disabled"),
         PROMPT("prompt");
 
         private final ITextComponent motd;
 
-        private ServerResourceMode(String name)
-        {
+        private ServerResourceMode(String name) {
             this.motd = new TextComponentTranslation("addServer.resourcePack." + name, new Object[0]);
         }
 
-        public ITextComponent getMotd()
-        {
+        public ITextComponent getMotd() {
             return this.motd;
         }
     }
