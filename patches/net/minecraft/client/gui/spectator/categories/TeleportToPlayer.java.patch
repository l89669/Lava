--- ../src-base/minecraft/net/minecraft/client/gui/spectator/categories/TeleportToPlayer.java
+++ ../src-work/minecraft/net/minecraft/client/gui/spectator/categories/TeleportToPlayer.java
@@ -3,9 +3,6 @@
 import com.google.common.collect.ComparisonChain;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Ordering;
-import java.util.Collection;
-import java.util.Comparator;
-import java.util.List;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.Gui;
 import net.minecraft.client.gui.GuiSpectator;
@@ -20,64 +17,55 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import java.util.Collection;
+import java.util.Comparator;
+import java.util.List;
+
 @SideOnly(Side.CLIENT)
-public class TeleportToPlayer implements ISpectatorMenuView, ISpectatorMenuObject
-{
-    private static final Ordering<NetworkPlayerInfo> PROFILE_ORDER = Ordering.from(new Comparator<NetworkPlayerInfo>()
-    {
-        public int compare(NetworkPlayerInfo p_compare_1_, NetworkPlayerInfo p_compare_2_)
-        {
+public class TeleportToPlayer implements ISpectatorMenuView, ISpectatorMenuObject {
+    private static final Ordering<NetworkPlayerInfo> PROFILE_ORDER = Ordering.from(new Comparator<NetworkPlayerInfo>() {
+        public int compare(NetworkPlayerInfo p_compare_1_, NetworkPlayerInfo p_compare_2_) {
             return ComparisonChain.start().compare(p_compare_1_.getGameProfile().getId(), p_compare_2_.getGameProfile().getId()).result();
         }
     });
     private final List<ISpectatorMenuObject> items;
 
-    public TeleportToPlayer()
-    {
+    public TeleportToPlayer() {
         this(PROFILE_ORDER.sortedCopy(Minecraft.getMinecraft().getConnection().getPlayerInfoMap()));
     }
 
-    public TeleportToPlayer(Collection<NetworkPlayerInfo> profiles)
-    {
+    public TeleportToPlayer(Collection<NetworkPlayerInfo> profiles) {
         this.items = Lists.<ISpectatorMenuObject>newArrayList();
 
-        for (NetworkPlayerInfo networkplayerinfo : PROFILE_ORDER.sortedCopy(profiles))
-        {
-            if (networkplayerinfo.getGameType() != GameType.SPECTATOR)
-            {
+        for (NetworkPlayerInfo networkplayerinfo : PROFILE_ORDER.sortedCopy(profiles)) {
+            if (networkplayerinfo.getGameType() != GameType.SPECTATOR) {
                 this.items.add(new PlayerMenuObject(networkplayerinfo.getGameProfile()));
             }
         }
     }
 
-    public List<ISpectatorMenuObject> getItems()
-    {
+    public List<ISpectatorMenuObject> getItems() {
         return this.items;
     }
 
-    public ITextComponent getPrompt()
-    {
+    public ITextComponent getPrompt() {
         return new TextComponentTranslation("spectatorMenu.teleport.prompt", new Object[0]);
     }
 
-    public void selectItem(SpectatorMenu menu)
-    {
+    public void selectItem(SpectatorMenu menu) {
         menu.selectCategory(this);
     }
 
-    public ITextComponent getSpectatorName()
-    {
+    public ITextComponent getSpectatorName() {
         return new TextComponentTranslation("spectatorMenu.teleport", new Object[0]);
     }
 
-    public void renderIcon(float brightness, int alpha)
-    {
+    public void renderIcon(float brightness, int alpha) {
         Minecraft.getMinecraft().getTextureManager().bindTexture(GuiSpectator.SPECTATOR_WIDGETS);
         Gui.drawModalRectWithCustomSizedTexture(0, 0, 0.0F, 0.0F, 16, 16, 256.0F, 256.0F);
     }
 
-    public boolean isEnabled()
-    {
+    public boolean isEnabled() {
         return !this.items.isEmpty();
     }
 }
