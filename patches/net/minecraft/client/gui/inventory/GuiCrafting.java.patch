--- ../src-base/minecraft/net/minecraft/client/gui/inventory/GuiCrafting.java
+++ ../src-work/minecraft/net/minecraft/client/gui/inventory/GuiCrafting.java
@@ -1,6 +1,5 @@
 package net.minecraft.client.gui.inventory;
 
-import java.io.IOException;
 import net.minecraft.client.gui.GuiButton;
 import net.minecraft.client.gui.GuiButtonImage;
 import net.minecraft.client.gui.recipebook.GuiRecipeBook;
@@ -17,52 +16,45 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import java.io.IOException;
+
 @SideOnly(Side.CLIENT)
-public class GuiCrafting extends GuiContainer implements IRecipeShownListener
-{
+public class GuiCrafting extends GuiContainer implements IRecipeShownListener {
     private static final ResourceLocation CRAFTING_TABLE_GUI_TEXTURES = new ResourceLocation("textures/gui/container/crafting_table.png");
     private GuiButtonImage recipeButton;
     private final GuiRecipeBook recipeBookGui;
     private boolean widthTooNarrow;
 
-    public GuiCrafting(InventoryPlayer playerInv, World worldIn)
-    {
+    public GuiCrafting(InventoryPlayer playerInv, World worldIn) {
         this(playerInv, worldIn, BlockPos.ORIGIN);
     }
 
-    public GuiCrafting(InventoryPlayer playerInv, World worldIn, BlockPos blockPosition)
-    {
+    public GuiCrafting(InventoryPlayer playerInv, World worldIn, BlockPos blockPosition) {
         super(new ContainerWorkbench(playerInv, worldIn, blockPosition));
         this.recipeBookGui = new GuiRecipeBook();
     }
 
-    public void initGui()
-    {
+    public void initGui() {
         super.initGui();
         this.widthTooNarrow = this.width < 379;
-        this.recipeBookGui.func_194303_a(this.width, this.height, this.mc, this.widthTooNarrow, ((ContainerWorkbench)this.inventorySlots).craftMatrix);
+        this.recipeBookGui.func_194303_a(this.width, this.height, this.mc, this.widthTooNarrow, ((ContainerWorkbench) this.inventorySlots).craftMatrix);
         this.guiLeft = this.recipeBookGui.updateScreenPosition(this.widthTooNarrow, this.width, this.xSize);
         this.recipeButton = new GuiButtonImage(10, this.guiLeft + 5, this.height / 2 - 49, 20, 18, 0, 168, 19, CRAFTING_TABLE_GUI_TEXTURES);
         this.buttonList.add(this.recipeButton);
     }
 
-    public void updateScreen()
-    {
+    public void updateScreen() {
         super.updateScreen();
         this.recipeBookGui.tick();
     }
 
-    public void drawScreen(int mouseX, int mouseY, float partialTicks)
-    {
+    public void drawScreen(int mouseX, int mouseY, float partialTicks) {
         this.drawDefaultBackground();
 
-        if (this.recipeBookGui.isVisible() && this.widthTooNarrow)
-        {
+        if (this.recipeBookGui.isVisible() && this.widthTooNarrow) {
             this.drawGuiContainerBackgroundLayer(partialTicks, mouseX, mouseY);
             this.recipeBookGui.render(mouseX, mouseY, partialTicks);
-        }
-        else
-        {
+        } else {
             this.recipeBookGui.render(mouseX, mouseY, partialTicks);
             super.drawScreen(mouseX, mouseY, partialTicks);
             this.recipeBookGui.renderGhostRecipe(this.guiLeft, this.guiTop, true, partialTicks);
@@ -72,14 +64,12 @@
         this.recipeBookGui.renderTooltip(this.guiLeft, this.guiTop, mouseX, mouseY);
     }
 
-    protected void drawGuiContainerForegroundLayer(int mouseX, int mouseY)
-    {
+    protected void drawGuiContainerForegroundLayer(int mouseX, int mouseY) {
         this.fontRenderer.drawString(I18n.format("container.crafting"), 28, 6, 4210752);
         this.fontRenderer.drawString(I18n.format("container.inventory"), 8, this.ySize - 96 + 2, 4210752);
     }
 
-    protected void drawGuiContainerBackgroundLayer(float partialTicks, int mouseX, int mouseY)
-    {
+    protected void drawGuiContainerBackgroundLayer(float partialTicks, int mouseX, int mouseY) {
         GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
         this.mc.getTextureManager().bindTexture(CRAFTING_TABLE_GUI_TEXTURES);
         int i = this.guiLeft;
@@ -87,66 +77,53 @@
         this.drawTexturedModalRect(i, j, 0, 0, this.xSize, this.ySize);
     }
 
-    protected boolean isPointInRegion(int rectX, int rectY, int rectWidth, int rectHeight, int pointX, int pointY)
-    {
+    protected boolean isPointInRegion(int rectX, int rectY, int rectWidth, int rectHeight, int pointX, int pointY) {
         return (!this.widthTooNarrow || !this.recipeBookGui.isVisible()) && super.isPointInRegion(rectX, rectY, rectWidth, rectHeight, pointX, pointY);
     }
 
-    protected void mouseClicked(int mouseX, int mouseY, int mouseButton) throws IOException
-    {
-        if (!this.recipeBookGui.mouseClicked(mouseX, mouseY, mouseButton))
-        {
-            if (!this.widthTooNarrow || !this.recipeBookGui.isVisible())
-            {
+    protected void mouseClicked(int mouseX, int mouseY, int mouseButton) throws IOException {
+        if (!this.recipeBookGui.mouseClicked(mouseX, mouseY, mouseButton)) {
+            if (!this.widthTooNarrow || !this.recipeBookGui.isVisible()) {
                 super.mouseClicked(mouseX, mouseY, mouseButton);
             }
         }
     }
 
-    protected boolean hasClickedOutside(int p_193983_1_, int p_193983_2_, int p_193983_3_, int p_193983_4_)
-    {
+    protected boolean hasClickedOutside(int p_193983_1_, int p_193983_2_, int p_193983_3_, int p_193983_4_) {
         boolean flag = p_193983_1_ < p_193983_3_ || p_193983_2_ < p_193983_4_ || p_193983_1_ >= p_193983_3_ + this.xSize || p_193983_2_ >= p_193983_4_ + this.ySize;
         return this.recipeBookGui.hasClickedOutside(p_193983_1_, p_193983_2_, this.guiLeft, this.guiTop, this.xSize, this.ySize) && flag;
     }
 
-    protected void actionPerformed(GuiButton button) throws IOException
-    {
-        if (button.id == 10)
-        {
-            this.recipeBookGui.initVisuals(this.widthTooNarrow, ((ContainerWorkbench)this.inventorySlots).craftMatrix);
+    protected void actionPerformed(GuiButton button) throws IOException {
+        if (button.id == 10) {
+            this.recipeBookGui.initVisuals(this.widthTooNarrow, ((ContainerWorkbench) this.inventorySlots).craftMatrix);
             this.recipeBookGui.toggleVisibility();
             this.guiLeft = this.recipeBookGui.updateScreenPosition(this.widthTooNarrow, this.width, this.xSize);
             this.recipeButton.setPosition(this.guiLeft + 5, this.height / 2 - 49);
         }
     }
 
-    protected void keyTyped(char typedChar, int keyCode) throws IOException
-    {
-        if (!this.recipeBookGui.keyPressed(typedChar, keyCode))
-        {
+    protected void keyTyped(char typedChar, int keyCode) throws IOException {
+        if (!this.recipeBookGui.keyPressed(typedChar, keyCode)) {
             super.keyTyped(typedChar, keyCode);
         }
     }
 
-    protected void handleMouseClick(Slot slotIn, int slotId, int mouseButton, ClickType type)
-    {
+    protected void handleMouseClick(Slot slotIn, int slotId, int mouseButton, ClickType type) {
         super.handleMouseClick(slotIn, slotId, mouseButton, type);
         this.recipeBookGui.slotClicked(slotIn);
     }
 
-    public void recipesUpdated()
-    {
+    public void recipesUpdated() {
         this.recipeBookGui.recipesUpdated();
     }
 
-    public void onGuiClosed()
-    {
+    public void onGuiClosed() {
         this.recipeBookGui.removed();
         super.onGuiClosed();
     }
 
-    public GuiRecipeBook func_194310_f()
-    {
+    public GuiRecipeBook func_194310_f() {
         return this.recipeBookGui;
     }
 }
