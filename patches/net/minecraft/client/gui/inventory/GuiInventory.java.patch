--- ../src-base/minecraft/net/minecraft/client/gui/inventory/GuiInventory.java
+++ ../src-work/minecraft/net/minecraft/client/gui/inventory/GuiInventory.java
@@ -1,6 +1,5 @@
 package net.minecraft.client.gui.inventory;
 
-import java.io.IOException;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.GuiButton;
 import net.minecraft.client.gui.GuiButtonImage;
@@ -20,9 +19,10 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import java.io.IOException;
+
 @SideOnly(Side.CLIENT)
-public class GuiInventory extends InventoryEffectRenderer implements IRecipeShownListener
-{
+public class GuiInventory extends InventoryEffectRenderer implements IRecipeShownListener {
     private float oldMouseX;
     private float oldMouseY;
     private GuiButtonImage recipeButton;
@@ -30,59 +30,47 @@
     private boolean widthTooNarrow;
     private boolean buttonClicked;
 
-    public GuiInventory(EntityPlayer player)
-    {
+    public GuiInventory(EntityPlayer player) {
         super(player.inventoryContainer);
         this.allowUserInput = true;
     }
 
-    public void updateScreen()
-    {
-        if (this.mc.playerController.isInCreativeMode())
-        {
+    public void updateScreen() {
+        if (this.mc.playerController.isInCreativeMode()) {
             this.mc.displayGuiScreen(new GuiContainerCreative(this.mc.player));
         }
 
         this.recipeBookGui.tick();
     }
 
-    public void initGui()
-    {
+    public void initGui() {
         this.buttonList.clear();
 
-        if (this.mc.playerController.isInCreativeMode())
-        {
+        if (this.mc.playerController.isInCreativeMode()) {
             this.mc.displayGuiScreen(new GuiContainerCreative(this.mc.player));
-        }
-        else
-        {
+        } else {
             super.initGui();
         }
 
         this.widthTooNarrow = this.width < 379;
-        this.recipeBookGui.func_194303_a(this.width, this.height, this.mc, this.widthTooNarrow, ((ContainerPlayer)this.inventorySlots).craftMatrix);
+        this.recipeBookGui.func_194303_a(this.width, this.height, this.mc, this.widthTooNarrow, ((ContainerPlayer) this.inventorySlots).craftMatrix);
         this.guiLeft = this.recipeBookGui.updateScreenPosition(this.widthTooNarrow, this.width, this.xSize);
         this.recipeButton = new GuiButtonImage(10, this.guiLeft + 104, this.height / 2 - 22, 20, 18, 178, 0, 19, INVENTORY_BACKGROUND);
         this.buttonList.add(this.recipeButton);
     }
 
-    protected void drawGuiContainerForegroundLayer(int mouseX, int mouseY)
-    {
+    protected void drawGuiContainerForegroundLayer(int mouseX, int mouseY) {
         this.fontRenderer.drawString(I18n.format("container.crafting"), 97, 8, 4210752);
     }
 
-    public void drawScreen(int mouseX, int mouseY, float partialTicks)
-    {
+    public void drawScreen(int mouseX, int mouseY, float partialTicks) {
         this.drawDefaultBackground();
         this.hasActivePotionEffects = !this.recipeBookGui.isVisible();
 
-        if (this.recipeBookGui.isVisible() && this.widthTooNarrow)
-        {
+        if (this.recipeBookGui.isVisible() && this.widthTooNarrow) {
             this.drawGuiContainerBackgroundLayer(partialTicks, mouseX, mouseY);
             this.recipeBookGui.render(mouseX, mouseY, partialTicks);
-        }
-        else
-        {
+        } else {
             this.recipeBookGui.render(mouseX, mouseY, partialTicks);
             super.drawScreen(mouseX, mouseY, partialTicks);
             this.recipeBookGui.renderGhostRecipe(this.guiLeft, this.guiTop, false, partialTicks);
@@ -90,26 +78,24 @@
 
         this.renderHoveredToolTip(mouseX, mouseY);
         this.recipeBookGui.renderTooltip(this.guiLeft, this.guiTop, mouseX, mouseY);
-        this.oldMouseX = (float)mouseX;
-        this.oldMouseY = (float)mouseY;
+        this.oldMouseX = (float) mouseX;
+        this.oldMouseY = (float) mouseY;
     }
 
-    protected void drawGuiContainerBackgroundLayer(float partialTicks, int mouseX, int mouseY)
-    {
+    protected void drawGuiContainerBackgroundLayer(float partialTicks, int mouseX, int mouseY) {
         GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
         this.mc.getTextureManager().bindTexture(INVENTORY_BACKGROUND);
         int i = this.guiLeft;
         int j = this.guiTop;
         this.drawTexturedModalRect(i, j, 0, 0, this.xSize, this.ySize);
-        drawEntityOnScreen(i + 51, j + 75, 30, (float)(i + 51) - this.oldMouseX, (float)(j + 75 - 50) - this.oldMouseY, this.mc.player);
+        drawEntityOnScreen(i + 51, j + 75, 30, (float) (i + 51) - this.oldMouseX, (float) (j + 75 - 50) - this.oldMouseY, this.mc.player);
     }
 
-    public static void drawEntityOnScreen(int posX, int posY, int scale, float mouseX, float mouseY, EntityLivingBase ent)
-    {
+    public static void drawEntityOnScreen(int posX, int posY, int scale, float mouseX, float mouseY, EntityLivingBase ent) {
         GlStateManager.enableColorMaterial();
         GlStateManager.pushMatrix();
-        GlStateManager.translate((float)posX, (float)posY, 50.0F);
-        GlStateManager.scale((float)(-scale), (float)scale, (float)scale);
+        GlStateManager.translate((float) posX, (float) posY, 50.0F);
+        GlStateManager.scale((float) (-scale), (float) scale, (float) scale);
         GlStateManager.rotate(180.0F, 0.0F, 0.0F, 1.0F);
         float f = ent.renderYawOffset;
         float f1 = ent.rotationYaw;
@@ -119,10 +105,10 @@
         GlStateManager.rotate(135.0F, 0.0F, 1.0F, 0.0F);
         RenderHelper.enableStandardItemLighting();
         GlStateManager.rotate(-135.0F, 0.0F, 1.0F, 0.0F);
-        GlStateManager.rotate(-((float)Math.atan((double)(mouseY / 40.0F))) * 20.0F, 1.0F, 0.0F, 0.0F);
-        ent.renderYawOffset = (float)Math.atan((double)(mouseX / 40.0F)) * 20.0F;
-        ent.rotationYaw = (float)Math.atan((double)(mouseX / 40.0F)) * 40.0F;
-        ent.rotationPitch = -((float)Math.atan((double)(mouseY / 40.0F))) * 20.0F;
+        GlStateManager.rotate(-((float) Math.atan((double) (mouseY / 40.0F))) * 20.0F, 1.0F, 0.0F, 0.0F);
+        ent.renderYawOffset = (float) Math.atan((double) (mouseX / 40.0F)) * 20.0F;
+        ent.rotationYaw = (float) Math.atan((double) (mouseX / 40.0F)) * 40.0F;
+        ent.rotationPitch = -((float) Math.atan((double) (mouseY / 40.0F))) * 20.0F;
         ent.rotationYawHead = ent.rotationYaw;
         ent.prevRotationYawHead = ent.rotationYaw;
         GlStateManager.translate(0.0F, 0.0F, 0.0F);
@@ -144,45 +130,34 @@
         GlStateManager.setActiveTexture(OpenGlHelper.defaultTexUnit);
     }
 
-    protected boolean isPointInRegion(int rectX, int rectY, int rectWidth, int rectHeight, int pointX, int pointY)
-    {
+    protected boolean isPointInRegion(int rectX, int rectY, int rectWidth, int rectHeight, int pointX, int pointY) {
         return (!this.widthTooNarrow || !this.recipeBookGui.isVisible()) && super.isPointInRegion(rectX, rectY, rectWidth, rectHeight, pointX, pointY);
     }
 
-    protected void mouseClicked(int mouseX, int mouseY, int mouseButton) throws IOException
-    {
-        if (!this.recipeBookGui.mouseClicked(mouseX, mouseY, mouseButton))
-        {
-            if (!this.widthTooNarrow || !this.recipeBookGui.isVisible())
-            {
+    protected void mouseClicked(int mouseX, int mouseY, int mouseButton) throws IOException {
+        if (!this.recipeBookGui.mouseClicked(mouseX, mouseY, mouseButton)) {
+            if (!this.widthTooNarrow || !this.recipeBookGui.isVisible()) {
                 super.mouseClicked(mouseX, mouseY, mouseButton);
             }
         }
     }
 
-    protected void mouseReleased(int mouseX, int mouseY, int state)
-    {
-        if (this.buttonClicked)
-        {
+    protected void mouseReleased(int mouseX, int mouseY, int state) {
+        if (this.buttonClicked) {
             this.buttonClicked = false;
-        }
-        else
-        {
+        } else {
             super.mouseReleased(mouseX, mouseY, state);
         }
     }
 
-    protected boolean hasClickedOutside(int p_193983_1_, int p_193983_2_, int p_193983_3_, int p_193983_4_)
-    {
+    protected boolean hasClickedOutside(int p_193983_1_, int p_193983_2_, int p_193983_3_, int p_193983_4_) {
         boolean flag = p_193983_1_ < p_193983_3_ || p_193983_2_ < p_193983_4_ || p_193983_1_ >= p_193983_3_ + this.xSize || p_193983_2_ >= p_193983_4_ + this.ySize;
         return this.recipeBookGui.hasClickedOutside(p_193983_1_, p_193983_2_, this.guiLeft, this.guiTop, this.xSize, this.ySize) && flag;
     }
 
-    protected void actionPerformed(GuiButton button) throws IOException
-    {
-        if (button.id == 10)
-        {
-            this.recipeBookGui.initVisuals(this.widthTooNarrow, ((ContainerPlayer)this.inventorySlots).craftMatrix);
+    protected void actionPerformed(GuiButton button) throws IOException {
+        if (button.id == 10) {
+            this.recipeBookGui.initVisuals(this.widthTooNarrow, ((ContainerPlayer) this.inventorySlots).craftMatrix);
             this.recipeBookGui.toggleVisibility();
             this.guiLeft = this.recipeBookGui.updateScreenPosition(this.widthTooNarrow, this.width, this.xSize);
             this.recipeButton.setPosition(this.guiLeft + 104, this.height / 2 - 22);
@@ -190,33 +165,27 @@
         }
     }
 
-    protected void keyTyped(char typedChar, int keyCode) throws IOException
-    {
-        if (!this.recipeBookGui.keyPressed(typedChar, keyCode))
-        {
+    protected void keyTyped(char typedChar, int keyCode) throws IOException {
+        if (!this.recipeBookGui.keyPressed(typedChar, keyCode)) {
             super.keyTyped(typedChar, keyCode);
         }
     }
 
-    protected void handleMouseClick(Slot slotIn, int slotId, int mouseButton, ClickType type)
-    {
+    protected void handleMouseClick(Slot slotIn, int slotId, int mouseButton, ClickType type) {
         super.handleMouseClick(slotIn, slotId, mouseButton, type);
         this.recipeBookGui.slotClicked(slotIn);
     }
 
-    public void recipesUpdated()
-    {
+    public void recipesUpdated() {
         this.recipeBookGui.recipesUpdated();
     }
 
-    public void onGuiClosed()
-    {
+    public void onGuiClosed() {
         this.recipeBookGui.removed();
         super.onGuiClosed();
     }
 
-    public GuiRecipeBook func_194310_f()
-    {
+    public GuiRecipeBook func_194310_f() {
         return this.recipeBookGui;
     }
 }
