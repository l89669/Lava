--- ../src-base/minecraft/net/minecraft/client/gui/inventory/GuiEditSign.java
+++ ../src-work/minecraft/net/minecraft/client/gui/inventory/GuiEditSign.java
@@ -1,6 +1,5 @@
 package net.minecraft.client.gui.inventory;
 
-import java.io.IOException;
 import net.minecraft.block.Block;
 import net.minecraft.client.gui.GuiButton;
 import net.minecraft.client.gui.GuiScreen;
@@ -17,124 +16,104 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.lwjgl.input.Keyboard;
 
+import java.io.IOException;
+
 @SideOnly(Side.CLIENT)
-public class GuiEditSign extends GuiScreen
-{
+public class GuiEditSign extends GuiScreen {
     private final TileEntitySign tileSign;
     private int updateCounter;
     private int editLine;
     private GuiButton doneBtn;
 
-    public GuiEditSign(TileEntitySign teSign)
-    {
+    public GuiEditSign(TileEntitySign teSign) {
         this.tileSign = teSign;
     }
 
-    public void initGui()
-    {
+    public void initGui() {
         this.buttonList.clear();
         Keyboard.enableRepeatEvents(true);
         this.doneBtn = this.addButton(new GuiButton(0, this.width / 2 - 100, this.height / 4 + 120, I18n.format("gui.done")));
         this.tileSign.setEditable(false);
     }
 
-    public void onGuiClosed()
-    {
+    public void onGuiClosed() {
         Keyboard.enableRepeatEvents(false);
         NetHandlerPlayClient nethandlerplayclient = this.mc.getConnection();
 
-        if (nethandlerplayclient != null)
-        {
+        if (nethandlerplayclient != null) {
             nethandlerplayclient.sendPacket(new CPacketUpdateSign(this.tileSign.getPos(), this.tileSign.signText));
         }
 
         this.tileSign.setEditable(true);
     }
 
-    public void updateScreen()
-    {
+    public void updateScreen() {
         ++this.updateCounter;
     }
 
-    protected void actionPerformed(GuiButton button) throws IOException
-    {
-        if (button.enabled)
-        {
-            if (button.id == 0)
-            {
+    protected void actionPerformed(GuiButton button) throws IOException {
+        if (button.enabled) {
+            if (button.id == 0) {
                 this.tileSign.markDirty();
-                this.mc.displayGuiScreen((GuiScreen)null);
+                this.mc.displayGuiScreen((GuiScreen) null);
             }
         }
     }
 
-    protected void keyTyped(char typedChar, int keyCode) throws IOException
-    {
-        if (keyCode == 200)
-        {
+    protected void keyTyped(char typedChar, int keyCode) throws IOException {
+        if (keyCode == 200) {
             this.editLine = this.editLine - 1 & 3;
         }
 
-        if (keyCode == 208 || keyCode == 28 || keyCode == 156)
-        {
+        if (keyCode == 208 || keyCode == 28 || keyCode == 156) {
             this.editLine = this.editLine + 1 & 3;
         }
 
         String s = this.tileSign.signText[this.editLine].getUnformattedText();
 
-        if (keyCode == 14 && !s.isEmpty())
-        {
+        if (keyCode == 14 && !s.isEmpty()) {
             s = s.substring(0, s.length() - 1);
         }
 
-        if (ChatAllowedCharacters.isAllowedCharacter(typedChar) && this.fontRenderer.getStringWidth(s + typedChar) <= 90)
-        {
+        if (ChatAllowedCharacters.isAllowedCharacter(typedChar) && this.fontRenderer.getStringWidth(s + typedChar) <= 90) {
             s = s + typedChar;
         }
 
         this.tileSign.signText[this.editLine] = new TextComponentString(s);
 
-        if (keyCode == 1)
-        {
+        if (keyCode == 1) {
             this.actionPerformed(this.doneBtn);
         }
     }
 
-    public void drawScreen(int mouseX, int mouseY, float partialTicks)
-    {
+    public void drawScreen(int mouseX, int mouseY, float partialTicks) {
         this.drawDefaultBackground();
         this.drawCenteredString(this.fontRenderer, I18n.format("sign.edit"), this.width / 2, 40, 16777215);
         GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
         GlStateManager.pushMatrix();
-        GlStateManager.translate((float)(this.width / 2), 0.0F, 50.0F);
+        GlStateManager.translate((float) (this.width / 2), 0.0F, 50.0F);
         float f = 93.75F;
         GlStateManager.scale(-93.75F, -93.75F, -93.75F);
         GlStateManager.rotate(180.0F, 0.0F, 1.0F, 0.0F);
         Block block = this.tileSign.getBlockType();
 
-        if (block == Blocks.STANDING_SIGN)
-        {
-            float f1 = (float)(this.tileSign.getBlockMetadata() * 360) / 16.0F;
+        if (block == Blocks.STANDING_SIGN) {
+            float f1 = (float) (this.tileSign.getBlockMetadata() * 360) / 16.0F;
             GlStateManager.rotate(f1, 0.0F, 1.0F, 0.0F);
             GlStateManager.translate(0.0F, -1.0625F, 0.0F);
-        }
-        else
-        {
+        } else {
             int i = this.tileSign.getBlockMetadata();
             float f2 = 0.0F;
 
-            if (i == 2)
-            {
+            if (i == 2) {
                 f2 = 180.0F;
             }
 
-            if (i == 4)
-            {
+            if (i == 4) {
                 f2 = 90.0F;
             }
 
-            if (i == 5)
-            {
+            if (i == 5) {
                 f2 = -90.0F;
             }
 
@@ -142,8 +121,7 @@
             GlStateManager.translate(0.0F, -1.0625F, 0.0F);
         }
 
-        if (this.updateCounter / 6 % 2 == 0)
-        {
+        if (this.updateCounter / 6 % 2 == 0) {
             this.tileSign.lineBeingEdited = this.editLine;
         }
 
