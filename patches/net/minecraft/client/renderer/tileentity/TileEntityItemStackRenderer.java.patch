--- ../src-base/minecraft/net/minecraft/client/renderer/tileentity/TileEntityItemStackRenderer.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/tileentity/TileEntityItemStackRenderer.java
@@ -1,7 +1,6 @@
 package net.minecraft.client.renderer.tileentity;
 
 import com.mojang.authlib.GameProfile;
-import java.util.UUID;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockChest;
 import net.minecraft.block.BlockShulkerBox;
@@ -16,20 +15,16 @@
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.nbt.NBTUtil;
-import net.minecraft.tileentity.TileEntityBanner;
-import net.minecraft.tileentity.TileEntityBed;
-import net.minecraft.tileentity.TileEntityChest;
-import net.minecraft.tileentity.TileEntityEnderChest;
-import net.minecraft.tileentity.TileEntityShulkerBox;
-import net.minecraft.tileentity.TileEntitySkull;
+import net.minecraft.tileentity.*;
 import net.minecraft.util.EnumFacing;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.apache.commons.lang3.StringUtils;
 
+import java.util.UUID;
+
 @SideOnly(Side.CLIENT)
-public class TileEntityItemStackRenderer
-{
+public class TileEntityItemStackRenderer {
     private static final TileEntityShulkerBox[] SHULKER_BOXES = new TileEntityShulkerBox[16];
     public static TileEntityItemStackRenderer instance;
     private final TileEntityChest chestBasic = new TileEntityChest(BlockChest.Type.BASIC);
@@ -40,34 +35,24 @@
     private final TileEntitySkull skull = new TileEntitySkull();
     private final ModelShield modelShield = new ModelShield();
 
-    public void renderByItem(ItemStack itemStackIn)
-    {
+    public void renderByItem(ItemStack itemStackIn) {
         this.renderByItem(itemStackIn, 1.0F);
     }
 
-    public void renderByItem(ItemStack p_192838_1_, float partialTicks)
-    {
+    public void renderByItem(ItemStack p_192838_1_, float partialTicks) {
         Item item = p_192838_1_.getItem();
 
-        if (item == Items.BANNER)
-        {
+        if (item == Items.BANNER) {
             this.banner.setItemValues(p_192838_1_, false);
             TileEntityRendererDispatcher.instance.render(this.banner, 0.0D, 0.0D, 0.0D, 0.0F, partialTicks);
-        }
-        else if (item == Items.BED)
-        {
+        } else if (item == Items.BED) {
             this.bed.setItemValues(p_192838_1_);
             TileEntityRendererDispatcher.instance.render(this.bed, 0.0D, 0.0D, 0.0D, 0.0F);
-        }
-        else if (item == Items.SHIELD)
-        {
-            if (p_192838_1_.getSubCompound("BlockEntityTag") != null)
-            {
+        } else if (item == Items.SHIELD) {
+            if (p_192838_1_.getSubCompound("BlockEntityTag") != null) {
                 this.banner.setItemValues(p_192838_1_, true);
                 Minecraft.getMinecraft().getTextureManager().bindTexture(BannerTextures.SHIELD_DESIGNS.getResourceLocation(this.banner.getPatternResourceLocation(), this.banner.getPatternList(), this.banner.getColorList()));
-            }
-            else
-            {
+            } else {
                 Minecraft.getMinecraft().getTextureManager().bindTexture(BannerTextures.SHIELD_BASE_TEXTURE);
             }
 
@@ -75,60 +60,44 @@
             GlStateManager.scale(1.0F, -1.0F, -1.0F);
             this.modelShield.render();
             GlStateManager.popMatrix();
-        }
-        else if (item == Items.SKULL)
-        {
+        } else if (item == Items.SKULL) {
             GameProfile gameprofile = null;
 
-            if (p_192838_1_.hasTagCompound())
-            {
+            if (p_192838_1_.hasTagCompound()) {
                 NBTTagCompound nbttagcompound = p_192838_1_.getTagCompound();
 
-                if (nbttagcompound.hasKey("SkullOwner", 10))
-                {
+                if (nbttagcompound.hasKey("SkullOwner", 10)) {
                     gameprofile = NBTUtil.readGameProfileFromNBT(nbttagcompound.getCompoundTag("SkullOwner"));
-                }
-                else if (nbttagcompound.hasKey("SkullOwner", 8) && !StringUtils.isBlank(nbttagcompound.getString("SkullOwner")))
-                {
-                    GameProfile gameprofile1 = new GameProfile((UUID)null, nbttagcompound.getString("SkullOwner"));
+                } else if (nbttagcompound.hasKey("SkullOwner", 8) && !StringUtils.isBlank(nbttagcompound.getString("SkullOwner"))) {
+                    GameProfile gameprofile1 = new GameProfile((UUID) null, nbttagcompound.getString("SkullOwner"));
                     gameprofile = TileEntitySkull.updateGameprofile(gameprofile1);
                     nbttagcompound.removeTag("SkullOwner");
                     nbttagcompound.setTag("SkullOwner", NBTUtil.writeGameProfile(new NBTTagCompound(), gameprofile));
                 }
             }
 
-            if (TileEntitySkullRenderer.instance != null)
-            {
+            if (TileEntitySkullRenderer.instance != null) {
                 GlStateManager.pushMatrix();
                 GlStateManager.disableCull();
                 TileEntitySkullRenderer.instance.renderSkull(0.0F, 0.0F, 0.0F, EnumFacing.UP, 180.0F, p_192838_1_.getMetadata(), gameprofile, -1, 0.0F);
                 GlStateManager.enableCull();
                 GlStateManager.popMatrix();
             }
-        }
-        else if (item == Item.getItemFromBlock(Blocks.ENDER_CHEST))
-        {
+        } else if (item == Item.getItemFromBlock(Blocks.ENDER_CHEST)) {
             TileEntityRendererDispatcher.instance.render(this.enderChest, 0.0D, 0.0D, 0.0D, 0.0F, partialTicks);
-        }
-        else if (item == Item.getItemFromBlock(Blocks.TRAPPED_CHEST))
-        {
+        } else if (item == Item.getItemFromBlock(Blocks.TRAPPED_CHEST)) {
             TileEntityRendererDispatcher.instance.render(this.chestTrap, 0.0D, 0.0D, 0.0D, 0.0F, partialTicks);
-        }
-        else if (Block.getBlockFromItem(item) instanceof BlockShulkerBox)
-        {
+        } else if (Block.getBlockFromItem(item) instanceof BlockShulkerBox) {
             TileEntityRendererDispatcher.instance.render(SHULKER_BOXES[BlockShulkerBox.getColorFromItem(item).getMetadata()], 0.0D, 0.0D, 0.0D, 0.0F, partialTicks);
-        }
-        else if (Block.getBlockFromItem(item) != Blocks.CHEST) net.minecraftforge.client.ForgeHooksClient.renderTileItem(p_192838_1_.getItem(), p_192838_1_.getMetadata());
-        else
-        {
+        } else if (Block.getBlockFromItem(item) != Blocks.CHEST)
+            net.minecraftforge.client.ForgeHooksClient.renderTileItem(p_192838_1_.getItem(), p_192838_1_.getMetadata());
+        else {
             TileEntityRendererDispatcher.instance.render(this.chestBasic, 0.0D, 0.0D, 0.0D, 0.0F, partialTicks);
         }
     }
 
-    static
-    {
-        for (EnumDyeColor enumdyecolor : EnumDyeColor.values())
-        {
+    static {
+        for (EnumDyeColor enumdyecolor : EnumDyeColor.values()) {
             SHULKER_BOXES[enumdyecolor.getMetadata()] = new TileEntityShulkerBox(enumdyecolor);
         }
 
