--- ../src-base/minecraft/net/minecraft/client/renderer/block/model/multipart/ICondition.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/block/model/multipart/ICondition.java
@@ -1,36 +1,28 @@
 package net.minecraft.client.renderer.block.model.multipart;
 
 import com.google.common.base.Predicate;
-import javax.annotation.Nullable;
 import net.minecraft.block.state.BlockStateContainer;
 import net.minecraft.block.state.IBlockState;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import javax.annotation.Nullable;
+
 @SideOnly(Side.CLIENT)
-public interface ICondition
-{
-    ICondition TRUE = new ICondition()
-    {
-        public Predicate<IBlockState> getPredicate(BlockStateContainer blockState)
-        {
-            return new Predicate<IBlockState>()
-            {
-                public boolean apply(@Nullable IBlockState p_apply_1_)
-                {
+public interface ICondition {
+    ICondition TRUE = new ICondition() {
+        public Predicate<IBlockState> getPredicate(BlockStateContainer blockState) {
+            return new Predicate<IBlockState>() {
+                public boolean apply(@Nullable IBlockState p_apply_1_) {
                     return true;
                 }
             };
         }
     };
-    ICondition FALSE = new ICondition()
-    {
-        public Predicate<IBlockState> getPredicate(BlockStateContainer blockState)
-        {
-            return new Predicate<IBlockState>()
-            {
-                public boolean apply(@Nullable IBlockState p_apply_1_)
-                {
+    ICondition FALSE = new ICondition() {
+        public Predicate<IBlockState> getPredicate(BlockStateContainer blockState) {
+            return new Predicate<IBlockState>() {
+                public boolean apply(@Nullable IBlockState p_apply_1_) {
                     return false;
                 }
             };
