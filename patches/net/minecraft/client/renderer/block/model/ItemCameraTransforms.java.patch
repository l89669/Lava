--- ../src-base/minecraft/net/minecraft/client/renderer/block/model/ItemCameraTransforms.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/block/model/ItemCameraTransforms.java
@@ -1,23 +1,19 @@
 package net.minecraft.client.renderer.block.model;
 
-import com.google.gson.JsonDeserializationContext;
-import com.google.gson.JsonDeserializer;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
-import com.google.gson.JsonParseException;
-import java.lang.reflect.Type;
+import com.google.gson.*;
 import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.util.math.MathHelper;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.lwjgl.util.vector.Quaternion;
 
+import java.lang.reflect.Type;
+
 /*
  * @deprecated use {@link net.minecraftforge.client.model.IPerspectiveAwareModel} instead
  */
 @SideOnly(Side.CLIENT)
-public class ItemCameraTransforms
-{
+public class ItemCameraTransforms {
     public static final ItemCameraTransforms DEFAULT = new ItemCameraTransforms();
     public static float offsetTranslateX;
     public static float offsetTranslateY;
@@ -37,14 +33,12 @@
     public final ItemTransformVec3f ground;
     public final ItemTransformVec3f fixed;
 
-    private ItemCameraTransforms()
-    {
+    private ItemCameraTransforms() {
         this(ItemTransformVec3f.DEFAULT, ItemTransformVec3f.DEFAULT, ItemTransformVec3f.DEFAULT, ItemTransformVec3f.DEFAULT, ItemTransformVec3f.DEFAULT, ItemTransformVec3f.DEFAULT, ItemTransformVec3f.DEFAULT, ItemTransformVec3f.DEFAULT);
     }
 
     @Deprecated
-    public ItemCameraTransforms(ItemCameraTransforms transforms)
-    {
+    public ItemCameraTransforms(ItemCameraTransforms transforms) {
         this.thirdperson_left = transforms.thirdperson_left;
         this.thirdperson_right = transforms.thirdperson_right;
         this.firstperson_left = transforms.firstperson_left;
@@ -56,8 +50,7 @@
     }
 
     @Deprecated
-    public ItemCameraTransforms(ItemTransformVec3f thirdperson_leftIn, ItemTransformVec3f thirdperson_rightIn, ItemTransformVec3f firstperson_leftIn, ItemTransformVec3f firstperson_rightIn, ItemTransformVec3f headIn, ItemTransformVec3f guiIn, ItemTransformVec3f groundIn, ItemTransformVec3f fixedIn)
-    {
+    public ItemCameraTransforms(ItemTransformVec3f thirdperson_leftIn, ItemTransformVec3f thirdperson_rightIn, ItemTransformVec3f firstperson_leftIn, ItemTransformVec3f firstperson_rightIn, ItemTransformVec3f headIn, ItemTransformVec3f guiIn, ItemTransformVec3f groundIn, ItemTransformVec3f fixedIn) {
         this.thirdperson_left = thirdperson_leftIn;
         this.thirdperson_right = thirdperson_rightIn;
         this.firstperson_left = firstperson_leftIn;
@@ -68,23 +61,19 @@
         this.fixed = fixedIn;
     }
 
-    public void applyTransform(ItemCameraTransforms.TransformType type)
-    {
+    public void applyTransform(ItemCameraTransforms.TransformType type) {
         applyTransformSide(this.getTransform(type), false);
     }
 
-    public static void applyTransformSide(ItemTransformVec3f vec, boolean leftHand)
-    {
-        if (vec != ItemTransformVec3f.DEFAULT)
-        {
+    public static void applyTransformSide(ItemTransformVec3f vec, boolean leftHand) {
+        if (vec != ItemTransformVec3f.DEFAULT) {
             int i = leftHand ? -1 : 1;
-            GlStateManager.translate((float)i * (offsetTranslateX + vec.translation.x), offsetTranslateY + vec.translation.y, offsetTranslateZ + vec.translation.z);
+            GlStateManager.translate((float) i * (offsetTranslateX + vec.translation.x), offsetTranslateY + vec.translation.y, offsetTranslateZ + vec.translation.z);
             float f = offsetRotationX + vec.rotation.x;
             float f1 = offsetRotationY + vec.rotation.y;
             float f2 = offsetRotationZ + vec.rotation.z;
 
-            if (leftHand)
-            {
+            if (leftHand) {
                 f1 = -f1;
                 f2 = -f2;
             }
@@ -94,8 +83,7 @@
         }
     }
 
-    private static Quaternion makeQuaternion(float p_188035_0_, float p_188035_1_, float p_188035_2_)
-    {
+    private static Quaternion makeQuaternion(float p_188035_0_, float p_188035_1_, float p_188035_2_) {
         float f = p_188035_0_ * 0.017453292F;
         float f1 = p_188035_1_ * 0.017453292F;
         float f2 = p_188035_2_ * 0.017453292F;
@@ -109,10 +97,8 @@
     }
 
     @Deprecated
-    public ItemTransformVec3f getTransform(ItemCameraTransforms.TransformType type)
-    {
-        switch (type)
-        {
+    public ItemTransformVec3f getTransform(ItemCameraTransforms.TransformType type) {
+        switch (type) {
             case THIRD_PERSON_LEFT_HAND:
                 return this.thirdperson_left;
             case THIRD_PERSON_RIGHT_HAND:
@@ -134,49 +120,42 @@
         }
     }
 
-    public boolean hasCustomTransform(ItemCameraTransforms.TransformType type)
-    {
+    public boolean hasCustomTransform(ItemCameraTransforms.TransformType type) {
         return this.getTransform(type) != ItemTransformVec3f.DEFAULT;
     }
 
     @SideOnly(Side.CLIENT)
-    static class Deserializer implements JsonDeserializer<ItemCameraTransforms>
-        {
-            public ItemCameraTransforms deserialize(JsonElement p_deserialize_1_, Type p_deserialize_2_, JsonDeserializationContext p_deserialize_3_) throws JsonParseException
-            {
-                JsonObject jsonobject = p_deserialize_1_.getAsJsonObject();
-                ItemTransformVec3f itemtransformvec3f = this.getTransform(p_deserialize_3_, jsonobject, "thirdperson_righthand");
-                ItemTransformVec3f itemtransformvec3f1 = this.getTransform(p_deserialize_3_, jsonobject, "thirdperson_lefthand");
+    static class Deserializer implements JsonDeserializer<ItemCameraTransforms> {
+        public ItemCameraTransforms deserialize(JsonElement p_deserialize_1_, Type p_deserialize_2_, JsonDeserializationContext p_deserialize_3_) throws JsonParseException {
+            JsonObject jsonobject = p_deserialize_1_.getAsJsonObject();
+            ItemTransformVec3f itemtransformvec3f = this.getTransform(p_deserialize_3_, jsonobject, "thirdperson_righthand");
+            ItemTransformVec3f itemtransformvec3f1 = this.getTransform(p_deserialize_3_, jsonobject, "thirdperson_lefthand");
 
-                if (itemtransformvec3f1 == ItemTransformVec3f.DEFAULT)
-                {
-                    itemtransformvec3f1 = itemtransformvec3f;
-                }
+            if (itemtransformvec3f1 == ItemTransformVec3f.DEFAULT) {
+                itemtransformvec3f1 = itemtransformvec3f;
+            }
 
-                ItemTransformVec3f itemtransformvec3f2 = this.getTransform(p_deserialize_3_, jsonobject, "firstperson_righthand");
-                ItemTransformVec3f itemtransformvec3f3 = this.getTransform(p_deserialize_3_, jsonobject, "firstperson_lefthand");
+            ItemTransformVec3f itemtransformvec3f2 = this.getTransform(p_deserialize_3_, jsonobject, "firstperson_righthand");
+            ItemTransformVec3f itemtransformvec3f3 = this.getTransform(p_deserialize_3_, jsonobject, "firstperson_lefthand");
 
-                if (itemtransformvec3f3 == ItemTransformVec3f.DEFAULT)
-                {
-                    itemtransformvec3f3 = itemtransformvec3f2;
-                }
-
-                ItemTransformVec3f itemtransformvec3f4 = this.getTransform(p_deserialize_3_, jsonobject, "head");
-                ItemTransformVec3f itemtransformvec3f5 = this.getTransform(p_deserialize_3_, jsonobject, "gui");
-                ItemTransformVec3f itemtransformvec3f6 = this.getTransform(p_deserialize_3_, jsonobject, "ground");
-                ItemTransformVec3f itemtransformvec3f7 = this.getTransform(p_deserialize_3_, jsonobject, "fixed");
-                return new ItemCameraTransforms(itemtransformvec3f1, itemtransformvec3f, itemtransformvec3f3, itemtransformvec3f2, itemtransformvec3f4, itemtransformvec3f5, itemtransformvec3f6, itemtransformvec3f7);
+            if (itemtransformvec3f3 == ItemTransformVec3f.DEFAULT) {
+                itemtransformvec3f3 = itemtransformvec3f2;
             }
 
-            private ItemTransformVec3f getTransform(JsonDeserializationContext p_181683_1_, JsonObject p_181683_2_, String p_181683_3_)
-            {
-                return p_181683_2_.has(p_181683_3_) ? (ItemTransformVec3f)p_181683_1_.deserialize(p_181683_2_.get(p_181683_3_), ItemTransformVec3f.class) : ItemTransformVec3f.DEFAULT;
-            }
+            ItemTransformVec3f itemtransformvec3f4 = this.getTransform(p_deserialize_3_, jsonobject, "head");
+            ItemTransformVec3f itemtransformvec3f5 = this.getTransform(p_deserialize_3_, jsonobject, "gui");
+            ItemTransformVec3f itemtransformvec3f6 = this.getTransform(p_deserialize_3_, jsonobject, "ground");
+            ItemTransformVec3f itemtransformvec3f7 = this.getTransform(p_deserialize_3_, jsonobject, "fixed");
+            return new ItemCameraTransforms(itemtransformvec3f1, itemtransformvec3f, itemtransformvec3f3, itemtransformvec3f2, itemtransformvec3f4, itemtransformvec3f5, itemtransformvec3f6, itemtransformvec3f7);
         }
 
+        private ItemTransformVec3f getTransform(JsonDeserializationContext p_181683_1_, JsonObject p_181683_2_, String p_181683_3_) {
+            return p_181683_2_.has(p_181683_3_) ? (ItemTransformVec3f) p_181683_1_.deserialize(p_181683_2_.get(p_181683_3_), ItemTransformVec3f.class) : ItemTransformVec3f.DEFAULT;
+        }
+    }
+
     @SideOnly(Side.CLIENT)
-    public static enum TransformType implements net.minecraftforge.common.model.IModelPart
-    {
+    public static enum TransformType implements net.minecraftforge.common.model.IModelPart {
         NONE,
         THIRD_PERSON_LEFT_HAND,
         THIRD_PERSON_RIGHT_HAND,
