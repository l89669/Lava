--- ../src-base/minecraft/net/minecraft/client/renderer/WorldVertexBufferUploader.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/WorldVertexBufferUploader.java
@@ -1,26 +1,23 @@
 package net.minecraft.client.renderer;
 
-import java.nio.ByteBuffer;
-import java.util.List;
 import net.minecraft.client.renderer.vertex.VertexFormat;
 import net.minecraft.client.renderer.vertex.VertexFormatElement;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import java.nio.ByteBuffer;
+import java.util.List;
+
 @SideOnly(Side.CLIENT)
-public class WorldVertexBufferUploader
-{
-    public void draw(BufferBuilder bufferBuilderIn)
-    {
-        if (bufferBuilderIn.getVertexCount() > 0)
-        {
+public class WorldVertexBufferUploader {
+    public void draw(BufferBuilder bufferBuilderIn) {
+        if (bufferBuilderIn.getVertexCount() > 0) {
             VertexFormat vertexformat = bufferBuilderIn.getVertexFormat();
             int i = vertexformat.getNextOffset();
             ByteBuffer bytebuffer = bufferBuilderIn.getByteBuffer();
             List<VertexFormatElement> list = vertexformat.getElements();
 
-            for (int j = 0; j < list.size(); ++j)
-            {
+            for (int j = 0; j < list.size(); ++j) {
                 VertexFormatElement vertexformatelement = list.get(j);
                 VertexFormatElement.EnumUsage vertexformatelement$enumusage = vertexformatelement.getUsage();
                 int k = vertexformatelement.getType().getGlConstant();
@@ -34,8 +31,7 @@
             GlStateManager.glDrawArrays(bufferBuilderIn.getDrawMode(), 0, bufferBuilderIn.getVertexCount());
             int i1 = 0;
 
-            for (int j1 = list.size(); i1 < j1; ++i1)
-            {
+            for (int j1 = list.size(); i1 < j1; ++i1) {
                 VertexFormatElement vertexformatelement1 = list.get(i1);
                 VertexFormatElement.EnumUsage vertexformatelement$enumusage1 = vertexformatelement1.getUsage();
                 int k1 = vertexformatelement1.getIndex();
