--- ../src-base/minecraft/net/minecraft/client/renderer/entity/RenderWolf.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/entity/RenderWolf.java
@@ -9,27 +9,22 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public class RenderWolf extends RenderLiving<EntityWolf>
-{
+public class RenderWolf extends RenderLiving<EntityWolf> {
     private static final ResourceLocation WOLF_TEXTURES = new ResourceLocation("textures/entity/wolf/wolf.png");
     private static final ResourceLocation TAMED_WOLF_TEXTURES = new ResourceLocation("textures/entity/wolf/wolf_tame.png");
     private static final ResourceLocation ANRGY_WOLF_TEXTURES = new ResourceLocation("textures/entity/wolf/wolf_angry.png");
 
-    public RenderWolf(RenderManager p_i47187_1_)
-    {
+    public RenderWolf(RenderManager p_i47187_1_) {
         super(p_i47187_1_, new ModelWolf(), 0.5F);
         this.addLayer(new LayerWolfCollar(this));
     }
 
-    protected float handleRotationFloat(EntityWolf livingBase, float partialTicks)
-    {
+    protected float handleRotationFloat(EntityWolf livingBase, float partialTicks) {
         return livingBase.getTailRotation();
     }
 
-    public void doRender(EntityWolf entity, double x, double y, double z, float entityYaw, float partialTicks)
-    {
-        if (entity.isWolfWet())
-        {
+    public void doRender(EntityWolf entity, double x, double y, double z, float entityYaw, float partialTicks) {
+        if (entity.isWolfWet()) {
             float f = entity.getBrightness() * entity.getShadingWhileWet(partialTicks);
             GlStateManager.color(f, f, f);
         }
@@ -37,14 +32,10 @@
         super.doRender(entity, x, y, z, entityYaw, partialTicks);
     }
 
-    protected ResourceLocation getEntityTexture(EntityWolf entity)
-    {
-        if (entity.isTamed())
-        {
+    protected ResourceLocation getEntityTexture(EntityWolf entity) {
+        if (entity.isTamed()) {
             return TAMED_WOLF_TEXTURES;
-        }
-        else
-        {
+        } else {
             return entity.isAngry() ? ANRGY_WOLF_TEXTURES : WOLF_TEXTURES;
         }
     }
