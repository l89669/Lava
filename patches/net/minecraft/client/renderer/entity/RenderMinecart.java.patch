--- ../src-base/minecraft/net/minecraft/client/renderer/entity/RenderMinecart.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/entity/RenderMinecart.java
@@ -15,46 +15,40 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public class RenderMinecart<T extends EntityMinecart> extends Render<T>
-{
+public class RenderMinecart<T extends EntityMinecart> extends Render<T> {
     private static final ResourceLocation MINECART_TEXTURES = new ResourceLocation("textures/entity/minecart.png");
     protected ModelBase modelMinecart = new ModelMinecart();
 
-    public RenderMinecart(RenderManager renderManagerIn)
-    {
+    public RenderMinecart(RenderManager renderManagerIn) {
         super(renderManagerIn);
         this.shadowSize = 0.5F;
     }
 
-    public void doRender(T entity, double x, double y, double z, float entityYaw, float partialTicks)
-    {
+    public void doRender(T entity, double x, double y, double z, float entityYaw, float partialTicks) {
         GlStateManager.pushMatrix();
         this.bindEntityTexture(entity);
-        long i = (long)entity.getEntityId() * 493286711L;
+        long i = (long) entity.getEntityId() * 493286711L;
         i = i * i * 4392167121L + i * 98761L;
-        float f = (((float)(i >> 16 & 7L) + 0.5F) / 8.0F - 0.5F) * 0.004F;
-        float f1 = (((float)(i >> 20 & 7L) + 0.5F) / 8.0F - 0.5F) * 0.004F;
-        float f2 = (((float)(i >> 24 & 7L) + 0.5F) / 8.0F - 0.5F) * 0.004F;
+        float f = (((float) (i >> 16 & 7L) + 0.5F) / 8.0F - 0.5F) * 0.004F;
+        float f1 = (((float) (i >> 20 & 7L) + 0.5F) / 8.0F - 0.5F) * 0.004F;
+        float f2 = (((float) (i >> 24 & 7L) + 0.5F) / 8.0F - 0.5F) * 0.004F;
         GlStateManager.translate(f, f1, f2);
-        double d0 = entity.lastTickPosX + (entity.posX - entity.lastTickPosX) * (double)partialTicks;
-        double d1 = entity.lastTickPosY + (entity.posY - entity.lastTickPosY) * (double)partialTicks;
-        double d2 = entity.lastTickPosZ + (entity.posZ - entity.lastTickPosZ) * (double)partialTicks;
+        double d0 = entity.lastTickPosX + (entity.posX - entity.lastTickPosX) * (double) partialTicks;
+        double d1 = entity.lastTickPosY + (entity.posY - entity.lastTickPosY) * (double) partialTicks;
+        double d2 = entity.lastTickPosZ + (entity.posZ - entity.lastTickPosZ) * (double) partialTicks;
         double d3 = 0.30000001192092896D;
         Vec3d vec3d = entity.getPos(d0, d1, d2);
         float f3 = entity.prevRotationPitch + (entity.rotationPitch - entity.prevRotationPitch) * partialTicks;
 
-        if (vec3d != null)
-        {
+        if (vec3d != null) {
             Vec3d vec3d1 = entity.getPosOffset(d0, d1, d2, 0.30000001192092896D);
             Vec3d vec3d2 = entity.getPosOffset(d0, d1, d2, -0.30000001192092896D);
 
-            if (vec3d1 == null)
-            {
+            if (vec3d1 == null) {
                 vec3d1 = vec3d;
             }
 
-            if (vec3d2 == null)
-            {
+            if (vec3d2 == null) {
                 vec3d2 = vec3d;
             }
 
@@ -63,47 +57,42 @@
             z += vec3d.z - d2;
             Vec3d vec3d3 = vec3d2.addVector(-vec3d1.x, -vec3d1.y, -vec3d1.z);
 
-            if (vec3d3.lengthVector() != 0.0D)
-            {
+            if (vec3d3.lengthVector() != 0.0D) {
                 vec3d3 = vec3d3.normalize();
-                entityYaw = (float)(Math.atan2(vec3d3.z, vec3d3.x) * 180.0D / Math.PI);
-                f3 = (float)(Math.atan(vec3d3.y) * 73.0D);
+                entityYaw = (float) (Math.atan2(vec3d3.z, vec3d3.x) * 180.0D / Math.PI);
+                f3 = (float) (Math.atan(vec3d3.y) * 73.0D);
             }
         }
 
-        GlStateManager.translate((float)x, (float)y + 0.375F, (float)z);
+        GlStateManager.translate((float) x, (float) y + 0.375F, (float) z);
         GlStateManager.rotate(180.0F - entityYaw, 0.0F, 1.0F, 0.0F);
         GlStateManager.rotate(-f3, 0.0F, 0.0F, 1.0F);
-        float f5 = (float)entity.getRollingAmplitude() - partialTicks;
+        float f5 = (float) entity.getRollingAmplitude() - partialTicks;
         float f6 = entity.getDamage() - partialTicks;
 
-        if (f6 < 0.0F)
-        {
+        if (f6 < 0.0F) {
             f6 = 0.0F;
         }
 
-        if (f5 > 0.0F)
-        {
-            GlStateManager.rotate(MathHelper.sin(f5) * f5 * f6 / 10.0F * (float)entity.getRollingDirection(), 1.0F, 0.0F, 0.0F);
+        if (f5 > 0.0F) {
+            GlStateManager.rotate(MathHelper.sin(f5) * f5 * f6 / 10.0F * (float) entity.getRollingDirection(), 1.0F, 0.0F, 0.0F);
         }
 
         int j = entity.getDisplayTileOffset();
 
-        if (this.renderOutlines)
-        {
+        if (this.renderOutlines) {
             GlStateManager.enableColorMaterial();
             GlStateManager.enableOutlineMode(this.getTeamColor(entity));
         }
 
         IBlockState iblockstate = entity.getDisplayTile();
 
-        if (iblockstate.getRenderType() != EnumBlockRenderType.INVISIBLE)
-        {
+        if (iblockstate.getRenderType() != EnumBlockRenderType.INVISIBLE) {
             GlStateManager.pushMatrix();
             this.bindTexture(TextureMap.LOCATION_BLOCKS_TEXTURE);
             float f4 = 0.75F;
             GlStateManager.scale(0.75F, 0.75F, 0.75F);
-            GlStateManager.translate(-0.5F, (float)(j - 8) / 16.0F, 0.5F);
+            GlStateManager.translate(-0.5F, (float) (j - 8) / 16.0F, 0.5F);
             this.renderCartContents(entity, partialTicks, iblockstate);
             GlStateManager.popMatrix();
             GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
@@ -114,8 +103,7 @@
         this.modelMinecart.render(entity, 0.0F, 0.0F, -0.1F, 0.0F, 0.0F, 0.0625F);
         GlStateManager.popMatrix();
 
-        if (this.renderOutlines)
-        {
+        if (this.renderOutlines) {
             GlStateManager.disableOutlineMode();
             GlStateManager.disableColorMaterial();
         }
@@ -123,13 +111,11 @@
         super.doRender(entity, x, y, z, entityYaw, partialTicks);
     }
 
-    protected ResourceLocation getEntityTexture(T entity)
-    {
+    protected ResourceLocation getEntityTexture(T entity) {
         return MINECART_TEXTURES;
     }
 
-    protected void renderCartContents(T p_188319_1_, float partialTicks, IBlockState p_188319_3_)
-    {
+    protected void renderCartContents(T p_188319_1_, float partialTicks, IBlockState p_188319_3_) {
         GlStateManager.pushMatrix();
         Minecraft.getMinecraft().getBlockRendererDispatcher().renderBlockBrightness(p_188319_3_, p_188319_1_.getBrightness());
         GlStateManager.popMatrix();
