--- ../src-base/minecraft/net/minecraft/client/renderer/entity/RenderArrow.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/entity/RenderArrow.java
@@ -10,20 +10,17 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public abstract class RenderArrow<T extends EntityArrow> extends Render<T>
-{
-    public RenderArrow(RenderManager renderManagerIn)
-    {
+public abstract class RenderArrow<T extends EntityArrow> extends Render<T> {
+    public RenderArrow(RenderManager renderManagerIn) {
         super(renderManagerIn);
     }
 
-    public void doRender(T entity, double x, double y, double z, float entityYaw, float partialTicks)
-    {
+    public void doRender(T entity, double x, double y, double z, float entityYaw, float partialTicks) {
         this.bindEntityTexture(entity);
         GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
         GlStateManager.pushMatrix();
         GlStateManager.disableLighting();
-        GlStateManager.translate((float)x, (float)y, (float)z);
+        GlStateManager.translate((float) x, (float) y, (float) z);
         GlStateManager.rotate(entity.prevRotationYaw + (entity.rotationYaw - entity.prevRotationYaw) * partialTicks - 90.0F, 0.0F, 1.0F, 0.0F);
         GlStateManager.rotate(entity.prevRotationPitch + (entity.rotationPitch - entity.prevRotationPitch) * partialTicks, 0.0F, 0.0F, 1.0F);
         Tessellator tessellator = Tessellator.getInstance();
@@ -39,10 +36,9 @@
         float f7 = 0.3125F;
         float f8 = 0.05625F;
         GlStateManager.enableRescaleNormal();
-        float f9 = (float)entity.arrowShake - partialTicks;
+        float f9 = (float) entity.arrowShake - partialTicks;
 
-        if (f9 > 0.0F)
-        {
+        if (f9 > 0.0F) {
             float f10 = -MathHelper.sin(f9 * 3.0F) * f9;
             GlStateManager.rotate(f10, 0.0F, 0.0F, 1.0F);
         }
@@ -51,8 +47,7 @@
         GlStateManager.scale(0.05625F, 0.05625F, 0.05625F);
         GlStateManager.translate(-4.0F, 0.0F, 0.0F);
 
-        if (this.renderOutlines)
-        {
+        if (this.renderOutlines) {
             GlStateManager.enableColorMaterial();
             GlStateManager.enableOutlineMode(this.getTeamColor(entity));
         }
@@ -72,8 +67,7 @@
         bufferbuilder.pos(-7.0D, -2.0D, -2.0D).tex(0.0D, 0.3125D).endVertex();
         tessellator.draw();
 
-        for (int j = 0; j < 4; ++j)
-        {
+        for (int j = 0; j < 4; ++j) {
             GlStateManager.rotate(90.0F, 1.0F, 0.0F, 0.0F);
             GlStateManager.glNormal3f(0.0F, 0.0F, 0.05625F);
             bufferbuilder.begin(7, DefaultVertexFormats.POSITION_TEX);
@@ -84,8 +78,7 @@
             tessellator.draw();
         }
 
-        if (this.renderOutlines)
-        {
+        if (this.renderOutlines) {
             GlStateManager.disableOutlineMode();
             GlStateManager.disableColorMaterial();
         }
