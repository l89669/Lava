--- ../src-base/minecraft/net/minecraft/client/renderer/entity/layers/LayerWitherAura.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/entity/layers/LayerWitherAura.java
@@ -11,26 +11,22 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public class LayerWitherAura implements LayerRenderer<EntityWither>
-{
+public class LayerWitherAura implements LayerRenderer<EntityWither> {
     private static final ResourceLocation WITHER_ARMOR = new ResourceLocation("textures/entity/wither/wither_armor.png");
     private final RenderWither witherRenderer;
     private final ModelWither witherModel = new ModelWither(0.5F);
 
-    public LayerWitherAura(RenderWither witherRendererIn)
-    {
+    public LayerWitherAura(RenderWither witherRendererIn) {
         this.witherRenderer = witherRendererIn;
     }
 
-    public void doRenderLayer(EntityWither entitylivingbaseIn, float limbSwing, float limbSwingAmount, float partialTicks, float ageInTicks, float netHeadYaw, float headPitch, float scale)
-    {
-        if (entitylivingbaseIn.isArmored())
-        {
+    public void doRenderLayer(EntityWither entitylivingbaseIn, float limbSwing, float limbSwingAmount, float partialTicks, float ageInTicks, float netHeadYaw, float headPitch, float scale) {
+        if (entitylivingbaseIn.isArmored()) {
             GlStateManager.depthMask(!entitylivingbaseIn.isInvisible());
             this.witherRenderer.bindTexture(WITHER_ARMOR);
             GlStateManager.matrixMode(5890);
             GlStateManager.loadIdentity();
-            float f = (float)entitylivingbaseIn.ticksExisted + partialTicks;
+            float f = (float) entitylivingbaseIn.ticksExisted + partialTicks;
             float f1 = MathHelper.cos(f * 0.02F) * 3.0F;
             float f2 = f * 0.01F;
             GlStateManager.translate(f1, f2, 0.0F);
@@ -53,8 +49,7 @@
         }
     }
 
-    public boolean shouldCombineTextures()
-    {
+    public boolean shouldCombineTextures() {
         return false;
     }
 }
