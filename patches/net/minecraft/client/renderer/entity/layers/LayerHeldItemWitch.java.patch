--- ../src-base/minecraft/net/minecraft/client/renderer/entity/layers/LayerHeldItemWitch.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/entity/layers/LayerHeldItemWitch.java
@@ -6,7 +6,6 @@
 import net.minecraft.client.renderer.block.model.ItemCameraTransforms;
 import net.minecraft.client.renderer.entity.RenderWitch;
 import net.minecraft.entity.monster.EntityWitch;
-import net.minecraft.init.Items;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
 import net.minecraft.util.EnumBlockRenderType;
@@ -14,26 +13,21 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public class LayerHeldItemWitch implements LayerRenderer<EntityWitch>
-{
+public class LayerHeldItemWitch implements LayerRenderer<EntityWitch> {
     private final RenderWitch witchRenderer;
 
-    public LayerHeldItemWitch(RenderWitch witchRendererIn)
-    {
+    public LayerHeldItemWitch(RenderWitch witchRendererIn) {
         this.witchRenderer = witchRendererIn;
     }
 
-    public void doRenderLayer(EntityWitch entitylivingbaseIn, float limbSwing, float limbSwingAmount, float partialTicks, float ageInTicks, float netHeadYaw, float headPitch, float scale)
-    {
+    public void doRenderLayer(EntityWitch entitylivingbaseIn, float limbSwing, float limbSwingAmount, float partialTicks, float ageInTicks, float netHeadYaw, float headPitch, float scale) {
         ItemStack itemstack = entitylivingbaseIn.getHeldItemMainhand();
 
-        if (!itemstack.isEmpty())
-        {
+        if (!itemstack.isEmpty()) {
             GlStateManager.color(1.0F, 1.0F, 1.0F);
             GlStateManager.pushMatrix();
 
-            if (this.witchRenderer.getMainModel().isChild)
-            {
+            if (this.witchRenderer.getMainModel().isChild) {
                 GlStateManager.translate(0.0F, 0.625F, 0.0F);
                 GlStateManager.rotate(-20.0F, -1.0F, 0.0F, 0.0F);
                 float f = 0.5F;
@@ -45,27 +39,21 @@
             Item item = itemstack.getItem();
             Minecraft minecraft = Minecraft.getMinecraft();
 
-            if (Block.getBlockFromItem(item).getDefaultState().getRenderType() == EnumBlockRenderType.ENTITYBLOCK_ANIMATED)
-            {
+            if (Block.getBlockFromItem(item).getDefaultState().getRenderType() == EnumBlockRenderType.ENTITYBLOCK_ANIMATED) {
                 GlStateManager.translate(0.0F, 0.0625F, -0.25F);
                 GlStateManager.rotate(30.0F, 1.0F, 0.0F, 0.0F);
                 GlStateManager.rotate(-5.0F, 0.0F, 1.0F, 0.0F);
                 float f1 = 0.375F;
                 GlStateManager.scale(0.375F, -0.375F, 0.375F);
-            }
-            else if (item instanceof net.minecraft.item.ItemBow)
-            {
+            } else if (item instanceof net.minecraft.item.ItemBow) {
                 GlStateManager.translate(0.0F, 0.125F, -0.125F);
                 GlStateManager.rotate(-45.0F, 0.0F, 1.0F, 0.0F);
                 float f2 = 0.625F;
                 GlStateManager.scale(0.625F, -0.625F, 0.625F);
                 GlStateManager.rotate(-100.0F, 1.0F, 0.0F, 0.0F);
                 GlStateManager.rotate(-20.0F, 0.0F, 1.0F, 0.0F);
-            }
-            else if (item.isFull3D())
-            {
-                if (item.shouldRotateAroundWhenRendering())
-                {
+            } else if (item.isFull3D()) {
+                if (item.shouldRotateAroundWhenRendering()) {
                     GlStateManager.rotate(180.0F, 0.0F, 0.0F, 1.0F);
                     GlStateManager.translate(0.0F, -0.0625F, 0.0F);
                 }
@@ -76,9 +64,7 @@
                 GlStateManager.scale(0.625F, -0.625F, 0.625F);
                 GlStateManager.rotate(0.0F, 1.0F, 0.0F, 0.0F);
                 GlStateManager.rotate(0.0F, 0.0F, 1.0F, 0.0F);
-            }
-            else
-            {
+            } else {
                 GlStateManager.translate(0.1875F, 0.1875F, 0.0F);
                 float f4 = 0.875F;
                 GlStateManager.scale(0.875F, 0.875F, 0.875F);
@@ -94,8 +80,7 @@
         }
     }
 
-    public boolean shouldCombineTextures()
-    {
+    public boolean shouldCombineTextures() {
         return false;
     }
 }
