--- ../src-base/minecraft/net/minecraft/client/renderer/entity/RenderAbstractHorse.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/entity/RenderAbstractHorse.java
@@ -1,48 +1,39 @@
 package net.minecraft.client.renderer.entity;
 
 import com.google.common.collect.Maps;
-import java.util.Map;
 import net.minecraft.client.model.ModelHorse;
 import net.minecraft.client.renderer.GlStateManager;
-import net.minecraft.entity.passive.AbstractHorse;
-import net.minecraft.entity.passive.EntityDonkey;
-import net.minecraft.entity.passive.EntityMule;
-import net.minecraft.entity.passive.EntitySkeletonHorse;
-import net.minecraft.entity.passive.EntityZombieHorse;
+import net.minecraft.entity.passive.*;
 import net.minecraft.util.ResourceLocation;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import java.util.Map;
+
 @SideOnly(Side.CLIENT)
-public class RenderAbstractHorse extends RenderLiving<AbstractHorse>
-{
-    private static final Map < Class<?>, ResourceLocation > MAP = Maps. < Class<?>, ResourceLocation > newHashMap();
+public class RenderAbstractHorse extends RenderLiving<AbstractHorse> {
+    private static final Map<Class<?>, ResourceLocation> MAP = Maps.<Class<?>, ResourceLocation>newHashMap();
     private final float scale;
 
-    public RenderAbstractHorse(RenderManager p_i47212_1_)
-    {
+    public RenderAbstractHorse(RenderManager p_i47212_1_) {
         this(p_i47212_1_, 1.0F);
     }
 
-    public RenderAbstractHorse(RenderManager p_i47213_1_, float p_i47213_2_)
-    {
+    public RenderAbstractHorse(RenderManager p_i47213_1_, float p_i47213_2_) {
         super(p_i47213_1_, new ModelHorse(), 0.75F);
         this.scale = p_i47213_2_;
     }
 
-    protected void preRenderCallback(AbstractHorse entitylivingbaseIn, float partialTickTime)
-    {
+    protected void preRenderCallback(AbstractHorse entitylivingbaseIn, float partialTickTime) {
         GlStateManager.scale(this.scale, this.scale, this.scale);
         super.preRenderCallback(entitylivingbaseIn, partialTickTime);
     }
 
-    protected ResourceLocation getEntityTexture(AbstractHorse entity)
-    {
+    protected ResourceLocation getEntityTexture(AbstractHorse entity) {
         return MAP.get(entity.getClass());
     }
 
-    static
-    {
+    static {
         MAP.put(EntityDonkey.class, new ResourceLocation("textures/entity/horse/donkey.png"));
         MAP.put(EntityMule.class, new ResourceLocation("textures/entity/horse/mule.png"));
         MAP.put(EntityZombieHorse.class, new ResourceLocation("textures/entity/horse/horse_zombie.png"));
