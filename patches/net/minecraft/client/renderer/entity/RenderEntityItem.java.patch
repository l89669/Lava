--- ../src-base/minecraft/net/minecraft/client/renderer/entity/RenderEntityItem.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/entity/RenderEntityItem.java
@@ -1,6 +1,5 @@
 package net.minecraft.client.renderer.entity;
 
-import java.util.Random;
 import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.client.renderer.RenderHelper;
 import net.minecraft.client.renderer.RenderItem;
@@ -16,41 +15,36 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import java.util.Random;
+
 @SideOnly(Side.CLIENT)
-public class RenderEntityItem extends Render<EntityItem>
-{
+public class RenderEntityItem extends Render<EntityItem> {
     private final RenderItem itemRenderer;
     private final Random random = new Random();
 
-    public RenderEntityItem(RenderManager renderManagerIn, RenderItem p_i46167_2_)
-    {
+    public RenderEntityItem(RenderManager renderManagerIn, RenderItem p_i46167_2_) {
         super(renderManagerIn);
         this.itemRenderer = p_i46167_2_;
         this.shadowSize = 0.15F;
         this.shadowOpaque = 0.75F;
     }
 
-    private int transformModelCount(EntityItem itemIn, double p_177077_2_, double p_177077_4_, double p_177077_6_, float p_177077_8_, IBakedModel p_177077_9_)
-    {
+    private int transformModelCount(EntityItem itemIn, double p_177077_2_, double p_177077_4_, double p_177077_6_, float p_177077_8_, IBakedModel p_177077_9_) {
         ItemStack itemstack = itemIn.getItem();
         Item item = itemstack.getItem();
 
-        if (item == null)
-        {
+        if (item == null) {
             return 0;
-        }
-        else
-        {
+        } else {
             boolean flag = p_177077_9_.isGui3d();
             int i = this.getModelCount(itemstack);
             float f = 0.25F;
-            float f1 = shouldBob() ? MathHelper.sin(((float)itemIn.getAge() + p_177077_8_) / 10.0F + itemIn.hoverStart) * 0.1F + 0.1F : 0;
+            float f1 = shouldBob() ? MathHelper.sin(((float) itemIn.getAge() + p_177077_8_) / 10.0F + itemIn.hoverStart) * 0.1F + 0.1F : 0;
             float f2 = p_177077_9_.getItemCameraTransforms().getTransform(ItemCameraTransforms.TransformType.GROUND).scale.y;
-            GlStateManager.translate((float)p_177077_2_, (float)p_177077_4_ + f1 + 0.25F * f2, (float)p_177077_6_);
+            GlStateManager.translate((float) p_177077_2_, (float) p_177077_4_ + f1 + 0.25F * f2, (float) p_177077_6_);
 
-            if (flag || this.renderManager.options != null)
-            {
-                float f3 = (((float)itemIn.getAge() + p_177077_8_) / 20.0F + itemIn.hoverStart) * (180F / (float)Math.PI);
+            if (flag || this.renderManager.options != null) {
+                float f3 = (((float) itemIn.getAge() + p_177077_8_) / 20.0F + itemIn.hoverStart) * (180F / (float) Math.PI);
                 GlStateManager.rotate(f3, 0.0F, 1.0F, 0.0F);
             }
 
@@ -59,39 +53,29 @@
         }
     }
 
-    protected int getModelCount(ItemStack stack)
-    {
+    protected int getModelCount(ItemStack stack) {
         int i = 1;
 
-        if (stack.getCount() > 48)
-        {
+        if (stack.getCount() > 48) {
             i = 5;
-        }
-        else if (stack.getCount() > 32)
-        {
+        } else if (stack.getCount() > 32) {
             i = 4;
-        }
-        else if (stack.getCount() > 16)
-        {
+        } else if (stack.getCount() > 16) {
             i = 3;
-        }
-        else if (stack.getCount() > 1)
-        {
+        } else if (stack.getCount() > 1) {
             i = 2;
         }
 
         return i;
     }
 
-    public void doRender(EntityItem entity, double x, double y, double z, float entityYaw, float partialTicks)
-    {
+    public void doRender(EntityItem entity, double x, double y, double z, float entityYaw, float partialTicks) {
         ItemStack itemstack = entity.getItem();
         int i = itemstack.isEmpty() ? 187 : Item.getIdFromItem(itemstack.getItem()) + itemstack.getMetadata();
-        this.random.setSeed((long)i);
+        this.random.setSeed((long) i);
         boolean flag = false;
 
-        if (this.bindEntityTexture(entity))
-        {
+        if (this.bindEntityTexture(entity)) {
             this.renderManager.renderEngine.getTexture(this.getEntityTexture(entity)).setBlurMipmap(false, false);
             flag = true;
         }
@@ -102,32 +86,27 @@
         RenderHelper.enableStandardItemLighting();
         GlStateManager.tryBlendFuncSeparate(GlStateManager.SourceFactor.SRC_ALPHA, GlStateManager.DestFactor.ONE_MINUS_SRC_ALPHA, GlStateManager.SourceFactor.ONE, GlStateManager.DestFactor.ZERO);
         GlStateManager.pushMatrix();
-        IBakedModel ibakedmodel = this.itemRenderer.getItemModelWithOverrides(itemstack, entity.world, (EntityLivingBase)null);
+        IBakedModel ibakedmodel = this.itemRenderer.getItemModelWithOverrides(itemstack, entity.world, (EntityLivingBase) null);
         int j = this.transformModelCount(entity, x, y, z, partialTicks, ibakedmodel);
         boolean flag1 = ibakedmodel.isGui3d();
 
-        if (!flag1)
-        {
-            float f3 = -0.0F * (float)(j - 1) * 0.5F;
-            float f4 = -0.0F * (float)(j - 1) * 0.5F;
-            float f5 = -0.09375F * (float)(j - 1) * 0.5F;
+        if (!flag1) {
+            float f3 = -0.0F * (float) (j - 1) * 0.5F;
+            float f4 = -0.0F * (float) (j - 1) * 0.5F;
+            float f5 = -0.09375F * (float) (j - 1) * 0.5F;
             GlStateManager.translate(f3, f4, f5);
         }
 
-        if (this.renderOutlines)
-        {
+        if (this.renderOutlines) {
             GlStateManager.enableColorMaterial();
             GlStateManager.enableOutlineMode(this.getTeamColor(entity));
         }
 
-        for (int k = 0; k < j; ++k)
-        {
-            if (flag1)
-            {
+        for (int k = 0; k < j; ++k) {
+            if (flag1) {
                 GlStateManager.pushMatrix();
 
-                if (k > 0)
-                {
+                if (k > 0) {
                     float f7 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.15F;
                     float f9 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.15F;
                     float f6 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.15F;
@@ -137,13 +116,10 @@
                 IBakedModel transformedModel = net.minecraftforge.client.ForgeHooksClient.handleCameraTransforms(ibakedmodel, ItemCameraTransforms.TransformType.GROUND, false);
                 this.itemRenderer.renderItem(itemstack, transformedModel);
                 GlStateManager.popMatrix();
-            }
-            else
-            {
+            } else {
                 GlStateManager.pushMatrix();
 
-                if (k > 0)
-                {
+                if (k > 0) {
                     float f8 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.15F * 0.5F;
                     float f10 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.15F * 0.5F;
                     GlStateManager.translate(f8, f10, 0.0F);
@@ -156,8 +132,7 @@
             }
         }
 
-        if (this.renderOutlines)
-        {
+        if (this.renderOutlines) {
             GlStateManager.disableOutlineMode();
             GlStateManager.disableColorMaterial();
         }
@@ -167,16 +142,14 @@
         GlStateManager.disableBlend();
         this.bindEntityTexture(entity);
 
-        if (flag)
-        {
+        if (flag) {
             this.renderManager.renderEngine.getTexture(this.getEntityTexture(entity)).restoreLastBlurMipmap();
         }
 
         super.doRender(entity, x, y, z, entityYaw, partialTicks);
     }
 
-    protected ResourceLocation getEntityTexture(EntityItem entity)
-    {
+    protected ResourceLocation getEntityTexture(EntityItem entity) {
         return TextureMap.LOCATION_BLOCKS_TEXTURE;
     }
 
@@ -184,19 +157,19 @@
 
     /**
      * Items should spread out when rendered in 3d?
+     *
      * @return
      */
-    public boolean shouldSpreadItems()
-    {
+    public boolean shouldSpreadItems() {
         return true;
     }
 
     /**
      * Items should have a bob effect
+     *
      * @return
      */
-    public boolean shouldBob()
-    {
+    public boolean shouldBob() {
         return true;
     }
     /*==================================== FORGE END =============================================*/
