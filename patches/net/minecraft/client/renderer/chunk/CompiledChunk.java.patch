--- ../src-base/minecraft/net/minecraft/client/renderer/chunk/CompiledChunk.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/chunk/CompiledChunk.java
@@ -1,7 +1,6 @@
 package net.minecraft.client.renderer.chunk;
 
 import com.google.common.collect.Lists;
-import java.util.List;
 import net.minecraft.client.renderer.BufferBuilder;
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.util.BlockRenderLayer;
@@ -9,21 +8,20 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import java.util.List;
+
 @SideOnly(Side.CLIENT)
-public class CompiledChunk
-{
-    public static final CompiledChunk DUMMY = new CompiledChunk()
-    {
-        protected void setLayerUsed(BlockRenderLayer layer)
-        {
+public class CompiledChunk {
+    public static final CompiledChunk DUMMY = new CompiledChunk() {
+        protected void setLayerUsed(BlockRenderLayer layer) {
             throw new UnsupportedOperationException();
         }
-        public void setLayerStarted(BlockRenderLayer layer)
-        {
+
+        public void setLayerStarted(BlockRenderLayer layer) {
             throw new UnsupportedOperationException();
         }
-        public boolean isVisible(EnumFacing facing, EnumFacing facing2)
-        {
+
+        public boolean isVisible(EnumFacing facing, EnumFacing facing2) {
             return false;
         }
     };
@@ -34,59 +32,48 @@
     private SetVisibility setVisibility = new SetVisibility();
     private BufferBuilder.State state;
 
-    public boolean isEmpty()
-    {
+    public boolean isEmpty() {
         return this.empty;
     }
 
-    protected void setLayerUsed(BlockRenderLayer layer)
-    {
+    protected void setLayerUsed(BlockRenderLayer layer) {
         this.empty = false;
         this.layersUsed[layer.ordinal()] = true;
     }
 
-    public boolean isLayerEmpty(BlockRenderLayer layer)
-    {
+    public boolean isLayerEmpty(BlockRenderLayer layer) {
         return !this.layersUsed[layer.ordinal()];
     }
 
-    public void setLayerStarted(BlockRenderLayer layer)
-    {
+    public void setLayerStarted(BlockRenderLayer layer) {
         this.layersStarted[layer.ordinal()] = true;
     }
 
-    public boolean isLayerStarted(BlockRenderLayer layer)
-    {
+    public boolean isLayerStarted(BlockRenderLayer layer) {
         return this.layersStarted[layer.ordinal()];
     }
 
-    public List<TileEntity> getTileEntities()
-    {
+    public List<TileEntity> getTileEntities() {
         return this.tileEntities;
     }
 
-    public void addTileEntity(TileEntity tileEntityIn)
-    {
+    public void addTileEntity(TileEntity tileEntityIn) {
         this.tileEntities.add(tileEntityIn);
     }
 
-    public boolean isVisible(EnumFacing facing, EnumFacing facing2)
-    {
+    public boolean isVisible(EnumFacing facing, EnumFacing facing2) {
         return this.setVisibility.isVisible(facing, facing2);
     }
 
-    public void setVisibility(SetVisibility visibility)
-    {
+    public void setVisibility(SetVisibility visibility) {
         this.setVisibility = visibility;
     }
 
-    public BufferBuilder.State getState()
-    {
+    public BufferBuilder.State getState() {
         return this.state;
     }
 
-    public void setState(BufferBuilder.State stateIn)
-    {
+    public void setState(BufferBuilder.State stateIn) {
         this.state = stateIn;
     }
 }
