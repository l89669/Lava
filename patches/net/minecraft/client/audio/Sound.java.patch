--- ../src-base/minecraft/net/minecraft/client/audio/Sound.java
+++ ../src-work/minecraft/net/minecraft/client/audio/Sound.java
@@ -5,8 +5,7 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public class Sound implements ISoundEventAccessor<Sound>
-{
+public class Sound implements ISoundEventAccessor<Sound> {
     private final ResourceLocation name;
     private final float volume;
     private final float pitch;
@@ -14,8 +13,7 @@
     private final Sound.Type type;
     private final boolean streaming;
 
-    public Sound(String nameIn, float volumeIn, float pitchIn, int weightIn, Sound.Type typeIn, boolean p_i46526_6_)
-    {
+    public Sound(String nameIn, float volumeIn, float pitchIn, int weightIn, Sound.Type typeIn, boolean p_i46526_6_) {
         this.name = new ResourceLocation(nameIn);
         this.volume = volumeIn;
         this.pitch = pitchIn;
@@ -24,65 +22,52 @@
         this.streaming = p_i46526_6_;
     }
 
-    public ResourceLocation getSoundLocation()
-    {
+    public ResourceLocation getSoundLocation() {
         return this.name;
     }
 
-    public ResourceLocation getSoundAsOggLocation()
-    {
+    public ResourceLocation getSoundAsOggLocation() {
         return new ResourceLocation(this.name.getResourceDomain(), "sounds/" + this.name.getResourcePath() + ".ogg");
     }
 
-    public float getVolume()
-    {
+    public float getVolume() {
         return this.volume;
     }
 
-    public float getPitch()
-    {
+    public float getPitch() {
         return this.pitch;
     }
 
-    public int getWeight()
-    {
+    public int getWeight() {
         return this.weight;
     }
 
-    public Sound cloneEntry()
-    {
+    public Sound cloneEntry() {
         return this;
     }
 
-    public Sound.Type getType()
-    {
+    public Sound.Type getType() {
         return this.type;
     }
 
-    public boolean isStreaming()
-    {
+    public boolean isStreaming() {
         return this.streaming;
     }
 
     @SideOnly(Side.CLIENT)
-    public static enum Type
-    {
+    public static enum Type {
         FILE("file"),
         SOUND_EVENT("event");
 
         private final String name;
 
-        private Type(String nameIn)
-        {
+        private Type(String nameIn) {
             this.name = nameIn;
         }
 
-        public static Sound.Type getByName(String nameIn)
-        {
-            for (Sound.Type sound$type : values())
-            {
-                if (sound$type.name.equals(nameIn))
-                {
+        public static Sound.Type getByName(String nameIn) {
+            for (Sound.Type sound$type : values()) {
+                if (sound$type.name.equals(nameIn)) {
                     return sound$type;
                 }
             }
