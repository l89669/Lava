--- ../src-base/minecraft/net/minecraft/client/particle/ParticleFootStep.java
+++ ../src-work/minecraft/net/minecraft/client/particle/ParticleFootStep.java
@@ -14,15 +14,13 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public class ParticleFootStep extends Particle
-{
+public class ParticleFootStep extends Particle {
     private static final ResourceLocation FOOTPRINT_TEXTURE = new ResourceLocation("textures/particle/footprint.png");
     private int footstepAge;
     private final int footstepMaxAge;
     private final TextureManager currentFootSteps;
 
-    protected ParticleFootStep(TextureManager currentFootStepsIn, World worldIn, double xCoordIn, double yCoordIn, double zCoordIn)
-    {
+    protected ParticleFootStep(TextureManager currentFootStepsIn, World worldIn, double xCoordIn, double yCoordIn, double zCoordIn) {
         super(worldIn, xCoordIn, yCoordIn, zCoordIn, 0.0D, 0.0D, 0.0D);
         this.currentFootSteps = currentFootStepsIn;
         this.motionX = 0.0D;
@@ -31,58 +29,51 @@
         this.footstepMaxAge = 200;
     }
 
-    public void renderParticle(BufferBuilder buffer, Entity entityIn, float partialTicks, float rotationX, float rotationZ, float rotationYZ, float rotationXY, float rotationXZ)
-    {
-        float f = ((float)this.footstepAge + partialTicks) / (float)this.footstepMaxAge;
+    public void renderParticle(BufferBuilder buffer, Entity entityIn, float partialTicks, float rotationX, float rotationZ, float rotationYZ, float rotationXY, float rotationXZ) {
+        float f = ((float) this.footstepAge + partialTicks) / (float) this.footstepMaxAge;
         f = f * f;
         float f1 = 2.0F - f * 2.0F;
 
-        if (f1 > 1.0F)
-        {
+        if (f1 > 1.0F) {
             f1 = 1.0F;
         }
 
         f1 = f1 * 0.2F;
         GlStateManager.disableLighting();
         float f2 = 0.125F;
-        float f3 = (float)(this.posX - interpPosX);
-        float f4 = (float)(this.posY - interpPosY);
-        float f5 = (float)(this.posZ - interpPosZ);
+        float f3 = (float) (this.posX - interpPosX);
+        float f4 = (float) (this.posY - interpPosY);
+        float f5 = (float) (this.posZ - interpPosZ);
         float f6 = this.world.getLightBrightness(new BlockPos(this.posX, this.posY, this.posZ));
         this.currentFootSteps.bindTexture(FOOTPRINT_TEXTURE);
         GlStateManager.enableBlend();
         GlStateManager.blendFunc(GlStateManager.SourceFactor.SRC_ALPHA, GlStateManager.DestFactor.ONE_MINUS_SRC_ALPHA);
         buffer.begin(7, DefaultVertexFormats.POSITION_TEX_COLOR);
-        buffer.pos((double)(f3 - 0.125F), (double)f4, (double)(f5 + 0.125F)).tex(0.0D, 1.0D).color(f6, f6, f6, f1).endVertex();
-        buffer.pos((double)(f3 + 0.125F), (double)f4, (double)(f5 + 0.125F)).tex(1.0D, 1.0D).color(f6, f6, f6, f1).endVertex();
-        buffer.pos((double)(f3 + 0.125F), (double)f4, (double)(f5 - 0.125F)).tex(1.0D, 0.0D).color(f6, f6, f6, f1).endVertex();
-        buffer.pos((double)(f3 - 0.125F), (double)f4, (double)(f5 - 0.125F)).tex(0.0D, 0.0D).color(f6, f6, f6, f1).endVertex();
+        buffer.pos((double) (f3 - 0.125F), (double) f4, (double) (f5 + 0.125F)).tex(0.0D, 1.0D).color(f6, f6, f6, f1).endVertex();
+        buffer.pos((double) (f3 + 0.125F), (double) f4, (double) (f5 + 0.125F)).tex(1.0D, 1.0D).color(f6, f6, f6, f1).endVertex();
+        buffer.pos((double) (f3 + 0.125F), (double) f4, (double) (f5 - 0.125F)).tex(1.0D, 0.0D).color(f6, f6, f6, f1).endVertex();
+        buffer.pos((double) (f3 - 0.125F), (double) f4, (double) (f5 - 0.125F)).tex(0.0D, 0.0D).color(f6, f6, f6, f1).endVertex();
         Tessellator.getInstance().draw();
         GlStateManager.disableBlend();
         GlStateManager.enableLighting();
     }
 
-    public void onUpdate()
-    {
+    public void onUpdate() {
         ++this.footstepAge;
 
-        if (this.footstepAge == this.footstepMaxAge)
-        {
+        if (this.footstepAge == this.footstepMaxAge) {
             this.setExpired();
         }
     }
 
-    public int getFXLayer()
-    {
+    public int getFXLayer() {
         return 3;
     }
 
     @SideOnly(Side.CLIENT)
-    public static class Factory implements IParticleFactory
-        {
-            public Particle createParticle(int particleID, World worldIn, double xCoordIn, double yCoordIn, double zCoordIn, double xSpeedIn, double ySpeedIn, double zSpeedIn, int... p_178902_15_)
-            {
-                return new ParticleFootStep(Minecraft.getMinecraft().getTextureManager(), worldIn, xCoordIn, yCoordIn, zCoordIn);
-            }
+    public static class Factory implements IParticleFactory {
+        public Particle createParticle(int particleID, World worldIn, double xCoordIn, double yCoordIn, double zCoordIn, double xSpeedIn, double ySpeedIn, double zSpeedIn, int... p_178902_15_) {
+            return new ParticleFootStep(Minecraft.getMinecraft().getTextureManager(), worldIn, xCoordIn, yCoordIn, zCoordIn);
         }
+    }
 }
