--- ../src-base/minecraft/net/minecraft/client/particle/ParticlePortal.java
+++ ../src-work/minecraft/net/minecraft/client/particle/ParticlePortal.java
@@ -7,15 +7,13 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public class ParticlePortal extends Particle
-{
+public class ParticlePortal extends Particle {
     private final float portalParticleScale;
     private final double portalPosX;
     private final double portalPosY;
     private final double portalPosZ;
 
-    protected ParticlePortal(World worldIn, double xCoordIn, double yCoordIn, double zCoordIn, double xSpeedIn, double ySpeedIn, double zSpeedIn)
-    {
+    protected ParticlePortal(World worldIn, double xCoordIn, double yCoordIn, double zCoordIn, double xSpeedIn, double ySpeedIn, double zSpeedIn) {
         super(worldIn, xCoordIn, yCoordIn, zCoordIn, xSpeedIn, ySpeedIn, zSpeedIn);
         this.motionX = xSpeedIn;
         this.motionY = ySpeedIn;
@@ -32,19 +30,17 @@
         this.particleRed = f * 0.9F;
         this.particleGreen = f * 0.3F;
         this.particleBlue = f;
-        this.particleMaxAge = (int)(Math.random() * 10.0D) + 40;
-        this.setParticleTextureIndex((int)(Math.random() * 8.0D));
+        this.particleMaxAge = (int) (Math.random() * 10.0D) + 40;
+        this.setParticleTextureIndex((int) (Math.random() * 8.0D));
     }
 
-    public void move(double x, double y, double z)
-    {
+    public void move(double x, double y, double z) {
         this.setBoundingBox(this.getBoundingBox().offset(x, y, z));
         this.resetPositionToBB();
     }
 
-    public void renderParticle(BufferBuilder buffer, Entity entityIn, float partialTicks, float rotationX, float rotationZ, float rotationYZ, float rotationXY, float rotationXZ)
-    {
-        float f = ((float)this.particleAge + partialTicks) / (float)this.particleMaxAge;
+    public void renderParticle(BufferBuilder buffer, Entity entityIn, float partialTicks, float rotationX, float rotationZ, float rotationYZ, float rotationXY, float rotationXZ) {
+        float f = ((float) this.particleAge + partialTicks) / (float) this.particleMaxAge;
         f = 1.0F - f;
         f = f * f;
         f = 1.0F - f;
@@ -52,48 +48,42 @@
         super.renderParticle(buffer, entityIn, partialTicks, rotationX, rotationZ, rotationYZ, rotationXY, rotationXZ);
     }
 
-    public int getBrightnessForRender(float p_189214_1_)
-    {
+    public int getBrightnessForRender(float p_189214_1_) {
         int i = super.getBrightnessForRender(p_189214_1_);
-        float f = (float)this.particleAge / (float)this.particleMaxAge;
+        float f = (float) this.particleAge / (float) this.particleMaxAge;
         f = f * f;
         f = f * f;
         int j = i & 255;
         int k = i >> 16 & 255;
-        k = k + (int)(f * 15.0F * 16.0F);
+        k = k + (int) (f * 15.0F * 16.0F);
 
-        if (k > 240)
-        {
+        if (k > 240) {
             k = 240;
         }
 
         return j | k << 16;
     }
 
-    public void onUpdate()
-    {
+    public void onUpdate() {
         this.prevPosX = this.posX;
         this.prevPosY = this.posY;
         this.prevPosZ = this.posZ;
-        float f = (float)this.particleAge / (float)this.particleMaxAge;
+        float f = (float) this.particleAge / (float) this.particleMaxAge;
         float f1 = -f + f * f * 2.0F;
         float f2 = 1.0F - f1;
-        this.posX = this.portalPosX + this.motionX * (double)f2;
-        this.posY = this.portalPosY + this.motionY * (double)f2 + (double)(1.0F - f);
-        this.posZ = this.portalPosZ + this.motionZ * (double)f2;
+        this.posX = this.portalPosX + this.motionX * (double) f2;
+        this.posY = this.portalPosY + this.motionY * (double) f2 + (double) (1.0F - f);
+        this.posZ = this.portalPosZ + this.motionZ * (double) f2;
 
-        if (this.particleAge++ >= this.particleMaxAge)
-        {
+        if (this.particleAge++ >= this.particleMaxAge) {
             this.setExpired();
         }
     }
 
     @SideOnly(Side.CLIENT)
-    public static class Factory implements IParticleFactory
-        {
-            public Particle createParticle(int particleID, World worldIn, double xCoordIn, double yCoordIn, double zCoordIn, double xSpeedIn, double ySpeedIn, double zSpeedIn, int... p_178902_15_)
-            {
-                return new ParticlePortal(worldIn, xCoordIn, yCoordIn, zCoordIn, xSpeedIn, ySpeedIn, zSpeedIn);
-            }
+    public static class Factory implements IParticleFactory {
+        public Particle createParticle(int particleID, World worldIn, double xCoordIn, double yCoordIn, double zCoordIn, double xSpeedIn, double ySpeedIn, double zSpeedIn, int... p_178902_15_) {
+            return new ParticlePortal(worldIn, xCoordIn, yCoordIn, zCoordIn, xSpeedIn, ySpeedIn, zSpeedIn);
         }
+    }
 }
