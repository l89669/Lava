--- ../src-base/minecraft/net/minecraft/client/particle/ParticleMobAppearance.java
+++ ../src-work/minecraft/net/minecraft/client/particle/ParticleMobAppearance.java
@@ -14,12 +14,10 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public class ParticleMobAppearance extends Particle
-{
+public class ParticleMobAppearance extends Particle {
     private EntityLivingBase entity;
 
-    protected ParticleMobAppearance(World worldIn, double xCoordIn, double yCoordIn, double zCoordIn)
-    {
+    protected ParticleMobAppearance(World worldIn, double xCoordIn, double yCoordIn, double zCoordIn) {
         super(worldIn, xCoordIn, yCoordIn, zCoordIn, 0.0D, 0.0D, 0.0D);
         this.particleRed = 1.0F;
         this.particleGreen = 1.0F;
@@ -31,31 +29,26 @@
         this.particleMaxAge = 30;
     }
 
-    public int getFXLayer()
-    {
+    public int getFXLayer() {
         return 3;
     }
 
-    public void onUpdate()
-    {
+    public void onUpdate() {
         super.onUpdate();
 
-        if (this.entity == null)
-        {
+        if (this.entity == null) {
             EntityElderGuardian entityelderguardian = new EntityElderGuardian(this.world);
             entityelderguardian.setGhost();
             this.entity = entityelderguardian;
         }
     }
 
-    public void renderParticle(BufferBuilder buffer, Entity entityIn, float partialTicks, float rotationX, float rotationZ, float rotationYZ, float rotationXY, float rotationXZ)
-    {
-        if (this.entity != null)
-        {
+    public void renderParticle(BufferBuilder buffer, Entity entityIn, float partialTicks, float rotationX, float rotationZ, float rotationYZ, float rotationXY, float rotationXZ) {
+        if (this.entity != null) {
             RenderManager rendermanager = Minecraft.getMinecraft().getRenderManager();
             rendermanager.setRenderPosition(Particle.interpPosX, Particle.interpPosY, Particle.interpPosZ);
             float f = 0.42553192F;
-            float f1 = ((float)this.particleAge + partialTicks) / (float)this.particleMaxAge;
+            float f1 = ((float) this.particleAge + partialTicks) / (float) this.particleMaxAge;
             GlStateManager.depthMask(true);
             GlStateManager.enableBlend();
             GlStateManager.enableDepth();
@@ -63,7 +56,7 @@
             float f2 = 240.0F;
             OpenGlHelper.setLightmapTextureCoords(OpenGlHelper.lightmapTexUnit, 240.0F, 240.0F);
             GlStateManager.pushMatrix();
-            float f3 = 0.05F + 0.5F * MathHelper.sin(f1 * (float)Math.PI);
+            float f3 = 0.05F + 0.5F * MathHelper.sin(f1 * (float) Math.PI);
             GlStateManager.color(1.0F, 1.0F, 1.0F, f3);
             GlStateManager.translate(0.0F, 1.8F, 0.0F);
             GlStateManager.rotate(180.0F - entityIn.rotationYaw, 0.0F, 1.0F, 0.0F);
@@ -81,11 +74,9 @@
     }
 
     @SideOnly(Side.CLIENT)
-    public static class Factory implements IParticleFactory
-        {
-            public Particle createParticle(int particleID, World worldIn, double xCoordIn, double yCoordIn, double zCoordIn, double xSpeedIn, double ySpeedIn, double zSpeedIn, int... p_178902_15_)
-            {
-                return new ParticleMobAppearance(worldIn, xCoordIn, yCoordIn, zCoordIn);
-            }
+    public static class Factory implements IParticleFactory {
+        public Particle createParticle(int particleID, World worldIn, double xCoordIn, double yCoordIn, double zCoordIn, double xSpeedIn, double ySpeedIn, double zSpeedIn, int... p_178902_15_) {
+            return new ParticleMobAppearance(worldIn, xCoordIn, yCoordIn, zCoordIn);
         }
+    }
 }
