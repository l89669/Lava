--- ../src-base/minecraft/net/minecraft/client/model/ModelDragon.java
+++ ../src-work/minecraft/net/minecraft/client/model/ModelDragon.java
@@ -8,8 +8,7 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public class ModelDragon extends ModelBase
-{
+public class ModelDragon extends ModelBase {
     private final ModelRenderer head;
     private final ModelRenderer spine;
     private final ModelRenderer jaw;
@@ -24,8 +23,7 @@
     private final ModelRenderer wingTip;
     private float partialTicks;
 
-    public ModelDragon(float p_i46360_1_)
-    {
+    public ModelDragon(float p_i46360_1_) {
         this.textureWidth = 256;
         this.textureHeight = 256;
         this.setTextureOffset("body.body", 0, 0);
@@ -103,18 +101,16 @@
         this.rearLegTip.addChild(this.rearFoot);
     }
 
-    public void setLivingAnimations(EntityLivingBase entitylivingbaseIn, float limbSwing, float limbSwingAmount, float partialTickTime)
-    {
+    public void setLivingAnimations(EntityLivingBase entitylivingbaseIn, float limbSwing, float limbSwingAmount, float partialTickTime) {
         this.partialTicks = partialTickTime;
     }
 
-    public void render(Entity entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch, float scale)
-    {
+    public void render(Entity entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch, float scale) {
         GlStateManager.pushMatrix();
-        EntityDragon entitydragon = (EntityDragon)entityIn;
+        EntityDragon entitydragon = (EntityDragon) entityIn;
         float f = entitydragon.prevAnimTime + (entitydragon.animTime - entitydragon.prevAnimTime) * this.partialTicks;
-        this.jaw.rotateAngleX = (float)(Math.sin((double)(f * ((float)Math.PI * 2F))) + 1.0D) * 0.2F;
-        float f1 = (float)(Math.sin((double)(f * ((float)Math.PI * 2F) - 1.0F)) + 1.0D);
+        this.jaw.rotateAngleX = (float) (Math.sin((double) (f * ((float) Math.PI * 2F))) + 1.0D) * 0.2F;
+        float f1 = (float) (Math.sin((double) (f * ((float) Math.PI * 2F) - 1.0F)) + 1.0D);
         f1 = (f1 * f1 + f1 * 2.0F) * 0.05F;
         GlStateManager.translate(0.0F, f1 - 2.0F, -3.0F);
         GlStateManager.rotate(f1 * 2.0F, 1.0F, 0.0F, 0.0F);
@@ -123,24 +119,23 @@
         float f5 = 1.5F;
         double[] adouble = entitydragon.getMovementOffsets(6, this.partialTicks);
         float f6 = this.updateRotations(entitydragon.getMovementOffsets(5, this.partialTicks)[0] - entitydragon.getMovementOffsets(10, this.partialTicks)[0]);
-        float f7 = this.updateRotations(entitydragon.getMovementOffsets(5, this.partialTicks)[0] + (double)(f6 / 2.0F));
-        float f8 = f * ((float)Math.PI * 2F);
+        float f7 = this.updateRotations(entitydragon.getMovementOffsets(5, this.partialTicks)[0] + (double) (f6 / 2.0F));
+        float f8 = f * ((float) Math.PI * 2F);
         f2 = 20.0F;
         float f3 = -12.0F;
 
-        for (int i = 0; i < 5; ++i)
-        {
+        for (int i = 0; i < 5; ++i) {
             double[] adouble1 = entitydragon.getMovementOffsets(5 - i, this.partialTicks);
-            float f9 = (float)Math.cos((double)((float)i * 0.45F + f8)) * 0.15F;
+            float f9 = (float) Math.cos((double) ((float) i * 0.45F + f8)) * 0.15F;
             this.spine.rotateAngleY = this.updateRotations(adouble1[0] - adouble[0]) * 0.017453292F * 1.5F;
             this.spine.rotateAngleX = f9 + entitydragon.getHeadPartYOffset(i, adouble, adouble1) * 0.017453292F * 1.5F * 5.0F;
-            this.spine.rotateAngleZ = -this.updateRotations(adouble1[0] - (double)f7) * 0.017453292F * 1.5F;
+            this.spine.rotateAngleZ = -this.updateRotations(adouble1[0] - (double) f7) * 0.017453292F * 1.5F;
             this.spine.rotationPointY = f2;
             this.spine.rotationPointZ = f3;
             this.spine.rotationPointX = f4;
-            f2 = (float)((double)f2 + Math.sin((double)this.spine.rotateAngleX) * 10.0D);
-            f3 = (float)((double)f3 - Math.cos((double)this.spine.rotateAngleY) * Math.cos((double)this.spine.rotateAngleX) * 10.0D);
-            f4 = (float)((double)f4 - Math.sin((double)this.spine.rotateAngleY) * Math.cos((double)this.spine.rotateAngleX) * 10.0D);
+            f2 = (float) ((double) f2 + Math.sin((double) this.spine.rotateAngleX) * 10.0D);
+            f3 = (float) ((double) f3 - Math.cos((double) this.spine.rotateAngleY) * Math.cos((double) this.spine.rotateAngleX) * 10.0D);
+            f4 = (float) ((double) f4 - Math.sin((double) this.spine.rotateAngleY) * Math.cos((double) this.spine.rotateAngleX) * 10.0D);
             this.spine.render(scale);
         }
 
@@ -149,8 +144,8 @@
         this.head.rotationPointX = f4;
         double[] adouble2 = entitydragon.getMovementOffsets(0, this.partialTicks);
         this.head.rotateAngleY = this.updateRotations(adouble2[0] - adouble[0]) * 0.017453292F;
-        this.head.rotateAngleX = this.updateRotations((double)entitydragon.getHeadPartYOffset(6, adouble, adouble2)) * 0.017453292F * 1.5F * 5.0F;
-        this.head.rotateAngleZ = -this.updateRotations(adouble2[0] - (double)f7) * 0.017453292F;
+        this.head.rotateAngleX = this.updateRotations((double) entitydragon.getHeadPartYOffset(6, adouble, adouble2)) * 0.017453292F * 1.5F * 5.0F;
+        this.head.rotateAngleZ = -this.updateRotations(adouble2[0] - (double) f7) * 0.017453292F;
         this.head.render(scale);
         GlStateManager.pushMatrix();
         GlStateManager.translate(0.0F, 1.0F, 0.0F);
@@ -159,14 +154,13 @@
         this.body.rotateAngleZ = 0.0F;
         this.body.render(scale);
 
-        for (int j = 0; j < 2; ++j)
-        {
+        for (int j = 0; j < 2; ++j) {
             GlStateManager.enableCull();
-            float f11 = f * ((float)Math.PI * 2F);
-            this.wing.rotateAngleX = 0.125F - (float)Math.cos((double)f11) * 0.2F;
+            float f11 = f * ((float) Math.PI * 2F);
+            this.wing.rotateAngleX = 0.125F - (float) Math.cos((double) f11) * 0.2F;
             this.wing.rotateAngleY = 0.25F;
-            this.wing.rotateAngleZ = (float)(Math.sin((double)f11) + 0.125D) * 0.8F;
-            this.wingTip.rotateAngleZ = -((float)(Math.sin((double)(f11 + 2.0F)) + 0.5D)) * 0.75F;
+            this.wing.rotateAngleZ = (float) (Math.sin((double) f11) + 0.125D) * 0.8F;
+            this.wingTip.rotateAngleZ = -((float) (Math.sin((double) (f11 + 2.0F)) + 0.5D)) * 0.75F;
             this.rearLeg.rotateAngleX = 1.0F + f1 * 0.1F;
             this.rearLegTip.rotateAngleX = 0.5F + f1 * 0.1F;
             this.rearFoot.rotateAngleX = 0.75F + f1 * 0.1F;
@@ -178,8 +172,7 @@
             this.rearLeg.render(scale);
             GlStateManager.scale(-1.0F, 1.0F, 1.0F);
 
-            if (j == 0)
-            {
+            if (j == 0) {
                 GlStateManager.cullFace(GlStateManager.CullFace.FRONT);
             }
         }
@@ -187,44 +180,40 @@
         GlStateManager.popMatrix();
         GlStateManager.cullFace(GlStateManager.CullFace.BACK);
         GlStateManager.disableCull();
-        float f10 = -((float)Math.sin((double)(f * ((float)Math.PI * 2F)))) * 0.0F;
-        f8 = f * ((float)Math.PI * 2F);
+        float f10 = -((float) Math.sin((double) (f * ((float) Math.PI * 2F)))) * 0.0F;
+        f8 = f * ((float) Math.PI * 2F);
         f2 = 10.0F;
         f3 = 60.0F;
         f4 = 0.0F;
         adouble = entitydragon.getMovementOffsets(11, this.partialTicks);
 
-        for (int k = 0; k < 12; ++k)
-        {
+        for (int k = 0; k < 12; ++k) {
             adouble2 = entitydragon.getMovementOffsets(12 + k, this.partialTicks);
-            f10 = (float)((double)f10 + Math.sin((double)((float)k * 0.45F + f8)) * 0.05000000074505806D);
+            f10 = (float) ((double) f10 + Math.sin((double) ((float) k * 0.45F + f8)) * 0.05000000074505806D);
             this.spine.rotateAngleY = (this.updateRotations(adouble2[0] - adouble[0]) * 1.5F + 180.0F) * 0.017453292F;
-            this.spine.rotateAngleX = f10 + (float)(adouble2[1] - adouble[1]) * 0.017453292F * 1.5F * 5.0F;
-            this.spine.rotateAngleZ = this.updateRotations(adouble2[0] - (double)f7) * 0.017453292F * 1.5F;
+            this.spine.rotateAngleX = f10 + (float) (adouble2[1] - adouble[1]) * 0.017453292F * 1.5F * 5.0F;
+            this.spine.rotateAngleZ = this.updateRotations(adouble2[0] - (double) f7) * 0.017453292F * 1.5F;
             this.spine.rotationPointY = f2;
             this.spine.rotationPointZ = f3;
             this.spine.rotationPointX = f4;
-            f2 = (float)((double)f2 + Math.sin((double)this.spine.rotateAngleX) * 10.0D);
-            f3 = (float)((double)f3 - Math.cos((double)this.spine.rotateAngleY) * Math.cos((double)this.spine.rotateAngleX) * 10.0D);
-            f4 = (float)((double)f4 - Math.sin((double)this.spine.rotateAngleY) * Math.cos((double)this.spine.rotateAngleX) * 10.0D);
+            f2 = (float) ((double) f2 + Math.sin((double) this.spine.rotateAngleX) * 10.0D);
+            f3 = (float) ((double) f3 - Math.cos((double) this.spine.rotateAngleY) * Math.cos((double) this.spine.rotateAngleX) * 10.0D);
+            f4 = (float) ((double) f4 - Math.sin((double) this.spine.rotateAngleY) * Math.cos((double) this.spine.rotateAngleX) * 10.0D);
             this.spine.render(scale);
         }
 
         GlStateManager.popMatrix();
     }
 
-    private float updateRotations(double p_78214_1_)
-    {
-        while (p_78214_1_ >= 180.0D)
-        {
+    private float updateRotations(double p_78214_1_) {
+        while (p_78214_1_ >= 180.0D) {
             p_78214_1_ -= 360.0D;
         }
 
-        while (p_78214_1_ < -180.0D)
-        {
+        while (p_78214_1_ < -180.0D) {
             p_78214_1_ += 360.0D;
         }
 
-        return (float)p_78214_1_;
+        return (float) p_78214_1_;
     }
 }
