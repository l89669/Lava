--- ../src-base/minecraft/net/minecraft/client/model/ModelRabbit.java
+++ ../src-work/minecraft/net/minecraft/client/model/ModelRabbit.java
@@ -9,8 +9,7 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public class ModelRabbit extends ModelBase
-{
+public class ModelRabbit extends ModelBase {
     private final ModelRenderer rabbitLeftFoot;
     private final ModelRenderer rabbitRightFoot;
     private final ModelRenderer rabbitLeftThigh;
@@ -25,8 +24,7 @@
     private final ModelRenderer rabbitNose;
     private float jumpRotation;
 
-    public ModelRabbit()
-    {
+    public ModelRabbit() {
         this.setTextureOffset("head.main", 0, 0);
         this.setTextureOffset("head.nose", 0, 24);
         this.setTextureOffset("head.ear1", 0, 10);
@@ -93,19 +91,16 @@
         this.setRotationOffset(this.rabbitNose, 0.0F, 0.0F, 0.0F);
     }
 
-    private void setRotationOffset(ModelRenderer renderer, float x, float y, float z)
-    {
+    private void setRotationOffset(ModelRenderer renderer, float x, float y, float z) {
         renderer.rotateAngleX = x;
         renderer.rotateAngleY = y;
         renderer.rotateAngleZ = z;
     }
 
-    public void render(Entity entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch, float scale)
-    {
+    public void render(Entity entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch, float scale) {
         this.setRotationAngles(limbSwing, limbSwingAmount, ageInTicks, netHeadYaw, headPitch, scale, entityIn);
 
-        if (this.isChild)
-        {
+        if (this.isChild) {
             float f = 1.5F;
             GlStateManager.pushMatrix();
             GlStateManager.scale(0.56666666F, 0.56666666F, 0.56666666F);
@@ -127,9 +122,7 @@
             this.rabbitRightArm.render(scale);
             this.rabbitTail.render(scale);
             GlStateManager.popMatrix();
-        }
-        else
-        {
+        } else {
             GlStateManager.pushMatrix();
             GlStateManager.scale(0.6F, 0.6F, 0.6F);
             GlStateManager.translate(0.0F, 16.0F * scale, 0.0F);
@@ -149,10 +142,9 @@
         }
     }
 
-    public void setRotationAngles(float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch, float scaleFactor, Entity entityIn)
-    {
-        float f = ageInTicks - (float)entityIn.ticksExisted;
-        EntityRabbit entityrabbit = (EntityRabbit)entityIn;
+    public void setRotationAngles(float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch, float scaleFactor, Entity entityIn) {
+        float f = ageInTicks - (float) entityIn.ticksExisted;
+        EntityRabbit entityrabbit = (EntityRabbit) entityIn;
         this.rabbitNose.rotateAngleX = headPitch * 0.017453292F;
         this.rabbitHead.rotateAngleX = headPitch * 0.017453292F;
         this.rabbitRightEar.rotateAngleX = headPitch * 0.017453292F;
@@ -161,7 +153,7 @@
         this.rabbitHead.rotateAngleY = netHeadYaw * 0.017453292F;
         this.rabbitRightEar.rotateAngleY = this.rabbitNose.rotateAngleY - 0.2617994F;
         this.rabbitLeftEar.rotateAngleY = this.rabbitNose.rotateAngleY + 0.2617994F;
-        this.jumpRotation = MathHelper.sin(entityrabbit.setJumpCompletion(f) * (float)Math.PI);
+        this.jumpRotation = MathHelper.sin(entityrabbit.setJumpCompletion(f) * (float) Math.PI);
         this.rabbitLeftThigh.rotateAngleX = (this.jumpRotation * 50.0F - 21.0F) * 0.017453292F;
         this.rabbitRightThigh.rotateAngleX = (this.jumpRotation * 50.0F - 21.0F) * 0.017453292F;
         this.rabbitLeftFoot.rotateAngleX = this.jumpRotation * 50.0F * 0.017453292F;
@@ -170,9 +162,8 @@
         this.rabbitRightArm.rotateAngleX = (this.jumpRotation * -40.0F - 11.0F) * 0.017453292F;
     }
 
-    public void setLivingAnimations(EntityLivingBase entitylivingbaseIn, float limbSwing, float limbSwingAmount, float partialTickTime)
-    {
+    public void setLivingAnimations(EntityLivingBase entitylivingbaseIn, float limbSwing, float limbSwingAmount, float partialTickTime) {
         super.setLivingAnimations(entitylivingbaseIn, limbSwing, limbSwingAmount, partialTickTime);
-        this.jumpRotation = MathHelper.sin(((EntityRabbit)entitylivingbaseIn).setJumpCompletion(partialTickTime) * (float)Math.PI);
+        this.jumpRotation = MathHelper.sin(((EntityRabbit) entitylivingbaseIn).setJumpCompletion(partialTickTime) * (float) Math.PI);
     }
 }
