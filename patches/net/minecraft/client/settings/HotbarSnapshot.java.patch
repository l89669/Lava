--- ../src-base/minecraft/net/minecraft/client/settings/HotbarSnapshot.java
+++ ../src-work/minecraft/net/minecraft/client/settings/HotbarSnapshot.java
@@ -1,6 +1,5 @@
 package net.minecraft.client.settings;
 
-import java.util.ArrayList;
 import net.minecraft.entity.player.InventoryPlayer;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
@@ -8,47 +7,39 @@
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
+import java.util.ArrayList;
+
 @SideOnly(Side.CLIENT)
-public class HotbarSnapshot extends ArrayList<ItemStack>
-{
+public class HotbarSnapshot extends ArrayList<ItemStack> {
     public static final int HOTBAR_SIZE = InventoryPlayer.getHotbarSize();
 
-    public HotbarSnapshot()
-    {
+    public HotbarSnapshot() {
         this.ensureCapacity(HOTBAR_SIZE);
 
-        for (int i = 0; i < HOTBAR_SIZE; ++i)
-        {
+        for (int i = 0; i < HOTBAR_SIZE; ++i) {
             this.add(ItemStack.EMPTY);
         }
     }
 
-    public NBTTagList createTag()
-    {
+    public NBTTagList createTag() {
         NBTTagList nbttaglist = new NBTTagList();
 
-        for (int i = 0; i < HOTBAR_SIZE; ++i)
-        {
-            nbttaglist.appendTag(((ItemStack)this.get(i)).writeToNBT(new NBTTagCompound()));
+        for (int i = 0; i < HOTBAR_SIZE; ++i) {
+            nbttaglist.appendTag(((ItemStack) this.get(i)).writeToNBT(new NBTTagCompound()));
         }
 
         return nbttaglist;
     }
 
-    public void fromTag(NBTTagList p_192833_1_)
-    {
-        for (int i = 0; i < HOTBAR_SIZE; ++i)
-        {
+    public void fromTag(NBTTagList p_192833_1_) {
+        for (int i = 0; i < HOTBAR_SIZE; ++i) {
             this.set(i, new ItemStack(p_192833_1_.getCompoundTagAt(i)));
         }
     }
 
-    public boolean isEmpty()
-    {
-        for (int i = 0; i < HOTBAR_SIZE; ++i)
-        {
-            if (!((ItemStack)this.get(i)).isEmpty())
-            {
+    public boolean isEmpty() {
+        for (int i = 0; i < HOTBAR_SIZE; ++i) {
+            if (!((ItemStack) this.get(i)).isEmpty()) {
                 return false;
             }
         }
