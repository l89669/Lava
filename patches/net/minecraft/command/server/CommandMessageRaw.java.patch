--- ../src-base/minecraft/net/minecraft/command/server/CommandMessageRaw.java
+++ ../src-work/minecraft/net/minecraft/command/server/CommandMessageRaw.java
@@ -1,9 +1,6 @@
 package net.minecraft.command.server;
 
 import com.google.gson.JsonParseException;
-import java.util.Collections;
-import java.util.List;
-import javax.annotation.Nullable;
 import net.minecraft.command.CommandBase;
 import net.minecraft.command.CommandException;
 import net.minecraft.command.ICommandSender;
@@ -14,53 +11,44 @@
 import net.minecraft.util.text.ITextComponent;
 import net.minecraft.util.text.TextComponentUtils;
 
-public class CommandMessageRaw extends CommandBase
-{
-    public String getName()
-    {
+import javax.annotation.Nullable;
+import java.util.Collections;
+import java.util.List;
+
+public class CommandMessageRaw extends CommandBase {
+    public String getName() {
         return "tellraw";
     }
 
-    public int getRequiredPermissionLevel()
-    {
+    public int getRequiredPermissionLevel() {
         return 2;
     }
 
-    public String getUsage(ICommandSender sender)
-    {
+    public String getUsage(ICommandSender sender) {
         return "commands.tellraw.usage";
     }
 
-    public void execute(MinecraftServer server, ICommandSender sender, String[] args) throws CommandException
-    {
-        if (args.length < 2)
-        {
+    public void execute(MinecraftServer server, ICommandSender sender, String[] args) throws CommandException {
+        if (args.length < 2) {
             throw new WrongUsageException("commands.tellraw.usage", new Object[0]);
-        }
-        else
-        {
+        } else {
             EntityPlayer entityplayer = getPlayer(server, sender, args[0]);
             String s = buildString(args, 1);
 
-            try
-            {
+            try {
                 ITextComponent itextcomponent = ITextComponent.Serializer.jsonToComponent(s);
                 entityplayer.sendMessage(TextComponentUtils.processComponent(sender, itextcomponent, entityplayer));
-            }
-            catch (JsonParseException jsonparseexception)
-            {
+            } catch (JsonParseException jsonparseexception) {
                 throw toSyntaxException(jsonparseexception);
             }
         }
     }
 
-    public List<String> getTabCompletions(MinecraftServer server, ICommandSender sender, String[] args, @Nullable BlockPos targetPos)
-    {
+    public List<String> getTabCompletions(MinecraftServer server, ICommandSender sender, String[] args, @Nullable BlockPos targetPos) {
         return args.length == 1 ? getListOfStringsMatchingLastWord(args, server.getOnlinePlayerNames()) : Collections.emptyList();
     }
 
-    public boolean isUsernameIndex(String[] args, int index)
-    {
+    public boolean isUsernameIndex(String[] args, int index) {
         return index == 0;
     }
 }
