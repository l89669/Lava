--- ../src-base/minecraft/net/minecraftforge/client/model/pipeline/QuadGatheringTransformer.java
+++ ../src-work/minecraft/net/minecraftforge/client/model/pipeline/QuadGatheringTransformer.java
@@ -21,8 +21,7 @@
 
 import net.minecraft.client.renderer.vertex.VertexFormat;
 
-public abstract class QuadGatheringTransformer implements IVertexConsumer
-{
+public abstract class QuadGatheringTransformer implements IVertexConsumer {
     protected IVertexConsumer parent;
     protected VertexFormat format;
     protected int vertices = 0;
@@ -30,38 +29,31 @@
     protected byte[] dataLength = null;
     protected float[][][] quadData = null;
 
-    public void setParent(IVertexConsumer parent)
-    {
+    public void setParent(IVertexConsumer parent) {
         this.parent = parent;
     }
 
-    public void setVertexFormat(VertexFormat format)
-    {
+    public void setVertexFormat(VertexFormat format) {
         this.format = format;
         dataLength = new byte[format.getElementCount()];
         quadData = new float[format.getElementCount()][4][4];
     }
 
     @Override
-    public VertexFormat getVertexFormat()
-    {
+    public VertexFormat getVertexFormat() {
         return format;
     }
 
     @Override
-    public void put(int element, float... data)
-    {
+    public void put(int element, float... data) {
         System.arraycopy(data, 0, quadData[element][vertices], 0, data.length);
-        if (vertices == 0)
-        {
-            dataLength[element] = (byte)data.length;
+        if (vertices == 0) {
+            dataLength[element] = (byte) data.length;
         }
-        if (element == getVertexFormat().getElementCount() - 1)
-        {
+        if (element == getVertexFormat().getElementCount() - 1) {
             vertices++;
         }
-        if (vertices == 4)
-        {
+        if (vertices == 4) {
             vertices = 0;
             processQuad();
         }
