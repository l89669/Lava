--- ../src-base/minecraft/net/minecraftforge/client/model/pipeline/VertexLighterSmoothAo.java
+++ ../src-work/minecraft/net/minecraftforge/client/model/pipeline/VertexLighterSmoothAo.java
@@ -23,22 +23,19 @@
 import net.minecraft.util.math.MathHelper;
 
 
-public class VertexLighterSmoothAo extends VertexLighterFlat
-{
-    public VertexLighterSmoothAo(BlockColors colors)
-    {
+public class VertexLighterSmoothAo extends VertexLighterFlat {
+    public VertexLighterSmoothAo(BlockColors colors) {
         super(colors);
     }
 
     @Override
-    protected void updateLightmap(float[] normal, float[] lightmap, float x, float y, float z)
-    {
-        calcLightmap(lightmap, x, y, z);
+    protected void updateLightmap(float[] normal, float[] lightmap, float x, float y, float z) {
+        lightmap[0] = calcLightmap(blockInfo.getBlockLight(), x, y, z);
+        lightmap[1] = calcLightmap(blockInfo.getSkyLight(), x, y, z);
     }
 
     @Override
-    protected void updateColor(float[] normal, float[] color, float x, float y, float z, float tint, int multiplier)
-    {
+    protected void updateColor(float[] normal, float[] color, float x, float y, float z, float tint, int multiplier) {
         super.updateColor(normal, color, x, y, z, tint, multiplier);
         float a = getAo(x, y, z);
         color[0] *= a;
@@ -46,15 +43,13 @@
         color[2] *= a;
     }
 
-    protected void calcLightmap(float[] lightmap, float x, float y, float z)
-    {
+    protected float calcLightmap(float[][][][] light, float x, float y, float z) {
         x *= 2;
         y *= 2;
         z *= 2;
         float l2 = x * x + y * y + z * z;
-        if(l2 > 6 - 2e-2f)
-        {
-            float s = (float)Math.sqrt((6 - 2e-2f) / l2);
+        if (l2 > 6 - 2e-2f) {
+            float s = (float) Math.sqrt((6 - 2e-2f) / l2);
             x *= s;
             y *= s;
             z *= s;
@@ -63,60 +58,41 @@
         float ay = y > 0 ? y : -y;
         float az = z > 0 ? z : -z;
         float e1 = 1 + 1e-4f;
-        if(ax > 2 - 1e-4f && ay <= e1 && az <= e1)
-        {
+        if (ax > 2 - 1e-4f && ay <= e1 && az <= e1) {
             x = x < 0 ? -2 + 1e-4f : 2 - 1e-4f;
-        }
-        else if(ay > 2 - 1e-4f && az <= e1 && ax <= e1)
-        {
+        } else if (ay > 2 - 1e-4f && az <= e1 && ax <= e1) {
             y = y < 0 ? -2 + 1e-4f : 2 - 1e-4f;
-        }
-        else if(az > 2 - 1e-4f && ax <= e1 && ay <= e1)
-        {
+        } else if (az > 2 - 1e-4f && ax <= e1 && ay <= e1) {
             z = z < 0 ? -2 + 1e-4f : 2 - 1e-4f;
         }
         ax = x > 0 ? x : -x;
         ay = y > 0 ? y : -y;
         az = z > 0 ? z : -z;
-        if(ax <= e1 && ay + az > 3f - 1e-4f)
-        {
+        if (ax <= e1 && ay + az > 3f - 1e-4f) {
             float s = (3f - 1e-4f) / (ay + az);
             y *= s;
             z *= s;
-        }
-        else if(ay <= e1 && az + ax > 3f - 1e-4f)
-        {
+        } else if (ay <= e1 && az + ax > 3f - 1e-4f) {
             float s = (3f - 1e-4f) / (az + ax);
             z *= s;
             x *= s;
-        }
-        else if(az <= e1 && ax + ay > 3f - 1e-4f)
-        {
+        } else if (az <= e1 && ax + ay > 3f - 1e-4f) {
             float s = (3f - 1e-4f) / (ax + ay);
             x *= s;
             y *= s;
-        }
-        else if(ax + ay + az > 4 - 1e-4f)
-        {
+        } else if (ax + ay + az > 4 - 1e-4f) {
             float s = (4 - 1e-4f) / (ax + ay + az);
             x *= s;
             y *= s;
             z *= s;
         }
 
-        float[][][][] blockLight = blockInfo.getBlockLight();
-        float[][][][] skyLight   = blockInfo.getSkyLight();
+        float l = 0;
+        float s = 0;
 
-        float bl = 0f;
-        float sl = 0f;
-        float s  = 0f;
-
-        for(int ix = 0; ix <= 1; ix++)
-        {
-            for(int iy = 0; iy <= 1; iy++)
-            {
-                for(int iz = 0; iz <= 1; iz++)
-                {
+        for (int ix = 0; ix <= 1; ix++) {
+            for (int iy = 0; iy <= 1; iy++) {
+                for (int iz = 0; iz <= 1; iz++) {
                     float vx = x * (1 - ix * 2);
                     float vy = y * (1 - iy * 2);
                     float vz = z * (1 - iz * 2);
@@ -127,39 +103,36 @@
                     float sz = vx + vy + 3;
 
                     float bx = (2 * vx + vy + vz + 6) / (s3 * sy * sz * (vx + 2));
-                    s  += bx;
-                    bl += bx * blockLight[0][ix][iy][iz];
-                    sl += bx *   skyLight[0][ix][iy][iz];
+                    s += bx;
+                    l += bx * light[0][ix][iy][iz];
 
                     float by = (2 * vy + vz + vx + 6) / (s3 * sz * sx * (vy + 2));
-                    s  += by;
-                    bl += by * blockLight[1][ix][iy][iz];
-                    sl += by *   skyLight[1][ix][iy][iz];
+                    s += by;
+                    l += by * light[1][ix][iy][iz];
 
                     float bz = (2 * vz + vx + vy + 6) / (s3 * sx * sy * (vz + 2));
-                    s  += bz;
-                    bl += bz * blockLight[2][ix][iy][iz];
-                    sl += bz *   skyLight[2][ix][iy][iz];
+                    s += bz;
+                    l += bz * light[2][ix][iy][iz];
                 }
             }
         }
 
-        bl /= s;
-        sl /= s;
+        l /= s;
 
-        lightmap[0] = MathHelper.clamp(bl, 0f, 15f * 0x20 / 0xFFFF);
-        lightmap[1] = MathHelper.clamp(sl, 0f, 15f * 0x20 / 0xFFFF);
+        if (l > 15f * 0x20 / 0xFFFF) l = 15f * 0x20 / 0xFFFF;
+        if (l < 0) l = 0;
+
+        return l;
     }
 
-    protected float getAo(float x, float y, float z)
-    {
+    protected float getAo(float x, float y, float z) {
         int sx = x < 0 ? 1 : 2;
         int sy = y < 0 ? 1 : 2;
         int sz = z < 0 ? 1 : 2;
 
-        if(x < 0) x++;
-        if(y < 0) y++;
-        if(z < 0) z++;
+        if (x < 0) x++;
+        if (y < 0) y++;
+        if (z < 0) z++;
 
         float a = 0;
         float[][][] ao = blockInfo.getAo();
@@ -177,8 +150,7 @@
     }
 
     @Override
-    public void updateBlockInfo()
-    {
+    public void updateBlockInfo() {
         blockInfo.updateShift();
         blockInfo.updateLightMatrix();
     }
