--- ../src-base/minecraft/net/minecraftforge/client/model/BakedModelWrapper.java
+++ ../src-work/minecraft/net/minecraftforge/client/model/BakedModelWrapper.java
@@ -19,10 +19,6 @@
 
 package net.minecraftforge.client.model;
 
-import javax.annotation.Nullable;
-import javax.vecmath.Matrix4f;
-import java.util.List;
-
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.client.renderer.block.model.BakedQuad;
 import net.minecraft.client.renderer.block.model.IBakedModel;
@@ -32,66 +28,59 @@
 import net.minecraft.util.EnumFacing;
 import org.apache.commons.lang3.tuple.Pair;
 
-public abstract class BakedModelWrapper<T extends IBakedModel> implements IBakedModel
-{
+import javax.annotation.Nullable;
+import javax.vecmath.Matrix4f;
+import java.util.List;
+
+public abstract class BakedModelWrapper<T extends IBakedModel> implements IBakedModel {
     protected final T originalModel;
 
-    public BakedModelWrapper(T originalModel)
-    {
+    public BakedModelWrapper(T originalModel) {
         this.originalModel = originalModel;
     }
 
     @Override
-    public List<BakedQuad> getQuads(@Nullable IBlockState state, @Nullable EnumFacing side, long rand)
-    {
+    public List<BakedQuad> getQuads(@Nullable IBlockState state, @Nullable EnumFacing side, long rand) {
         return originalModel.getQuads(state, side, rand);
     }
 
     @Override
-    public boolean isAmbientOcclusion()
-    {
+    public boolean isAmbientOcclusion() {
         return originalModel.isAmbientOcclusion();
     }
 
     @Override
-    public boolean isAmbientOcclusion(IBlockState state)
-    {
+    public boolean isAmbientOcclusion(IBlockState state) {
         return originalModel.isAmbientOcclusion(state);
     }
 
     @Override
-    public boolean isGui3d()
-    {
+    public boolean isGui3d() {
         return originalModel.isGui3d();
     }
 
     @Override
-    public boolean isBuiltInRenderer()
-    {
+    public boolean isBuiltInRenderer() {
         return originalModel.isBuiltInRenderer();
     }
 
     @Override
-    public TextureAtlasSprite getParticleTexture()
-    {
+    public TextureAtlasSprite getParticleTexture() {
         return originalModel.getParticleTexture();
     }
 
     @Override
-    public ItemCameraTransforms getItemCameraTransforms()
-    {
+    public ItemCameraTransforms getItemCameraTransforms() {
         return originalModel.getItemCameraTransforms();
     }
 
     @Override
-    public ItemOverrideList getOverrides()
-    {
+    public ItemOverrideList getOverrides() {
         return originalModel.getOverrides();
     }
 
     @Override
-    public Pair<? extends IBakedModel, Matrix4f> handlePerspective(ItemCameraTransforms.TransformType cameraTransformType)
-    {
+    public Pair<? extends IBakedModel, Matrix4f> handlePerspective(ItemCameraTransforms.TransformType cameraTransformType) {
         return originalModel.handlePerspective(cameraTransformType);
     }
 }
