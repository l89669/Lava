--- ../src-base/minecraft/net/minecraftforge/client/settings/KeyBindingMap.java
+++ ../src-work/minecraft/net/minecraftforge/client/settings/KeyBindingMap.java
@@ -28,26 +28,21 @@
 import java.util.EnumMap;
 import java.util.List;
 
-public class KeyBindingMap
-{
+public class KeyBindingMap {
     private static final EnumMap<KeyModifier, IntHashMap<Collection<KeyBinding>>> map = new java.util.EnumMap<KeyModifier, IntHashMap<Collection<KeyBinding>>>(KeyModifier.class);
-    static
-    {
-        for (KeyModifier modifier : KeyModifier.values())
-        {
+
+    static {
+        for (KeyModifier modifier : KeyModifier.values()) {
             map.put(modifier, new IntHashMap<Collection<KeyBinding>>());
         }
     }
 
     @Nullable
-    public KeyBinding lookupActive(int keyCode)
-    {
+    public KeyBinding lookupActive(int keyCode) {
         KeyModifier activeModifier = KeyModifier.getActiveModifier();
-        if (!activeModifier.matches(keyCode))
-        {
+        if (!activeModifier.matches(keyCode)) {
             KeyBinding binding = getBinding(keyCode, activeModifier);
-            if (binding != null)
-            {
+            if (binding != null) {
                 return binding;
             }
         }
@@ -55,15 +50,11 @@
     }
 
     @Nullable
-    private KeyBinding getBinding(int keyCode, KeyModifier keyModifier)
-    {
+    private KeyBinding getBinding(int keyCode, KeyModifier keyModifier) {
         Collection<KeyBinding> bindings = map.get(keyModifier).lookup(keyCode);
-        if (bindings != null)
-        {
-            for (KeyBinding binding : bindings)
-            {
-                if (binding.isActiveAndMatches(keyCode))
-                {
+        if (bindings != null) {
+            for (KeyBinding binding : bindings) {
+                if (binding.isActiveAndMatches(keyCode)) {
                     return binding;
                 }
             }
@@ -71,53 +62,43 @@
         return null;
     }
 
-    public List<KeyBinding> lookupAll(int keyCode)
-    {
+    public List<KeyBinding> lookupAll(int keyCode) {
         List<KeyBinding> matchingBindings = new ArrayList<KeyBinding>();
-        for (IntHashMap<Collection<KeyBinding>> bindingsMap : map.values())
-        {
+        for (IntHashMap<Collection<KeyBinding>> bindingsMap : map.values()) {
             Collection<KeyBinding> bindings = bindingsMap.lookup(keyCode);
-            if (bindings != null)
-            {
+            if (bindings != null) {
                 matchingBindings.addAll(bindings);
             }
         }
         return matchingBindings;
     }
 
-    public void addKey(int keyCode, KeyBinding keyBinding)
-    {
+    public void addKey(int keyCode, KeyBinding keyBinding) {
         KeyModifier keyModifier = keyBinding.getKeyModifier();
         IntHashMap<Collection<KeyBinding>> bindingsMap = map.get(keyModifier);
         Collection<KeyBinding> bindingsForKey = bindingsMap.lookup(keyCode);
-        if (bindingsForKey == null)
-        {
+        if (bindingsForKey == null) {
             bindingsForKey = new ArrayList<KeyBinding>();
             bindingsMap.addKey(keyCode, bindingsForKey);
         }
         bindingsForKey.add(keyBinding);
     }
 
-    public void removeKey(KeyBinding keyBinding)
-    {
+    public void removeKey(KeyBinding keyBinding) {
         KeyModifier keyModifier = keyBinding.getKeyModifier();
         int keyCode = keyBinding.getKeyCode();
         IntHashMap<Collection<KeyBinding>> bindingsMap = map.get(keyModifier);
         Collection<KeyBinding> bindingsForKey = bindingsMap.lookup(keyCode);
-        if (bindingsForKey != null)
-        {
+        if (bindingsForKey != null) {
             bindingsForKey.remove(keyBinding);
-            if (bindingsForKey.isEmpty())
-            {
+            if (bindingsForKey.isEmpty()) {
                 bindingsMap.removeObject(keyCode);
             }
         }
     }
 
-    public void clearMap()
-    {
-        for (IntHashMap<Collection<KeyBinding>> bindings : map.values())
-        {
+    public void clearMap() {
+        for (IntHashMap<Collection<KeyBinding>> bindings : map.values()) {
             bindings.clearMap();
         }
     }
