--- ../src-base/minecraft/net/minecraftforge/client/event/RenderLivingEvent.java
+++ ../src-work/minecraft/net/minecraftforge/client/event/RenderLivingEvent.java
@@ -19,13 +19,12 @@
 
 package net.minecraftforge.client.event;
 
-import net.minecraftforge.fml.common.eventhandler.Cancelable;
-import net.minecraftforge.fml.common.eventhandler.Event;
 import net.minecraft.client.renderer.entity.RenderLivingBase;
 import net.minecraft.entity.EntityLivingBase;
+import net.minecraftforge.fml.common.eventhandler.Cancelable;
+import net.minecraftforge.fml.common.eventhandler.Event;
 
-public abstract class RenderLivingEvent<T extends EntityLivingBase> extends Event
-{
+public abstract class RenderLivingEvent<T extends EntityLivingBase> extends Event {
     private final EntityLivingBase entity;
     private final RenderLivingBase<T> renderer;
     private final float partialRenderTick;
@@ -34,13 +33,11 @@
     private final double z;
 
     @Deprecated
-    public RenderLivingEvent(EntityLivingBase entity, RenderLivingBase<T> renderer, double x, double y, double z)
-    {
+    public RenderLivingEvent(EntityLivingBase entity, RenderLivingBase<T> renderer, double x, double y, double z) {
         this(entity, renderer, 1, x, y, z);
     }
 
-    public RenderLivingEvent(EntityLivingBase entity, RenderLivingBase<T> renderer, float partialRenderTick, double x, double y, double z)
-    {
+    public RenderLivingEvent(EntityLivingBase entity, RenderLivingBase<T> renderer, float partialRenderTick, double x, double y, double z) {
         this.entity = entity;
         this.renderer = renderer;
         this.partialRenderTick = partialRenderTick;
@@ -49,39 +46,69 @@
         this.z = z;
     }
 
-    public EntityLivingBase getEntity() { return entity; }
-    public RenderLivingBase<T> getRenderer() { return renderer; }
-    public float getPartialRenderTick() { return partialRenderTick; }
-    public double getX() { return x; }
-    public double getY() { return y; }
-    public double getZ() { return z; }
+    public EntityLivingBase getEntity() {
+        return entity;
+    }
 
+    public RenderLivingBase<T> getRenderer() {
+        return renderer;
+    }
+
+    public float getPartialRenderTick() {
+        return partialRenderTick;
+    }
+
+    public double getX() {
+        return x;
+    }
+
+    public double getY() {
+        return y;
+    }
+
+    public double getZ() {
+        return z;
+    }
+
     @Cancelable
-    public static class Pre<T extends EntityLivingBase> extends RenderLivingEvent<T>
-    {
+    public static class Pre<T extends EntityLivingBase> extends RenderLivingEvent<T> {
         @Deprecated
-        public Pre(EntityLivingBase entity, RenderLivingBase<T> renderer, double x, double y, double z){ super(entity, renderer, x, y, z); }
-        public Pre(EntityLivingBase entity, RenderLivingBase<T> renderer, float partialRenderTick, double x, double y, double z){ super(entity, renderer, partialRenderTick, x, y, z); }
+        public Pre(EntityLivingBase entity, RenderLivingBase<T> renderer, double x, double y, double z) {
+            super(entity, renderer, x, y, z);
+        }
+
+        public Pre(EntityLivingBase entity, RenderLivingBase<T> renderer, float partialRenderTick, double x, double y, double z) {
+            super(entity, renderer, partialRenderTick, x, y, z);
+        }
     }
-    public static class Post<T extends EntityLivingBase> extends RenderLivingEvent<T>
-    {
+
+    public static class Post<T extends EntityLivingBase> extends RenderLivingEvent<T> {
         @Deprecated
-        public Post(EntityLivingBase entity, RenderLivingBase<T> renderer, double x, double y, double z){ super(entity, renderer, x, y, z); }
-        public Post(EntityLivingBase entity, RenderLivingBase<T> renderer, float partialRenderTick, double x, double y, double z){ super(entity, renderer, partialRenderTick, x, y, z); }
+        public Post(EntityLivingBase entity, RenderLivingBase<T> renderer, double x, double y, double z) {
+            super(entity, renderer, x, y, z);
+        }
+
+        public Post(EntityLivingBase entity, RenderLivingBase<T> renderer, float partialRenderTick, double x, double y, double z) {
+            super(entity, renderer, partialRenderTick, x, y, z);
+        }
     }
 
-    public abstract static class Specials<T extends EntityLivingBase> extends RenderLivingEvent<T>
-    {
-        public Specials(EntityLivingBase entity, RenderLivingBase<T> renderer, double x, double y, double z){ super(entity, renderer, 0, x, y, z); }
+    public abstract static class Specials<T extends EntityLivingBase> extends RenderLivingEvent<T> {
+        public Specials(EntityLivingBase entity, RenderLivingBase<T> renderer, double x, double y, double z) {
+            super(entity, renderer, 0, x, y, z);
+        }
 
         @Cancelable
-        public static class Pre<T extends EntityLivingBase> extends Specials<T>
-        {
-            public Pre(EntityLivingBase entity, RenderLivingBase<T> renderer, double x, double y, double z){ super(entity, renderer, x, y, z); }
+        public static class Pre<T extends EntityLivingBase> extends Specials<T> {
+            public Pre(EntityLivingBase entity, RenderLivingBase<T> renderer, double x, double y, double z) {
+                super(entity, renderer, x, y, z);
+            }
         }
-        public static class Post<T extends EntityLivingBase> extends Specials<T>
-        {
-            public Post(EntityLivingBase entity, RenderLivingBase<T> renderer, double x, double y, double z){ super(entity, renderer,  x, y, z); }
+
+        public static class Post<T extends EntityLivingBase> extends Specials<T> {
+            public Post(EntityLivingBase entity, RenderLivingBase<T> renderer, double x, double y, double z) {
+                super(entity, renderer, x, y, z);
+            }
         }
     }
 }
