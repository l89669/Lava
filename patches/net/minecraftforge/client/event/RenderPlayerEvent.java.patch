--- ../src-base/minecraft/net/minecraftforge/client/event/RenderPlayerEvent.java
+++ ../src-work/minecraft/net/minecraftforge/client/event/RenderPlayerEvent.java
@@ -19,24 +19,22 @@
 
 package net.minecraftforge.client.event;
 
-import net.minecraftforge.fml.common.eventhandler.Cancelable;
 import net.minecraft.client.renderer.entity.RenderPlayer;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.item.ItemStack;
 import net.minecraftforge.event.entity.player.PlayerEvent;
+import net.minecraftforge.fml.common.eventhandler.Cancelable;
 
 import javax.annotation.Nonnull;
 
-public abstract class RenderPlayerEvent extends PlayerEvent
-{
+public abstract class RenderPlayerEvent extends PlayerEvent {
     private final RenderPlayer renderer;
     private final float partialRenderTick;
     private final double x;
     private final double y;
     private final double z;
 
-    public RenderPlayerEvent(EntityPlayer player, RenderPlayer renderer, float partialRenderTick, double x, double y, double z)
-    {
+    public RenderPlayerEvent(EntityPlayer player, RenderPlayer renderer, float partialRenderTick, double x, double y, double z) {
         super(player);
         this.renderer = renderer;
         this.partialRenderTick = partialRenderTick;
@@ -45,66 +43,105 @@
         this.z = z;
     }
 
-    public RenderPlayer getRenderer() { return renderer; }
-    public float getPartialRenderTick() { return partialRenderTick; }
-    public double getX() { return x; }
-    public double getY() { return y; }
-    public double getZ() { return z; }
+    public RenderPlayer getRenderer() {
+        return renderer;
+    }
 
+    public float getPartialRenderTick() {
+        return partialRenderTick;
+    }
+
+    public double getX() {
+        return x;
+    }
+
+    public double getY() {
+        return y;
+    }
+
+    public double getZ() {
+        return z;
+    }
+
     @Cancelable
-    public static class Pre extends RenderPlayerEvent
-    {
-        public Pre(EntityPlayer player, RenderPlayer renderer, float tick, double x, double y, double z){ super(player, renderer, tick, x, y, z); }
+    public static class Pre extends RenderPlayerEvent {
+        public Pre(EntityPlayer player, RenderPlayer renderer, float tick, double x, double y, double z) {
+            super(player, renderer, tick, x, y, z);
+        }
+
         @Deprecated
-        public Pre(EntityPlayer player, RenderPlayer renderer, float tick){ this(player, renderer, tick, 0D, 0D, 0D); }
+        public Pre(EntityPlayer player, RenderPlayer renderer, float tick) {
+            this(player, renderer, tick, 0D, 0D, 0D);
+        }
     }
 
-    public static class Post extends RenderPlayerEvent
-    {
-        public Post(EntityPlayer player, RenderPlayer renderer, float tick, double x, double y, double z){ super(player, renderer, tick, x, y, z); }
+    public static class Post extends RenderPlayerEvent {
+        public Post(EntityPlayer player, RenderPlayer renderer, float tick, double x, double y, double z) {
+            super(player, renderer, tick, x, y, z);
+        }
+
         @Deprecated
-        public Post(EntityPlayer player, RenderPlayer renderer, float tick){ this(player, renderer, tick, 0D, 0D, 0D); }
+        public Post(EntityPlayer player, RenderPlayer renderer, float tick) {
+            this(player, renderer, tick, 0D, 0D, 0D);
+        }
     }
-    
+
     @Deprecated
-    public abstract static class Specials extends RenderPlayerEvent
-    {
-        public Specials(EntityPlayer player, RenderPlayer renderer, float partialTicks)
-        {
+    public abstract static class Specials extends RenderPlayerEvent {
+        public Specials(EntityPlayer player, RenderPlayer renderer, float partialTicks) {
             super(player, renderer, partialTicks, 0D, 0D, 0D);
         }
 
         @Cancelable
-        public static class Pre extends Specials
-        {
+        public static class Pre extends Specials {
             private boolean renderHelmet = true;
             private boolean renderCape = true;
             private boolean renderItem = true;
-            public Pre(EntityPlayer player, RenderPlayer renderer, float partialTicks){ super(player, renderer, partialTicks); }
 
-            public boolean shouldRenderHelmet() { return renderHelmet; }
-            public void setRenderHelmet(boolean renderHelmet) { this.renderHelmet = renderHelmet; }
-            public boolean shouldRenderCape() { return renderCape; }
-            public void setRenderCape(boolean renderCape) { this.renderCape = renderCape; }
-            public boolean shouldRenderItem() { return renderItem; }
-            public void setRenderItem(boolean renderItem) { this.renderItem = renderItem; }
+            public Pre(EntityPlayer player, RenderPlayer renderer, float partialTicks) {
+                super(player, renderer, partialTicks);
+            }
+
+            public boolean shouldRenderHelmet() {
+                return renderHelmet;
+            }
+
+            public void setRenderHelmet(boolean renderHelmet) {
+                this.renderHelmet = renderHelmet;
+            }
+
+            public boolean shouldRenderCape() {
+                return renderCape;
+            }
+
+            public void setRenderCape(boolean renderCape) {
+                this.renderCape = renderCape;
+            }
+
+            public boolean shouldRenderItem() {
+                return renderItem;
+            }
+
+            public void setRenderItem(boolean renderItem) {
+                this.renderItem = renderItem;
+            }
         }
 
-        public static class Post extends Specials
-        {
-            public Post(EntityPlayer player, RenderPlayer renderer, float partialTicks){ super(player, renderer, partialTicks); }
+        public static class Post extends Specials {
+            public Post(EntityPlayer player, RenderPlayer renderer, float partialTicks) {
+                super(player, renderer, partialTicks);
+            }
         }
     }
 
     @Deprecated
-    public static class SetArmorModel extends RenderPlayerEvent
-    {
+    public static class SetArmorModel extends RenderPlayerEvent {
         private int result = -1;
         private final int slot;
         @Nonnull
         private final ItemStack stack;
-        public SetArmorModel(EntityPlayer player, RenderPlayer renderer, int slot, float partialTick, @Nonnull ItemStack stack)
-        {
+
+        public SetArmorModel(EntityPlayer player, RenderPlayer renderer, int slot, float partialTick, @Nonnull ItemStack stack) {
             super(player, renderer, partialTick, 0D, 0D, 0D);
             this.slot = slot;
             this.stack = stack;
@@ -114,24 +151,20 @@
          * Setting this to any value besides -1 will result in the function being
          * Immediately exited with the return value specified.
          */
-        public int getResultValue()
-        {
+        public int getResultValue() {
             return result;
         }
 
-        public void setResult(int result)
-        {
+        public void setResult(int result) {
             this.result = result;
         }
 
-        public int getSlot()
-        {
+        public int getSlot() {
             return slot;
         }
 
         @Nonnull
-        public ItemStack getStack()
-        {
+        public ItemStack getStack() {
             return stack;
         }
     }
