--- ../src-base/minecraft/net/minecraftforge/client/event/RenderGameOverlayEvent.java
+++ ../src-work/minecraft/net/minecraftforge/client/event/RenderGameOverlayEvent.java
@@ -19,33 +19,28 @@
 
 package net.minecraftforge.client.event;
 
-import java.util.ArrayList;
-
-import net.minecraftforge.fml.common.eventhandler.Cancelable;
-import net.minecraftforge.fml.common.eventhandler.Event;
 import net.minecraft.client.gui.BossInfoClient;
 import net.minecraft.client.gui.ScaledResolution;
+import net.minecraftforge.fml.common.eventhandler.Cancelable;
+import net.minecraftforge.fml.common.eventhandler.Event;
 
+import java.util.ArrayList;
+
 @Cancelable
-public class RenderGameOverlayEvent extends Event
-{
-    public float getPartialTicks()
-    {
+public class RenderGameOverlayEvent extends Event {
+    public float getPartialTicks() {
         return partialTicks;
     }
 
-    public ScaledResolution getResolution()
-    {
+    public ScaledResolution getResolution() {
         return resolution;
     }
 
-    public ElementType getType()
-    {
+    public ElementType getType() {
         return type;
     }
 
-    public static enum ElementType
-    {
+    public static enum ElementType {
         ALL,
         HELMET,
         PORTAL,
@@ -74,45 +69,42 @@
     private final ScaledResolution resolution;
     private final ElementType type;
 
-    public RenderGameOverlayEvent(float partialTicks, ScaledResolution resolution)
-    {
+    public RenderGameOverlayEvent(float partialTicks, ScaledResolution resolution) {
         this.partialTicks = partialTicks;
         this.resolution = resolution;
         this.type = null;
     }
 
-    private RenderGameOverlayEvent(RenderGameOverlayEvent parent, ElementType type)
-    {
+    private RenderGameOverlayEvent(RenderGameOverlayEvent parent, ElementType type) {
         this.partialTicks = parent.getPartialTicks();
         this.resolution = parent.getResolution();
         this.type = type;
     }
 
-    public static class Pre extends RenderGameOverlayEvent
-    {
-        public Pre(RenderGameOverlayEvent parent, ElementType type)
-        {
+    public static class Pre extends RenderGameOverlayEvent {
+        public Pre(RenderGameOverlayEvent parent, ElementType type) {
             super(parent, type);
         }
     }
 
-    public static class Post extends RenderGameOverlayEvent
-    {
-        public Post(RenderGameOverlayEvent parent, ElementType type)
-        {
+    public static class Post extends RenderGameOverlayEvent {
+        public Post(RenderGameOverlayEvent parent, ElementType type) {
             super(parent, type);
         }
-        @Override public boolean isCancelable(){ return false; }
+
+        @Override
+        public boolean isCancelable() {
+            return false;
+        }
     }
 
-    public static class BossInfo extends Pre
-    {
+    public static class BossInfo extends Pre {
         private final BossInfoClient bossInfo;
         private final int x;
         private final int y;
         private int increment;
-        public BossInfo(RenderGameOverlayEvent parent, ElementType type, BossInfoClient bossInfo, int x, int y, int increment)
-        {
+
+        public BossInfo(RenderGameOverlayEvent parent, ElementType type, BossInfoClient bossInfo, int x, int y, int increment) {
             super(parent, type);
             this.bossInfo = bossInfo;
             this.x = x;
@@ -123,96 +115,83 @@
         /**
          * @return The {@link BossInfoClient} currently being rendered
          */
-        public BossInfoClient getBossInfo()
-        {
+        public BossInfoClient getBossInfo() {
             return bossInfo;
         }
 
         /**
          * @return The current x position we are rendering at
          */
-        public int getX()
-        {
+        public int getX() {
             return x;
         }
 
         /**
          * @return The current y position we are rendering at
          */
-        public int getY()
-        {
+        public int getY() {
             return y;
         }
 
         /**
          * @return How much to move down before rendering the next bar
          */
-        public int getIncrement()
-        {
+        public int getIncrement() {
             return increment;
         }
 
         /**
          * Sets the amount to move down before rendering the next bar
+         *
          * @param increment The increment to set
          */
-        public void setIncrement(int increment)
-        {
+        public void setIncrement(int increment) {
             this.increment = increment;
         }
     }
 
-    public static class Text extends Pre
-    {
+    public static class Text extends Pre {
         private final ArrayList<String> left;
         private final ArrayList<String> right;
-        public Text(RenderGameOverlayEvent parent, ArrayList<String> left, ArrayList<String> right)
-        {
+
+        public Text(RenderGameOverlayEvent parent, ArrayList<String> left, ArrayList<String> right) {
             super(parent, ElementType.TEXT);
             this.left = left;
             this.right = right;
         }
 
-        public ArrayList<String> getLeft()
-        {
+        public ArrayList<String> getLeft() {
             return left;
         }
 
-        public ArrayList<String> getRight()
-        {
+        public ArrayList<String> getRight() {
             return right;
         }
     }
 
-    public static class Chat extends Pre
-    {
+    public static class Chat extends Pre {
         private int posX;
         private int posY;
 
-        public Chat(RenderGameOverlayEvent parent, int posX, int posY)
-        {
+        public Chat(RenderGameOverlayEvent parent, int posX, int posY) {
             super(parent, ElementType.CHAT);
             this.setPosX(posX);
             this.setPosY(posY);
         }
 
-        public int getPosX()
-        {
+        public int getPosX() {
             return posX;
         }
 
-        public void setPosX(int posX)
-        {
+        public void setPosX(int posX) {
             this.posX = posX;
         }
 
-        public int getPosY()
-        {
+        public int getPosY() {
             return posY;
         }
 
-        public void setPosY(int posY)
-        {
+        public void setPosY(int posY) {
             this.posY = posY;
         }
     }
