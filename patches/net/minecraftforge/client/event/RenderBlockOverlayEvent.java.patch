--- ../src-base/minecraft/net/minecraftforge/client/event/RenderBlockOverlayEvent.java
+++ ../src-work/minecraft/net/minecraftforge/client/event/RenderBlockOverlayEvent.java
@@ -35,41 +35,53 @@
     public static enum OverlayType {
         FIRE, BLOCK, WATER
     }
-    
+
     private final EntityPlayer player;
     private final float renderPartialTicks;
     private final OverlayType overlayType;
     private final IBlockState blockForOverlay;
     private final BlockPos blockPos;
-    
+
     @Deprecated
-    public RenderBlockOverlayEvent(EntityPlayer player, float renderPartialTicks, OverlayType type, Block block, int x, int y, int z)
-    {
+    public RenderBlockOverlayEvent(EntityPlayer player, float renderPartialTicks, OverlayType type, Block block, int x, int y, int z) {
         this(player, renderPartialTicks, type, block.getDefaultState(), new BlockPos(x, y, z));
     }
-    
-    public RenderBlockOverlayEvent(EntityPlayer player, float renderPartialTicks, OverlayType type, IBlockState block, BlockPos blockPos)
-    {
+
+    public RenderBlockOverlayEvent(EntityPlayer player, float renderPartialTicks, OverlayType type, IBlockState block, BlockPos blockPos) {
         this.player = player;
         this.renderPartialTicks = renderPartialTicks;
         this.overlayType = type;
         this.blockForOverlay = block;
         this.blockPos = blockPos;
-        
+
     }
 
     /**
      * The player which the overlay will apply to
      */
-    public EntityPlayer getPlayer() { return player; }
-    public float getRenderPartialTicks() { return renderPartialTicks; }
+    public EntityPlayer getPlayer() {
+        return player;
+    }
+
+    public float getRenderPartialTicks() {
+        return renderPartialTicks;
+    }
+
     /**
      * The type of overlay to occur
      */
-    public OverlayType getOverlayType() { return overlayType; }
+    public OverlayType getOverlayType() {
+        return overlayType;
+    }
+
     /**
      * If the overlay type is BLOCK, then this is the block which the overlay is getting it's icon from
      */
-    public IBlockState getBlockForOverlay() { return blockForOverlay; }
-    public BlockPos getBlockPos() { return blockPos; }
+    public IBlockState getBlockForOverlay() {
+        return blockForOverlay;
+    }
+
+    public BlockPos getBlockPos() {
+        return blockPos;
+    }
 }
