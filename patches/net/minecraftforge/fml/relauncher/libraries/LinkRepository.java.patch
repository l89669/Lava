--- ../src-base/minecraft/net/minecraftforge/fml/relauncher/libraries/LinkRepository.java
+++ ../src-work/minecraft/net/minecraftforge/fml/relauncher/libraries/LinkRepository.java
@@ -19,49 +19,37 @@
 
 package net.minecraftforge.fml.relauncher.libraries;
 
-import java.io.File;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-
 import net.minecraftforge.fml.common.FMLLog;
 
-public class LinkRepository extends Repository
-{
+import java.io.File;
+import java.util.*;
+
+public class LinkRepository extends Repository {
     private Map<String, File> artifact_to_file = new HashMap<>();
     private Map<String, File> filesystem = new HashMap<>();
     private Map<String, Artifact> snapshots = new HashMap<>();
     private Set<File> known = new HashSet<>();
 
-    LinkRepository(File root)
-    {
+    LinkRepository(File root) {
         super(root, "MEMORY");
     }
 
-    public File archive(Artifact artifact, File file, byte[] manifest)
-    {
+    public File archive(Artifact artifact, File file, byte[] manifest) {
         String key = artifact.toString();
         known.add(file);
-        if (artifact_to_file.containsKey(key))
-        {
+        if (artifact_to_file.containsKey(key)) {
             FMLLog.log.debug("Maven file already exists for {}({}) at {}, ignoring duplicate.", file.getName(), artifact.toString(), artifact_to_file.get(key).getAbsolutePath());
 
-            if (artifact.isSnapshot())
-            {
+            if (artifact.isSnapshot()) {
                 Artifact old = snapshots.get(key);
-                if (old == null || old.compareVersion(artifact) < 0)
-                {
+                if (old == null || old.compareVersion(artifact) < 0) {
                     FMLLog.log.debug("Overriding Snapshot {} -> {}", old == null ? "null" : old.getTimestamp(), artifact.getTimestamp());
                     snapshots.put(key, artifact);
                     artifact_to_file.put(key, file);
                     filesystem.put(artifact.getPath(), file);
                 }
             }
-        }
-        else
-        {
+        } else {
             FMLLog.log.debug("Making maven link for {} in memory to {}.", key, file.getAbsolutePath());
             artifact_to_file.put(key, file);
             filesystem.put(artifact.getPath(), file);
@@ -81,13 +69,11 @@
     }
 
     @Override
-    public void filterLegacy(List<File> list)
-    {
+    public void filterLegacy(List<File> list) {
         list.removeIf(e -> known.contains(e));
     }
 
-    public Artifact resolve(Artifact artifact)
-    {
+    public Artifact resolve(Artifact artifact) {
         String key = artifact.toString();
         File file = artifact_to_file.get(key);
         if (file == null || !file.exists())
@@ -96,8 +82,7 @@
     }
 
     @Override
-    public File getFile(String path)
-    {
+    public File getFile(String path) {
         return filesystem.containsKey(path) ? filesystem.get(path) : super.getFile(path);
     }
 }
