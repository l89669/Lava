--- ../src-base/minecraft/net/minecraftforge/fml/client/config/DummyConfigElement.java
+++ ../src-work/minecraft/net/minecraftforge/fml/client/config/DummyConfigElement.java
@@ -19,27 +19,25 @@
 
 package net.minecraftforge.fml.client.config;
 
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-import java.util.regex.Pattern;
-
 import net.minecraft.client.resources.I18n;
 import net.minecraftforge.fml.client.config.GuiConfigEntries.IConfigEntry;
 import net.minecraftforge.fml.client.config.GuiEditArrayEntries.IArrayEntry;
 
 import javax.annotation.Nullable;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import java.util.regex.Pattern;
 
 
 /**
  * This class's main purpose is to provide the necessary objects for a sample Config GUI for FML, although
- * there may be practical uses for the objects defined here such as using the DummyCategoryElement object as a 
+ * there may be practical uses for the objects defined here such as using the DummyCategoryElement object as a
  * wrapper for a custom IGuiConfigListEntry object that opens a special screen.
- * 
+ *
  * @author bspkrs
  */
-public class DummyConfigElement implements IConfigElement
-{
+public class DummyConfigElement implements IConfigElement {
     protected boolean isProperty = true;
     protected boolean isList = false;
     protected ConfigGuiType type;
@@ -62,39 +60,33 @@
     @Nullable
     protected Class<? extends IConfigEntry> configEntryClass;
     protected Class<? extends IArrayEntry> arrayEntryClass;
-    
+
     /**
-     * This class provides a Dummy Category IConfigElement. It can be used to define a custom list of GUI entries that will 
+     * This class provides a Dummy Category IConfigElement. It can be used to define a custom list of GUI entries that will
      * appear on the child screen or to specify a custom IGuiConfigListEntry for a special category.
      */
-    public static class DummyCategoryElement extends DummyConfigElement
-    {
-        public DummyCategoryElement(String name, String langKey, List<IConfigElement> childElements)
-        {
+    public static class DummyCategoryElement extends DummyConfigElement {
+        public DummyCategoryElement(String name, String langKey, List<IConfigElement> childElements) {
             this(name, langKey, childElements, null);
         }
-        
-        public DummyCategoryElement(String name, String langKey, Class<? extends IConfigEntry> customListEntryClass)
-        {
+
+        public DummyCategoryElement(String name, String langKey, Class<? extends IConfigEntry> customListEntryClass) {
             this(name, langKey, new ArrayList<IConfigElement>(), customListEntryClass);
         }
-        
-        public DummyCategoryElement(String name, String langKey, List<IConfigElement> childElements, @Nullable Class<? extends IConfigEntry> customListEntryClass)
-        {
+
+        public DummyCategoryElement(String name, String langKey, List<IConfigElement> childElements, @Nullable Class<? extends IConfigEntry> customListEntryClass) {
             super(name, null, ConfigGuiType.CONFIG_CATEGORY, langKey);
             this.childElements = childElements;
             this.configEntryClass = customListEntryClass;
             isProperty = false;
         }
     }
-    
+
     /**
-     * This class provides a dummy array-type IConfigElement. 
+     * This class provides a dummy array-type IConfigElement.
      */
-    public static class DummyListElement extends DummyConfigElement
-    {
-        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, boolean isListFixedLength, int maxListLength, @Nullable Pattern validStringPattern, @Nullable Object minValue, @Nullable Object maxValue)
-        {
+    public static class DummyListElement extends DummyConfigElement {
+        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, boolean isListFixedLength, int maxListLength, @Nullable Pattern validStringPattern, @Nullable Object minValue, @Nullable Object maxValue) {
             super(name, null, type, langKey, minValue, maxValue);
             this.defaultValues = defaultValues;
             this.values = defaultValues;
@@ -104,71 +96,58 @@
             isList = true;
         }
 
-        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey)
-        {
+        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey) {
             this(name, defaultValues, type, langKey, false, -1, null, null, null);
         }
 
-        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, boolean isListFixedLength)
-        {
+        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, boolean isListFixedLength) {
             this(name, defaultValues, type, langKey, isListFixedLength, -1, null, null, null);
         }
-        
-        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, int maxListLength)
-        {
+
+        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, int maxListLength) {
             this(name, defaultValues, type, langKey, false, maxListLength, null, null, null);
         }
 
-        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, Object minValue, Object maxValue)
-        {
+        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, Object minValue, Object maxValue) {
             this(name, defaultValues, type, langKey, false, -1, null, minValue, maxValue);
         }
 
-        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, boolean isListFixedLength, Object minValue, Object maxValue)
-        {
+        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, boolean isListFixedLength, Object minValue, Object maxValue) {
             this(name, defaultValues, type, langKey, isListFixedLength, -1, null, minValue, maxValue);
         }
-        
-        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, int maxListLength, Object minValue, Object maxValue)
-        {
+
+        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, int maxListLength, Object minValue, Object maxValue) {
             this(name, defaultValues, type, langKey, false, maxListLength, null, minValue, maxValue);
         }
 
-        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, boolean isListFixedLength, int maxListLength, Object minValue, Object maxValue)
-        {
+        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, boolean isListFixedLength, int maxListLength, Object minValue, Object maxValue) {
             this(name, defaultValues, type, langKey, isListFixedLength, maxListLength, null, minValue, maxValue);
         }
 
-        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, Pattern validStringPattern)
-        {
+        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, Pattern validStringPattern) {
             this(name, defaultValues, type, langKey, false, -1, validStringPattern, null, null);
         }
 
-        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, boolean isListFixedLength, Pattern validStringPattern)
-        {
+        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, boolean isListFixedLength, Pattern validStringPattern) {
             this(name, defaultValues, type, langKey, isListFixedLength, -1, validStringPattern, null, null);
         }
-        
-        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, int maxListLength, Pattern validStringPattern)
-        {
+
+        public DummyListElement(String name, Object[] defaultValues, ConfigGuiType type, String langKey, int maxListLength, Pattern validStringPattern) {
             this(name, defaultValues, type, langKey, false, maxListLength, validStringPattern, null, null);
         }
-        
-        public DummyListElement setCustomEditListEntryClass(Class<? extends IArrayEntry> clazz)
-        {
+
+        public DummyListElement setCustomEditListEntryClass(Class<? extends IArrayEntry> clazz) {
             this.arrayEntryClass = clazz;
             return this;
         }
 
         @Override
-        public Object getDefault()
-        {
+        public Object getDefault() {
             return Arrays.toString(this.defaultValues);
         }
     }
 
-    public DummyConfigElement(String name, Object defaultValue, ConfigGuiType type, String langKey, String[] validValues, String[] validValuesDisplay, Pattern validStringPattern, Object minValue, Object maxValue)
-    {
+    public DummyConfigElement(String name, Object defaultValue, ConfigGuiType type, String langKey, String[] validValues, String[] validValuesDisplay, Pattern validStringPattern, Object minValue, Object maxValue) {
         this.name = name;
         this.defaultValue = defaultValue;
         this.value = defaultValue;
@@ -177,269 +156,222 @@
         this.validValues = validValues;
         this.validValuesDisplay = validValuesDisplay;
         this.validStringPattern = validStringPattern;
-        if (minValue == null)
-        {
+        if (minValue == null) {
             if (type == ConfigGuiType.INTEGER)
                 this.minValue = Integer.MIN_VALUE;
             else if (type == ConfigGuiType.DOUBLE)
                 this.minValue = -Double.MAX_VALUE;
-        }
-        else
+        } else
             this.minValue = minValue;
-        if (maxValue == null)
-        {
+        if (maxValue == null) {
             if (type == ConfigGuiType.INTEGER)
                 this.maxValue = Integer.MAX_VALUE;
             else if (type == ConfigGuiType.DOUBLE)
                 this.maxValue = Double.MAX_VALUE;
-        }
-        else
+        } else
             this.maxValue = maxValue;
     }
 
-    public DummyConfigElement(String name, Object defaultValue, ConfigGuiType type, String langKey, String[] validValues, Pattern validStringPattern, Object minValue, Object maxValue)
-    {
+    public DummyConfigElement(String name, Object defaultValue, ConfigGuiType type, String langKey, String[] validValues, Pattern validStringPattern, Object minValue, Object maxValue) {
         this(name, defaultValue, type, langKey, validValues, null, validStringPattern, minValue, maxValue);
     }
 
-    public DummyConfigElement(String name, Object defaultValue, ConfigGuiType type, String langKey, Pattern validStringPattern)
-    {
+    public DummyConfigElement(String name, Object defaultValue, ConfigGuiType type, String langKey, Pattern validStringPattern) {
         this(name, defaultValue, type, langKey, null, validStringPattern, null, null);
     }
-    
-    public DummyConfigElement(String name, Object defaultValue, ConfigGuiType type, String langKey, String[] validValues)
-    {
+
+    public DummyConfigElement(String name, Object defaultValue, ConfigGuiType type, String langKey, String[] validValues) {
         this(name, defaultValue, type, langKey, validValues, null, null, null);
     }
 
-    public DummyConfigElement(String name, Object defaultValue, ConfigGuiType type, String langKey, String[] validValues, String[] validValuesDisplay)
-    {
+    public DummyConfigElement(String name, Object defaultValue, ConfigGuiType type, String langKey, String[] validValues, String[] validValuesDisplay) {
         this(name, defaultValue, type, langKey, validValues, validValuesDisplay, null, null, null);
     }
 
-    public DummyConfigElement(String name, Object defaultValue, ConfigGuiType type, String langKey)
-    {
+    public DummyConfigElement(String name, Object defaultValue, ConfigGuiType type, String langKey) {
         this(name, defaultValue, type, langKey, null, null, null, null);
     }
-    
-    public DummyConfigElement(String name, Object defaultValue, ConfigGuiType type, String langKey, Object minValue, Object maxValue)
-    {
+
+    public DummyConfigElement(String name, Object defaultValue, ConfigGuiType type, String langKey, Object minValue, Object maxValue) {
         this(name, defaultValue, type, langKey, null, null, minValue, maxValue);
     }
-    
-    public DummyConfigElement setCustomListEntryClass(Class<? extends IConfigEntry> clazz)
-    {
+
+    public DummyConfigElement setCustomListEntryClass(Class<? extends IConfigEntry> clazz) {
         this.configEntryClass = clazz;
         return this;
     }
-    
+
     @Override
-    public boolean isProperty()
-    {
+    public boolean isProperty() {
         return isProperty;
     }
-    
-    public IConfigElement setConfigEntryClass(Class<? extends IConfigEntry> clazz)
-    {
+
+    public IConfigElement setConfigEntryClass(Class<? extends IConfigEntry> clazz) {
         this.configEntryClass = clazz;
         return this;
     }
 
     @Override
-    public Class<? extends IConfigEntry> getConfigEntryClass()
-    {
+    public Class<? extends IConfigEntry> getConfigEntryClass() {
         return configEntryClass;
     }
-    
-    public IConfigElement setArrayEntryClass(Class<? extends IArrayEntry> clazz)
-    {
+
+    public IConfigElement setArrayEntryClass(Class<? extends IArrayEntry> clazz) {
         this.arrayEntryClass = clazz;
         return this;
     }
 
     @Override
-    public Class<? extends IArrayEntry> getArrayEntryClass()
-    {
+    public Class<? extends IArrayEntry> getArrayEntryClass() {
         return arrayEntryClass;
     }
 
     @Override
-    public String getName()
-    {
+    public String getName() {
         return name;
     }
 
     @Override
-    public String getQualifiedName()
-    {
+    public String getQualifiedName() {
         return name;
     }
 
     @Override
-    public String getLanguageKey()
-    {
+    public String getLanguageKey() {
         return langKey;
     }
 
     @Override
-    public String getComment()
-    {
+    public String getComment() {
         return I18n.format(langKey + ".tooltip");
     }
 
     @Override
-    public List<IConfigElement> getChildElements()
-    {
+    public List<IConfigElement> getChildElements() {
         return childElements;
     }
 
     @Override
-    public ConfigGuiType getType()
-    {
+    public ConfigGuiType getType() {
         return type;
     }
 
     @Override
-    public boolean isList()
-    {
+    public boolean isList() {
         return isList;
     }
 
     @Override
-    public boolean isListLengthFixed()
-    {
+    public boolean isListLengthFixed() {
         return this.isListFixedLength;
     }
 
     @Override
-    public int getMaxListLength()
-    {
+    public int getMaxListLength() {
         return this.maxListLength;
     }
 
     @Override
-    public boolean isDefault()
-    {
-        if (isProperty)
-        {
-            if (!isList)
-            {
+    public boolean isDefault() {
+        if (isProperty) {
+            if (!isList) {
                 if (value != null)
                     return value.equals(defaultValue);
                 else
                     return defaultValue == null;
-            }
-            else
-            {
+            } else {
                 return Arrays.deepEquals(values, defaultValues);
             }
         }
-            
+
         return true;
     }
 
     @Override
-    public Object getDefault()
-    {
+    public Object getDefault() {
         return defaultValue;
     }
 
     @Override
-    public Object[] getDefaults()
-    {
+    public Object[] getDefaults() {
         return defaultValues;
     }
 
     @Override
-    public void setToDefault()
-    {
+    public void setToDefault() {
         if (isList)
             this.values = Arrays.copyOf(this.defaultValues, this.defaultValues.length);
         else
             this.value = defaultValue;
     }
-    
-    public IConfigElement setRequiresWorldRestart(boolean requiresWorldRestart)
-    {
+
+    public IConfigElement setRequiresWorldRestart(boolean requiresWorldRestart) {
         this.requiresWorldRestart = requiresWorldRestart;
         return this;
     }
 
     @Override
-    public boolean requiresWorldRestart()
-    {
+    public boolean requiresWorldRestart() {
         return requiresWorldRestart;
     }
 
     @Override
-    public boolean showInGui()
-    {
+    public boolean showInGui() {
         return true;
     }
-    
-    public IConfigElement setRequiresMcRestart(boolean requiresMcRestart)
-    {
+
+    public IConfigElement setRequiresMcRestart(boolean requiresMcRestart) {
         this.requiresMcRestart = this.requiresWorldRestart = requiresMcRestart;
         return this;
     }
 
     @Override
-    public boolean requiresMcRestart()
-    {
+    public boolean requiresMcRestart() {
         return requiresMcRestart;
     }
 
     @Override
-    public String[] getValidValues()
-    {
+    public String[] getValidValues() {
         return validValues;
     }
- 
+
     @Override
-    public String[] getValidValuesDisplay()
-    {
+    public String[] getValidValuesDisplay() {
         return validValuesDisplay;
     }
 
     @Override
-    public Pattern getValidationPattern()
-    {
+    public Pattern getValidationPattern() {
         return validStringPattern;
     }
 
     @Override
-    public Object get()
-    {
+    public Object get() {
         return value;
     }
 
     @Override
-    public Object[] getList()
-    {
+    public Object[] getList() {
         return values;
     }
 
     @Override
-    public void set(Object value)
-    {
+    public void set(Object value) {
         defaultValue = value;
     }
 
     @Override
-    public void set(Object[] aVal)
-    {
+    public void set(Object[] aVal) {
         defaultValues = aVal;
     }
 
     @Override
-    public Object getMinValue()
-    {
+    public Object getMinValue() {
         return minValue;
     }
 
     @Override
-    public Object getMaxValue()
-    {
+    public Object getMaxValue() {
         return maxValue;
     }
 }
