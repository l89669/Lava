--- ../src-base/minecraft/net/minecraftforge/fml/client/FMLFileResourcePack.java
+++ ../src-work/minecraft/net/minecraftforge/fml/client/FMLFileResourcePack.java
@@ -19,68 +19,56 @@
 
 package net.minecraftforge.fml.client;
 
+import net.minecraft.client.resources.FileResourcePack;
+import net.minecraftforge.fml.common.FMLContainerHolder;
+import net.minecraftforge.fml.common.FMLLog;
+import net.minecraftforge.fml.common.ModContainer;
+
+import javax.imageio.ImageIO;
 import java.awt.image.BufferedImage;
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.nio.charset.StandardCharsets;
 
-import net.minecraftforge.fml.common.FMLLog;
-import org.apache.logging.log4j.LogManager;
-
-import javax.imageio.ImageIO;
-
-import net.minecraft.client.resources.FileResourcePack;
-import net.minecraftforge.fml.common.FMLContainerHolder;
-import net.minecraftforge.fml.common.ModContainer;
-
 public class FMLFileResourcePack extends FileResourcePack implements FMLContainerHolder {
 
     private ModContainer container;
 
-    public FMLFileResourcePack(ModContainer container)
-    {
+    public FMLFileResourcePack(ModContainer container) {
         super(container.getSource());
         this.container = container;
     }
 
     @Override
-    public String getPackName()
-    {
-        return "FMLFileResourcePack:"+container.getName();
+    public String getPackName() {
+        return "FMLFileResourcePack:" + container.getName();
     }
+
     @Override
-    protected InputStream getInputStreamByName(String resourceName) throws IOException
-    {
-        try
-        {
+    protected InputStream getInputStreamByName(String resourceName) throws IOException {
+        try {
             return super.getInputStreamByName(resourceName);
-        }
-        catch (IOException ioe)
-        {
-            if ("pack.mcmeta".equals(resourceName))
-            {
+        } catch (IOException ioe) {
+            if ("pack.mcmeta".equals(resourceName)) {
                 FMLLog.log.debug("Mod {} is missing a pack.mcmeta file, substituting a dummy one", container.getName());
                 return new ByteArrayInputStream(("{\n" +
-                        " \"pack\": {\n"+
-                        "   \"description\": \"dummy FML pack for "+container.getName()+"\",\n"+
-                        "   \"pack_format\": 2\n"+
+                        " \"pack\": {\n" +
+                        "   \"description\": \"dummy FML pack for " + container.getName() + "\",\n" +
+                        "   \"pack_format\": 2\n" +
                         "}\n" +
                         "}").getBytes(StandardCharsets.UTF_8));
-            }
-            else throw ioe;
+            } else throw ioe;
         }
     }
 
     @Override
-    public BufferedImage getPackImage() throws IOException
-    {
+    public BufferedImage getPackImage() throws IOException {
         return ImageIO.read(getInputStreamByName(container.getMetadata().logoFile));
     }
 
     @Override
-    public ModContainer getFMLContainer()
-    {
+    public ModContainer getFMLContainer() {
         return container;
     }
 }
