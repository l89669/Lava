--- ../src-base/minecraft/net/minecraftforge/fml/client/event/ConfigChangedEvent.java
+++ ../src-work/minecraft/net/minecraftforge/fml/client/event/ConfigChangedEvent.java
@@ -27,25 +27,23 @@
 /**
  * These events are posted from the GuiConfig screen when the done button is pressed. The events are only posted
  * if the parent screen is not an instance of GuiConfig or if the configID field has been set for
- * the GuiConfig screen. 
- * 
+ * the GuiConfig screen.
+ * <p>
  * Listeners for this event should use OnConfigChanged or PostConfigChanged and check for a specific mod ID.
  * For best results the listener should refresh any objects/fields that are set based on the mod's config
  * and should serialize the modified config.
- * 
+ *
  * @author bspkrs
  */
 @HasResult
-public class ConfigChangedEvent extends Event
-{
-    private final String  modID;
+public class ConfigChangedEvent extends Event {
+    private final String modID;
     private final boolean isWorldRunning;
     private final boolean requiresMcRestart;
     @Nullable
     private final String configID;
 
-    public ConfigChangedEvent(String modID, @Nullable String configID, boolean isWorldRunning, boolean requiresMcRestart)
-    {
+    public ConfigChangedEvent(String modID, @Nullable String configID, boolean isWorldRunning, boolean requiresMcRestart) {
         this.modID = modID;
         this.configID = configID;
         this.isWorldRunning = isWorldRunning;
@@ -55,24 +53,21 @@
     /**
      * The Mod ID of the mod whose configuration just changed.
      */
-    public String getModID()
-    {
+    public String getModID() {
         return modID;
     }
 
     /**
      * Whether or not a world is currently running.
      */
-    public boolean isWorldRunning()
-    {
+    public boolean isWorldRunning() {
         return isWorldRunning;
     }
 
     /**
      * Will be set to true if any elements were changed that require a restart of Minecraft.
      */
-    public boolean isRequiresMcRestart()
-    {
+    public boolean isRequiresMcRestart() {
         return requiresMcRestart;
     }
 
@@ -80,8 +75,7 @@
      * A String identifier for this ConfigChangedEvent.
      */
     @Nullable
-    public String getConfigID()
-    {
+    public String getConfigID() {
         return configID;
     }
 
@@ -90,26 +84,22 @@
      * has been clicked on a GuiConfig screen and the following conditions are met:<br/>
      * - at least one config element has been changed<br/>
      * - one of these 2 conditions are met:<br/>
-     *      1) the parent screen is null or is not an instance of GuiConfig<br/>
-     *      2) the configID field has been set to a non-null value for the GuiConfig screen<br/><br/>
+     * 1) the parent screen is null or is not an instance of GuiConfig<br/>
+     * 2) the configID field has been set to a non-null value for the GuiConfig screen<br/><br/>
      * Modders should check the modID field of the event to ensure they are only acting on their own config screen's event!
      */
-    public static class OnConfigChangedEvent extends ConfigChangedEvent
-    {
-        public OnConfigChangedEvent(String modID, @Nullable String configID, boolean isWorldRunning, boolean requiresMcRestart)
-        {
+    public static class OnConfigChangedEvent extends ConfigChangedEvent {
+        public OnConfigChangedEvent(String modID, @Nullable String configID, boolean isWorldRunning, boolean requiresMcRestart) {
             super(modID, configID, isWorldRunning, requiresMcRestart);
         }
     }
-    
+
     /**
      * This event is provided for mods to consume if they want to be able to check if other mods' configs have been changed.
      * This event only fires if the OnConfigChangedEvent result is not DENY.
      */
-    public static class PostConfigChangedEvent extends ConfigChangedEvent
-    {
-        public PostConfigChangedEvent(String modID, @Nullable String configID, boolean isWorldRunning, boolean requiresMcRestart)
-        {
+    public static class PostConfigChangedEvent extends ConfigChangedEvent {
+        public PostConfigChangedEvent(String modID, @Nullable String configID, boolean isWorldRunning, boolean requiresMcRestart) {
             super(modID, configID, isWorldRunning, requiresMcRestart);
         }
     }
