--- ../src-base/minecraft/net/minecraftforge/fml/common/gameevent/PlayerEvent.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/gameevent/PlayerEvent.java
@@ -29,8 +29,8 @@
 
 public class PlayerEvent extends Event {
     public final EntityPlayer player;
-    private PlayerEvent(EntityPlayer player)
-    {
+
+    private PlayerEvent(EntityPlayer player) {
         this.player = player;
     }
 
@@ -38,15 +38,15 @@
         @Deprecated
         public final EntityItem pickedUp;
         /**
-        * Original EntityItem with current remaining stack size
-        */
+         * Original EntityItem with current remaining stack size
+         */
         private final EntityItem originalEntity;
         /**
          * Clone item stack, containing the item and amount picked up
          */
         private final ItemStack stack;
-        public ItemPickupEvent(EntityPlayer player, EntityItem entPickedUp, ItemStack stack)
-        {
+
+        public ItemPickupEvent(EntityPlayer player, EntityItem entPickedUp, ItemStack stack) {
             super(player);
             this.originalEntity = entPickedUp;
             this.pickedUp = entPickedUp;
@@ -66,33 +66,32 @@
         @Nonnull
         public final ItemStack crafting;
         public final IInventory craftMatrix;
-        public ItemCraftedEvent(EntityPlayer player, @Nonnull ItemStack crafting, IInventory craftMatrix)
-        {
+
+        public ItemCraftedEvent(EntityPlayer player, @Nonnull ItemStack crafting, IInventory craftMatrix) {
             super(player);
             this.crafting = crafting;
             this.craftMatrix = craftMatrix;
         }
     }
+
     public static class ItemSmeltedEvent extends PlayerEvent {
         @Nonnull
         public final ItemStack smelting;
-        public ItemSmeltedEvent(EntityPlayer player, @Nonnull ItemStack crafting)
-        {
+
+        public ItemSmeltedEvent(EntityPlayer player, @Nonnull ItemStack crafting) {
             super(player);
             this.smelting = crafting;
         }
     }
 
     public static class PlayerLoggedInEvent extends PlayerEvent {
-        public PlayerLoggedInEvent(EntityPlayer player)
-        {
+        public PlayerLoggedInEvent(EntityPlayer player) {
             super(player);
         }
     }
 
     public static class PlayerLoggedOutEvent extends PlayerEvent {
-        public PlayerLoggedOutEvent(EntityPlayer player)
-        {
+        public PlayerLoggedOutEvent(EntityPlayer player) {
             super(player);
         }
     }
@@ -100,18 +99,17 @@
     public static class PlayerRespawnEvent extends PlayerEvent {
         private final boolean endConquered;
 
-        public PlayerRespawnEvent(EntityPlayer player, boolean endConquered)
-        {
+        public PlayerRespawnEvent(EntityPlayer player, boolean endConquered) {
             super(player);
             this.endConquered = endConquered;
         }
 
         /**
          * Did this respawn event come from the player conquering the end?
+         *
          * @return if this respawn was because the player conquered the end
          */
-        public boolean isEndConquered()
-        {
+        public boolean isEndConquered() {
             return this.endConquered;
         }
 
@@ -121,8 +119,8 @@
     public static class PlayerChangedDimensionEvent extends PlayerEvent {
         public final int fromDim;
         public final int toDim;
-        public PlayerChangedDimensionEvent(EntityPlayer player, int fromDim, int toDim)
-        {
+
+        public PlayerChangedDimensionEvent(EntityPlayer player, int fromDim, int toDim) {
             super(player);
             this.fromDim = fromDim;
             this.toDim = toDim;
