--- ../src-base/minecraft/net/minecraftforge/fml/common/discovery/asm/ModAnnotationVisitor.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/discovery/asm/ModAnnotationVisitor.java
@@ -22,66 +22,57 @@
 import org.objectweb.asm.AnnotationVisitor;
 import org.objectweb.asm.Opcodes;
 
-public class ModAnnotationVisitor extends AnnotationVisitor
-{
+public class ModAnnotationVisitor extends AnnotationVisitor {
     private ASMModParser discoverer;
     private boolean array;
     private String name;
     private boolean isSubAnnotation;
 
-    public ModAnnotationVisitor(ASMModParser discoverer)
-    {
+    public ModAnnotationVisitor(ASMModParser discoverer) {
         super(Opcodes.ASM5);
         this.discoverer = discoverer;
     }
 
-    public ModAnnotationVisitor(ASMModParser discoverer, String name)
-    {
+    public ModAnnotationVisitor(ASMModParser discoverer, String name) {
         this(discoverer);
         this.array = true;
         this.name = name;
         discoverer.addAnnotationArray(name);
     }
 
-    public ModAnnotationVisitor(ASMModParser discoverer, boolean isSubAnnotation)
-    {
+    public ModAnnotationVisitor(ASMModParser discoverer, boolean isSubAnnotation) {
         this(discoverer);
         this.isSubAnnotation = true;
     }
 
     @Override
-    public void visit(String key, Object value)
-    {
+    public void visit(String key, Object value) {
         discoverer.addAnnotationProperty(key, value);
     }
 
     @Override
-    public void visitEnum(String name, String desc, String value)
-    {
+    public void visitEnum(String name, String desc, String value) {
         discoverer.addAnnotationEnumProperty(name, desc, value);
     }
 
     @Override
-    public AnnotationVisitor visitArray(String name)
-    {
+    public AnnotationVisitor visitArray(String name) {
         return new ModAnnotationVisitor(discoverer, name);
     }
+
     @Override
-    public AnnotationVisitor visitAnnotation(String name, String desc)
-    {
+    public AnnotationVisitor visitAnnotation(String name, String desc) {
         discoverer.addSubAnnotation(name, desc);
         return new ModAnnotationVisitor(discoverer, true);
     }
+
     @Override
-    public void visitEnd()
-    {
-        if (array)
-        {
+    public void visitEnd() {
+        if (array) {
             discoverer.endArray();
         }
 
-        if (isSubAnnotation)
-        {
+        if (isSubAnnotation) {
             discoverer.endSubAnnotation();
         }
     }
