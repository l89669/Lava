--- ../src-base/minecraft/net/minecraftforge/fml/common/discovery/asm/ModAnnotation.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/discovery/asm/ModAnnotation.java
@@ -19,113 +19,101 @@
 
 package net.minecraftforge.fml.common.discovery.asm;
 
-import java.util.ArrayList;
-import java.util.Map;
-
-import net.minecraftforge.fml.common.discovery.asm.ASMModParser.AnnotationType;
-
-import org.objectweb.asm.Type;
-
 import com.google.common.base.MoreObjects;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
+import net.minecraftforge.fml.common.discovery.asm.ASMModParser.AnnotationType;
+import org.objectweb.asm.Type;
 
-public class ModAnnotation
-{
-    public static class EnumHolder
-    {
+import java.util.ArrayList;
+import java.util.Map;
+
+public class ModAnnotation {
+    public static class EnumHolder {
         private final String desc;
         private final String value;
 
-        public EnumHolder(String desc, String value)
-        {
+        public EnumHolder(String desc, String value) {
             this.desc = desc;
             this.value = value;
         }
 
-        public String getDesc()
-        {
+        public String getDesc() {
             return desc;
         }
 
-        public String getValue()
-        {
+        public String getValue() {
             return value;
         }
     }
+
     AnnotationType type;
     Type asmType;
     String member;
-    Map<String,Object> values = Maps.newHashMap();
+    Map<String, Object> values = Maps.newHashMap();
     private ArrayList<Object> arrayList;
     private String arrayName;
-    public ModAnnotation(AnnotationType type, Type asmType, String member)
-    {
+
+    public ModAnnotation(AnnotationType type, Type asmType, String member) {
         this.type = type;
         this.asmType = asmType;
         this.member = member;
     }
 
-    public ModAnnotation(AnnotationType type, Type asmType, ModAnnotation parent)
-    {
+    public ModAnnotation(AnnotationType type, Type asmType, ModAnnotation parent) {
         this.type = type;
         this.asmType = asmType;
     }
+
     @Override
-    public String toString()
-    {
+    public String toString() {
         return MoreObjects.toStringHelper("Annotation")
-                .add("type",type)
-                .add("name",asmType.getClassName())
-                .add("member",member)
+                .add("type", type)
+                .add("name", asmType.getClassName())
+                .add("member", member)
                 .add("values", values)
                 .toString();
     }
-    public AnnotationType getType()
-    {
+
+    public AnnotationType getType() {
         return type;
     }
-    public Type getASMType()
-    {
+
+    public Type getASMType() {
         return asmType;
     }
-    public String getMember()
-    {
+
+    public String getMember() {
         return member;
     }
-    public Map<String, Object> getValues()
-    {
+
+    public Map<String, Object> getValues() {
         return values;
     }
-    public void addArray(String name)
-    {
+
+    public void addArray(String name) {
         this.arrayList = Lists.newArrayList();
         this.arrayName = name;
     }
-    public void addProperty(String key, Object value)
-    {
-        if (this.arrayList != null)
-        {
+
+    public void addProperty(String key, Object value) {
+        if (this.arrayList != null) {
             arrayList.add(value);
-        }
-        else
-        {
+        } else {
             values.put(key, value);
         }
     }
 
-    public void addEnumProperty(String key, String enumName, String value)
-    {
+    public void addEnumProperty(String key, String enumName, String value) {
         addProperty(key, new EnumHolder(enumName, value));
     }
 
-    public void endArray()
-    {
+    public void endArray() {
         values.put(arrayName, arrayList);
         arrayList = null;
     }
-    public ModAnnotation addChildAnnotation(String name, String desc)
-    {
+
+    public ModAnnotation addChildAnnotation(String name, String desc) {
         ModAnnotation child = new ModAnnotation(AnnotationType.SUBTYPE, Type.getType(desc), this);
         addProperty(name, child.getValues());
         return child;
