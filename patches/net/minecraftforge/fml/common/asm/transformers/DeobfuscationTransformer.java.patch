--- ../src-base/minecraft/net/minecraftforge/fml/common/asm/transformers/DeobfuscationTransformer.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/asm/transformers/DeobfuscationTransformer.java
@@ -19,21 +19,19 @@
 
 package net.minecraftforge.fml.common.asm.transformers;
 
-import java.util.Arrays;
-
 import net.minecraft.launchwrapper.IClassNameTransformer;
 import net.minecraft.launchwrapper.IClassTransformer;
 import net.minecraft.launchwrapper.Launch;
-
 import net.minecraftforge.fml.common.asm.transformers.deobf.FMLDeobfuscatingRemapper;
 import net.minecraftforge.fml.common.asm.transformers.deobf.FMLRemappingAdapter;
-
 import org.objectweb.asm.ClassReader;
 import org.objectweb.asm.ClassWriter;
 import org.objectweb.asm.commons.RemappingClassAdapter;
 
+import java.util.Arrays;
+
 public class DeobfuscationTransformer implements IClassTransformer, IClassNameTransformer {
-    private static final String[] EXEMPT_LIBS = new String[] {
+    private static final String[] EXEMPT_LIBS = new String[]{
             "com.google.",
             "com.mojang.",
             "joptsimple.",
@@ -45,7 +43,7 @@
             "paulscode.",
             "com.jcraft"
     };
-    private static final String[] EXEMPT_DEV = new String[] {
+    private static final String[] EXEMPT_DEV = new String[]{
             "net.minecraft.",
             "net.minecraftforge."
     };
@@ -61,10 +59,8 @@
     private boolean deobfuscatedEnvironment = (Boolean) Launch.blackboard.get("fml.deobfuscatedEnvironment");
 
     @Override
-    public byte[] transform(String name, String transformedName, byte[] bytes)
-    {
-        if (bytes == null)
-        {
+    public byte[] transform(String name, String transformedName, byte[] bytes) {
+        if (bytes == null) {
             return null;
         }
 
@@ -77,30 +73,24 @@
         return classWriter.toByteArray();
     }
 
-    private boolean shouldTransform(String name)
-    {
+    private boolean shouldTransform(String name) {
         boolean transformLib = Arrays.stream(EXEMPT_LIBS).noneMatch(name::startsWith);
 
-        if (deobfuscatedEnvironment)
-        {
+        if (deobfuscatedEnvironment) {
             return transformLib && Arrays.stream(EXEMPT_DEV).noneMatch(name::startsWith);
-        }
-        else
-        {
+        } else {
             return transformLib;
         }
     }
 
     @Override
-    public String remapClassName(String name)
-    {
-        return FMLDeobfuscatingRemapper.INSTANCE.map(name.replace('.','/')).replace('/', '.');
+    public String remapClassName(String name) {
+        return FMLDeobfuscatingRemapper.INSTANCE.map(name.replace('.', '/')).replace('/', '.');
     }
 
     @Override
-    public String unmapClassName(String name)
-    {
-        return FMLDeobfuscatingRemapper.INSTANCE.unmap(name.replace('.', '/')).replace('/','.');
+    public String unmapClassName(String name) {
+        return FMLDeobfuscatingRemapper.INSTANCE.unmap(name.replace('.', '/')).replace('/', '.');
     }
 
 }
