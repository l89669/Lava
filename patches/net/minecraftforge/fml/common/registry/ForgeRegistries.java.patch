--- ../src-base/minecraft/net/minecraftforge/fml/common/registry/ForgeRegistries.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/registry/ForgeRegistries.java
@@ -38,28 +38,28 @@
  * Created to have a central place to access the registries directly if modders need.
  * It is still advised that if you are registering things to go through {@link GameRegistry} register methods, but queries and iterations can use this.
  */
-public class ForgeRegistries
-{
-    static { init(); } // This must be above the fields so we guarantee it's run before findRegistry is called. Yay static inializers
+public class ForgeRegistries {
+    static {
+        init();
+    } // This must be above the fields so we guarantee it's run before findRegistry is called. Yay static inializers
 
-    public static final IForgeRegistry<Block>        BLOCKS       = GameRegistry.findRegistry(Block.class);
-    public static final IForgeRegistry<Item>         ITEMS        = GameRegistry.findRegistry(Item.class);
-    public static final IForgeRegistry<Potion>       POTIONS      = GameRegistry.findRegistry(Potion.class);
-    public static final IForgeRegistry<Biome>        BIOMES       = GameRegistry.findRegistry(Biome.class);
-    public static final IForgeRegistry<SoundEvent>   SOUND_EVENTS = GameRegistry.findRegistry(SoundEvent.class);
-    public static final IForgeRegistry<PotionType>   POTION_TYPES = GameRegistry.findRegistry(PotionType.class);
-    public static final IForgeRegistry<Enchantment>  ENCHANTMENTS = GameRegistry.findRegistry(Enchantment.class);
+    public static final IForgeRegistry<Block> BLOCKS = GameRegistry.findRegistry(Block.class);
+    public static final IForgeRegistry<Item> ITEMS = GameRegistry.findRegistry(Item.class);
+    public static final IForgeRegistry<Potion> POTIONS = GameRegistry.findRegistry(Potion.class);
+    public static final IForgeRegistry<Biome> BIOMES = GameRegistry.findRegistry(Biome.class);
+    public static final IForgeRegistry<SoundEvent> SOUND_EVENTS = GameRegistry.findRegistry(SoundEvent.class);
+    public static final IForgeRegistry<PotionType> POTION_TYPES = GameRegistry.findRegistry(PotionType.class);
+    public static final IForgeRegistry<Enchantment> ENCHANTMENTS = GameRegistry.findRegistry(Enchantment.class);
     public static final IForgeRegistry<VillagerProfession> VILLAGER_PROFESSIONS = GameRegistry.findRegistry(VillagerProfession.class);
-    public static final IForgeRegistry<EntityEntry>  ENTITIES     = GameRegistry.findRegistry(EntityEntry.class);
-    public static final IForgeRegistry<IRecipe>      RECIPES      = GameRegistry.findRegistry(IRecipe.class);
+    public static final IForgeRegistry<EntityEntry> ENTITIES = GameRegistry.findRegistry(EntityEntry.class);
+    public static final IForgeRegistry<IRecipe> RECIPES = GameRegistry.findRegistry(IRecipe.class);
     public static final IForgeRegistry<DataSerializerEntry> DATA_SERIALIZERS = GameRegistry.findRegistry(DataSerializerEntry.class);
 
 
     /**
      * This function is just to make sure static inializers in other classes have run and setup their registries before we query them.
      */
-    private static void init()
-    {
+    private static void init() {
         GameData.init();
         VillagerRegistry.instance();
         Bootstrap.register();
