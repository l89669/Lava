--- ../src-base/minecraft/net/minecraftforge/items/wrapper/PlayerArmorInvWrapper.java
+++ ../src-work/minecraft/net/minecraftforge/items/wrapper/PlayerArmorInvWrapper.java
@@ -25,39 +25,32 @@
 
 import javax.annotation.Nonnull;
 
-public class PlayerArmorInvWrapper extends RangedWrapper
-{
+public class PlayerArmorInvWrapper extends RangedWrapper {
     private final InventoryPlayer inventoryPlayer;
 
-    public PlayerArmorInvWrapper(InventoryPlayer inv)
-    {
+    public PlayerArmorInvWrapper(InventoryPlayer inv) {
         super(new InvWrapper(inv), inv.mainInventory.size(), inv.mainInventory.size() + inv.armorInventory.size());
         inventoryPlayer = inv;
     }
 
     @Override
     @Nonnull
-    public ItemStack insertItem(int slot, @Nonnull ItemStack stack, boolean simulate)
-    {
+    public ItemStack insertItem(int slot, @Nonnull ItemStack stack, boolean simulate) {
         EntityEquipmentSlot equ = null;
-        for (EntityEquipmentSlot s : EntityEquipmentSlot.values())
-        {
-            if (s.getSlotType() == EntityEquipmentSlot.Type.ARMOR && s.getIndex() == slot)
-            {
+        for (EntityEquipmentSlot s : EntityEquipmentSlot.values()) {
+            if (s.getSlotType() == EntityEquipmentSlot.Type.ARMOR && s.getIndex() == slot) {
                 equ = s;
                 break;
             }
         }
         // check if it's valid for the armor slot
-        if (equ != null && slot < 4 && !stack.isEmpty() && stack.getItem().isValidArmor(stack, equ, getInventoryPlayer().player))
-        {
+        if (equ != null && slot < 4 && !stack.isEmpty() && stack.getItem().isValidArmor(stack, equ, getInventoryPlayer().player)) {
             return super.insertItem(slot, stack, simulate);
         }
         return stack;
     }
 
-    public InventoryPlayer getInventoryPlayer()
-    {
+    public InventoryPlayer getInventoryPlayer() {
         return inventoryPlayer;
     }
 }
