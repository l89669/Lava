--- ../src-base/minecraft/net/minecraftforge/items/wrapper/PlayerMainInvWrapper.java
+++ ../src-work/minecraft/net/minecraftforge/items/wrapper/PlayerMainInvWrapper.java
@@ -29,32 +29,25 @@
  * Exposes the player inventory WITHOUT the armor inventory as IItemHandler.
  * Also takes core of inserting/extracting having the same logic as picking up items.
  */
-public class PlayerMainInvWrapper extends RangedWrapper
-{
+public class PlayerMainInvWrapper extends RangedWrapper {
     private final InventoryPlayer inventoryPlayer;
 
-    public PlayerMainInvWrapper(InventoryPlayer inv)
-    {
+    public PlayerMainInvWrapper(InventoryPlayer inv) {
         super(new InvWrapper(inv), 0, inv.mainInventory.size());
         inventoryPlayer = inv;
     }
 
     @Override
     @Nonnull
-    public ItemStack insertItem(int slot, @Nonnull ItemStack stack, boolean simulate)
-    {
+    public ItemStack insertItem(int slot, @Nonnull ItemStack stack, boolean simulate) {
         ItemStack rest = super.insertItem(slot, stack, simulate);
-        if (rest.getCount()!= stack.getCount())
-        {
+        if (rest.getCount() != stack.getCount()) {
             // the stack in the slot changed, animate it
             ItemStack inSlot = getStackInSlot(slot);
-            if(!inSlot.isEmpty())
-            {
-                if (getInventoryPlayer().player.world.isRemote)
-                {
+            if (!inSlot.isEmpty()) {
+                if (getInventoryPlayer().player.world.isRemote) {
                     inSlot.setAnimationsToGo(5);
-                }
-                else if(getInventoryPlayer().player instanceof EntityPlayerMP) {
+                } else if (getInventoryPlayer().player instanceof EntityPlayerMP) {
                     getInventoryPlayer().player.openContainer.detectAndSendChanges();
                 }
             }
@@ -62,8 +55,7 @@
         return rest;
     }
 
-    public InventoryPlayer getInventoryPlayer()
-    {
+    public InventoryPlayer getInventoryPlayer() {
         return inventoryPlayer;
     }
 }
