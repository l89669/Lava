--- ../src-base/minecraft/net/minecraftforge/items/CapabilityItemHandler.java
+++ ../src-work/minecraft/net/minecraftforge/items/CapabilityItemHandler.java
@@ -28,27 +28,19 @@
 import net.minecraftforge.common.capabilities.CapabilityInject;
 import net.minecraftforge.common.capabilities.CapabilityManager;
 
-import java.util.concurrent.Callable;
-
-public class CapabilityItemHandler
-{
+public class CapabilityItemHandler {
     @CapabilityInject(IItemHandler.class)
     public static Capability<IItemHandler> ITEM_HANDLER_CAPABILITY = null;
 
-    public static void register()
-    {
-        CapabilityManager.INSTANCE.register(IItemHandler.class, new Capability.IStorage<IItemHandler>()
-        {
+    public static void register() {
+        CapabilityManager.INSTANCE.register(IItemHandler.class, new Capability.IStorage<IItemHandler>() {
             @Override
-            public NBTBase writeNBT(Capability<IItemHandler> capability, IItemHandler instance, EnumFacing side)
-            {
+            public NBTBase writeNBT(Capability<IItemHandler> capability, IItemHandler instance, EnumFacing side) {
                 NBTTagList nbtTagList = new NBTTagList();
                 int size = instance.getSlots();
-                for (int i = 0; i < size; i++)
-                {
+                for (int i = 0; i < size; i++) {
                     ItemStack stack = instance.getStackInSlot(i);
-                    if (!stack.isEmpty())
-                    {
+                    if (!stack.isEmpty()) {
                         NBTTagCompound itemTag = new NBTTagCompound();
                         itemTag.setInteger("Slot", i);
                         stack.writeToNBT(itemTag);
@@ -59,19 +51,16 @@
             }
 
             @Override
-            public void readNBT(Capability<IItemHandler> capability, IItemHandler instance, EnumFacing side, NBTBase base)
-            {
+            public void readNBT(Capability<IItemHandler> capability, IItemHandler instance, EnumFacing side, NBTBase base) {
                 if (!(instance instanceof IItemHandlerModifiable))
                     throw new RuntimeException("IItemHandler instance does not implement IItemHandlerModifiable");
                 IItemHandlerModifiable itemHandlerModifiable = (IItemHandlerModifiable) instance;
                 NBTTagList tagList = (NBTTagList) base;
-                for (int i = 0; i < tagList.tagCount(); i++)
-                {
+                for (int i = 0; i < tagList.tagCount(); i++) {
                     NBTTagCompound itemTags = tagList.getCompoundTagAt(i);
                     int j = itemTags.getInteger("Slot");
 
-                    if (j >= 0 && j < instance.getSlots())
-                    {
+                    if (j >= 0 && j < instance.getSlots()) {
                         itemHandlerModifiable.setStackInSlot(j, new ItemStack(itemTags));
                     }
                 }
