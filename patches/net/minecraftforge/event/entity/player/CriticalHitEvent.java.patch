--- ../src-base/minecraft/net/minecraftforge/event/entity/player/CriticalHitEvent.java
+++ ../src-work/minecraft/net/minecraftforge/event/entity/player/CriticalHitEvent.java
@@ -19,11 +19,11 @@
 
 package net.minecraftforge.event.entity.player;
 
-import net.minecraftforge.fml.common.eventhandler.Event.HasResult;
-import net.minecraftforge.fml.common.eventhandler.Cancelable;
-import net.minecraftforge.common.MinecraftForge;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.player.EntityPlayer;
+import net.minecraftforge.common.MinecraftForge;
+import net.minecraftforge.fml.common.eventhandler.Cancelable;
+import net.minecraftforge.fml.common.eventhandler.Event.HasResult;
 
 /**
  * This event is fired whenever a player attacks an Entity in
@@ -39,62 +39,55 @@
  * This event is fired on the {@link MinecraftForge#EVENT_BUS}.
  **/
 @HasResult
-public class CriticalHitEvent extends PlayerEvent
-{
+public class CriticalHitEvent extends PlayerEvent {
     private float damageModifier;
     private final float oldDamageModifier;
     private final Entity target;
     private final boolean vanillaCritical;
-    
-    public CriticalHitEvent(EntityPlayer player, Entity target, float damageModifier, boolean vanillaCritical)
-    {
+
+    public CriticalHitEvent(EntityPlayer player, Entity target, float damageModifier, boolean vanillaCritical) {
         super(player);
         this.target = target;
         this.damageModifier = damageModifier;
         this.oldDamageModifier = damageModifier;
         this.vanillaCritical = vanillaCritical;
     }
-    
+
     /**
-    * The Entity that was damaged by the player.
-    */
-    public Entity getTarget()
-    {
+     * The Entity that was damaged by the player.
+     */
+    public Entity getTarget() {
         return target;
     }
-    
+
     /**
-    * This set the damage multiplier for the hit.
-    * If you set it to 0, then the particles are still generated but damage is not done.
-    */
-    public void setDamageModifier(float mod)
-    {
+     * This set the damage multiplier for the hit.
+     * If you set it to 0, then the particles are still generated but damage is not done.
+     */
+    public void setDamageModifier(float mod) {
         this.damageModifier = mod;
     }
-    
+
     /**
-    * The damage modifier for the hit.<br>
-    * This is by default 1.5F for ciritcal hits and 1F for normal hits .
-    */
-    public float getDamageModifier()
-    {
+     * The damage modifier for the hit.<br>
+     * This is by default 1.5F for ciritcal hits and 1F for normal hits .
+     */
+    public float getDamageModifier() {
         return this.damageModifier;
     }
 
     /**
-    * The orignal damage modifier for the hit wthout any changes.<br>
-    * This is 1.5F for ciritcal hits and 1F for normal hits .
-    */
-    public float getOldDamageModifier()
-    {
+     * The orignal damage modifier for the hit wthout any changes.<br>
+     * This is 1.5F for ciritcal hits and 1F for normal hits .
+     */
+    public float getOldDamageModifier() {
         return this.oldDamageModifier;
     }
-    
+
     /**
-    * Returns true if this hit was critical by vanilla
-    */
-    public boolean isVanillaCritical()
-    {
+     * Returns true if this hit was critical by vanilla
+     */
+    public boolean isVanillaCritical() {
         return vanillaCritical;
     }
 }
