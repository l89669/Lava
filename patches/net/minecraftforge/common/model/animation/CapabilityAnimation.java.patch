--- ../src-base/minecraft/net/minecraftforge/common/model/animation/CapabilityAnimation.java
+++ ../src-work/minecraft/net/minecraftforge/common/model/animation/CapabilityAnimation.java
@@ -19,8 +19,6 @@
 
 package net.minecraftforge.common.model.animation;
 
-import java.util.concurrent.Callable;
-
 import net.minecraft.nbt.NBTBase;
 import net.minecraft.util.EnumFacing;
 import net.minecraftforge.common.capabilities.Capability;
@@ -31,47 +29,39 @@
 import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
 
-public class CapabilityAnimation
-{
+public class CapabilityAnimation {
     @CapabilityInject(IAnimationStateMachine.class)
     public static Capability<IAnimationStateMachine> ANIMATION_CAPABILITY = null;
 
-    public static void register()
-    {
-        CapabilityManager.INSTANCE.register(IAnimationStateMachine.class, new Capability.IStorage<IAnimationStateMachine>()
-        {
+    public static void register() {
+        CapabilityManager.INSTANCE.register(IAnimationStateMachine.class, new Capability.IStorage<IAnimationStateMachine>() {
             @Override
-            public NBTBase writeNBT(Capability<IAnimationStateMachine> capability, IAnimationStateMachine instance, EnumFacing side)
-            {
+            public NBTBase writeNBT(Capability<IAnimationStateMachine> capability, IAnimationStateMachine instance, EnumFacing side) {
                 return null;
             }
 
             @Override
-            public void readNBT(Capability<IAnimationStateMachine> capability, IAnimationStateMachine instance, EnumFacing side, NBTBase nbt) {}
+            public void readNBT(Capability<IAnimationStateMachine> capability, IAnimationStateMachine instance, EnumFacing side, NBTBase nbt) {
+            }
         }, AnimationStateMachine::getMissing);
     }
 
-    public static class DefaultItemAnimationCapabilityProvider implements ICapabilityProvider
-    {
+    public static class DefaultItemAnimationCapabilityProvider implements ICapabilityProvider {
         private final IAnimationStateMachine asm;
 
-        public DefaultItemAnimationCapabilityProvider(IAnimationStateMachine asm)
-        {
+        public DefaultItemAnimationCapabilityProvider(IAnimationStateMachine asm) {
             this.asm = asm;
         }
 
         @Override
-        public boolean hasCapability(@Nonnull Capability<?> capability, @Nullable EnumFacing facing)
-        {
+        public boolean hasCapability(@Nonnull Capability<?> capability, @Nullable EnumFacing facing) {
             return capability == ANIMATION_CAPABILITY;
         }
 
         @Override
         @Nullable
-        public <T> T getCapability(@Nonnull Capability<T> capability, @Nullable EnumFacing facing)
-        {
-            if(capability == ANIMATION_CAPABILITY)
-            {
+        public <T> T getCapability(@Nonnull Capability<T> capability, @Nullable EnumFacing facing) {
+            if (capability == ANIMATION_CAPABILITY) {
                 return ANIMATION_CAPABILITY.cast(asm);
             }
             return null;
