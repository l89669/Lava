--- ../src-base/minecraft/net/minecraftforge/common/util/WorldCapabilityData.java
+++ ../src-work/minecraft/net/minecraftforge/common/util/WorldCapabilityData.java
@@ -23,54 +23,45 @@
 import net.minecraft.world.WorldProvider;
 import net.minecraft.world.storage.WorldSavedData;
 
-public class WorldCapabilityData extends WorldSavedData
-{
+public class WorldCapabilityData extends WorldSavedData {
     public static final String ID = "capabilities";
 
     private INBTSerializable<NBTTagCompound> serializable;
     private NBTTagCompound capNBT = null;
 
-    public WorldCapabilityData(String name)
-    {
+    public WorldCapabilityData(String name) {
         super(name);
     }
 
-    public WorldCapabilityData(INBTSerializable<NBTTagCompound> serializable)
-    {
+    public WorldCapabilityData(INBTSerializable<NBTTagCompound> serializable) {
         super(ID);
         this.serializable = serializable;
     }
 
     @Override
-    public void readFromNBT(NBTTagCompound nbt)
-    {
+    public void readFromNBT(NBTTagCompound nbt) {
         this.capNBT = nbt;
-        if (serializable != null)
-        {
+        if (serializable != null) {
             serializable.deserializeNBT(this.capNBT);
             this.capNBT = null;
         }
     }
 
     @Override
-    public NBTTagCompound writeToNBT(NBTTagCompound nbt)
-    {
+    public NBTTagCompound writeToNBT(NBTTagCompound nbt) {
         if (serializable != null)
             nbt = serializable.serializeNBT();
         return nbt;
     }
 
     @Override
-    public boolean isDirty()
-    {
+    public boolean isDirty() {
         return true;
     }
 
-    public void setCapabilities(WorldProvider provider, INBTSerializable<NBTTagCompound> capabilities)
-    {
+    public void setCapabilities(WorldProvider provider, INBTSerializable<NBTTagCompound> capabilities) {
         this.serializable = capabilities;
-        if (this.capNBT != null && serializable != null)
-        {
+        if (this.capNBT != null && serializable != null) {
             serializable.deserializeNBT(this.capNBT);
             this.capNBT = null;
         }
