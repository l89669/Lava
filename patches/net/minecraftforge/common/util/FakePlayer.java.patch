--- ../src-base/minecraft/net/minecraftforge/common/util/FakePlayer.java
+++ ../src-work/minecraft/net/minecraftforge/common/util/FakePlayer.java
@@ -19,12 +19,8 @@
 
 package net.minecraftforge.common.util;
 
-import javax.annotation.Nullable;
-
 import com.mojang.authlib.GameProfile;
-
 import net.minecraft.entity.Entity;
-import net.minecraftforge.fml.common.FMLCommonHandler;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.network.play.client.CPacketClientSettings;
@@ -32,30 +28,79 @@
 import net.minecraft.server.management.PlayerInteractionManager;
 import net.minecraft.stats.StatBase;
 import net.minecraft.util.DamageSource;
-import net.minecraft.util.text.ITextComponent;
 import net.minecraft.util.math.Vec3d;
+import net.minecraft.util.text.ITextComponent;
 import net.minecraft.world.World;
 import net.minecraft.world.WorldServer;
+import net.minecraftforge.fml.common.FMLCommonHandler;
 
+import javax.annotation.Nullable;
+
 //Preliminary, simple Fake Player class
-public class FakePlayer extends EntityPlayerMP
-{
-    public FakePlayer(WorldServer world, GameProfile name)
-    {
+public class FakePlayer extends EntityPlayerMP {
+    public FakePlayer(WorldServer world, GameProfile name) {
         super(FMLCommonHandler.instance().getMinecraftServerInstance(), world, name, new PlayerInteractionManager(world));
     }
 
-    @Override public Vec3d getPositionVector(){ return new Vec3d(0, 0, 0); }
-    @Override public boolean canUseCommand(int i, String s){ return false; }
-    @Override public void sendStatusMessage(ITextComponent chatComponent, boolean actionBar){}
-    @Override public void sendMessage(ITextComponent component) {}
-    @Override public void addStat(StatBase par1StatBase, int par2){}
-    @Override public void openGui(Object mod, int modGuiId, World world, int x, int y, int z){}
-    @Override public boolean isEntityInvulnerable(DamageSource source){ return true; }
-    @Override public boolean canAttackPlayer(EntityPlayer player){ return false; }
-    @Override public void onDeath(DamageSource source){ return; }
-    @Override public void onUpdate(){ return; }
-    @Override public Entity changeDimension(int dim, ITeleporter teleporter){ return this; }
-    @Override public void handleClientSettings(CPacketClientSettings pkt){ return; }
-    @Override @Nullable public MinecraftServer getServer() { return FMLCommonHandler.instance().getMinecraftServerInstance(); }
+    @Override
+    public Vec3d getPositionVector() {
+        return new Vec3d(0, 0, 0);
+    }
+
+    @Override
+    public boolean canUseCommand(int i, String s) {
+        return false;
+    }
+
+    @Override
+    public void sendStatusMessage(ITextComponent chatComponent, boolean actionBar) {
+    }
+
+    @Override
+    public void sendMessage(ITextComponent component) {
+    }
+
+    @Override
+    public void addStat(StatBase par1StatBase, int par2) {
+    }
+
+    @Override
+    public void openGui(Object mod, int modGuiId, World world, int x, int y, int z) {
+    }
+
+    @Override
+    public boolean isEntityInvulnerable(DamageSource source) {
+        return true;
+    }
+
+    @Override
+    public boolean canAttackPlayer(EntityPlayer player) {
+        return false;
+    }
+
+    @Override
+    public void onDeath(DamageSource source) {
+        return;
+    }
+
+    @Override
+    public void onUpdate() {
+        return;
+    }
+
+    @Override
+    public Entity changeDimension(int dim, ITeleporter teleporter) {
+        return this;
+    }
+
+    @Override
+    public void handleClientSettings(CPacketClientSettings pkt) {
+        return;
+    }
+
+    @Override
+    @Nullable
+    public MinecraftServer getServer() {
+        return FMLCommonHandler.instance().getMinecraftServerInstance();
+    }
 }
